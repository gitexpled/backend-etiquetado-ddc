using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using SAP.Middleware.Connector;

namespace rfcBaika
{
    public class BAPI_PO_CHANGE
    {
        public responce_BAPI_PO_CHANGE sapRun(request_BAPI_PO_CHANGE import, RfcDestination configSap = null, RfcRepository SapRfcRepository = null)
        {
            bool directo = false;
            if (configSap == null)
            {
                directo = true;
                configSap = RfcDestinationManager.GetDestination("DDC");
                RfcSessionManager.BeginContext(configSap);
                SapRfcRepository = configSap.Repository;
            }

            IRfcFunction rfcFunction = SapRfcRepository.CreateFunction("BAPI_PO_CHANGE");

            //rfcFunction.SetValue("MEMORY_COMPLETE", import.MEMORY_COMPLETE);
            //rfcFunction.SetValue("MEMORY_UNCOMPLETE", import.MEMORY_UNCOMPLETE);
            //rfcFunction.SetValue("NO_AUTHORITY", import.NO_AUTHORITY);
            //rfcFunction.SetValue("NO_MESSAGE_REQ", import.NO_MESSAGE_REQ);
            //rfcFunction.SetValue("NO_MESSAGING", import.NO_MESSAGING);
            //rfcFunction.SetValue("NO_PRICE_FROM_PO", import.NO_PRICE_FROM_PO);
            //rfcFunction.SetValue("PARK_COMPLETE", import.PARK_COMPLETE);
            //rfcFunction.SetValue("PARK_UNCOMPLETE", import.PARK_UNCOMPLETE);
            //RfcStructureMetadata obj_BAPIMEPOADDRVENDOR = SapRfcRepository.GetStructureMetadata("BAPIMEPOADDRVENDOR");
            //IRfcStructure datos_BAPIMEPOADDRVENDOR = obj_BAPIMEPOADDRVENDOR.CreateStructure();
            //datos_BAPIMEPOADDRVENDOR.SetValue("PO_NUMBER", import.POADDRVENDOR.PO_NUMBER);
            //datos_BAPIMEPOADDRVENDOR.SetValue("ADDR_NO", import.POADDRVENDOR.ADDR_NO);
            //datos_BAPIMEPOADDRVENDOR.SetValue("FORMOFADDR", import.POADDRVENDOR.FORMOFADDR);
            //datos_BAPIMEPOADDRVENDOR.SetValue("NAME", import.POADDRVENDOR.NAME);
            //datos_BAPIMEPOADDRVENDOR.SetValue("NAME_2", import.POADDRVENDOR.NAME_2);
            //datos_BAPIMEPOADDRVENDOR.SetValue("NAME_3", import.POADDRVENDOR.NAME_3);
            //datos_BAPIMEPOADDRVENDOR.SetValue("NAME_4", import.POADDRVENDOR.NAME_4);
            //datos_BAPIMEPOADDRVENDOR.SetValue("C_O_NAME", import.POADDRVENDOR.C_O_NAME);
            //datos_BAPIMEPOADDRVENDOR.SetValue("CITY", import.POADDRVENDOR.CITY);
            //datos_BAPIMEPOADDRVENDOR.SetValue("DISTRICT", import.POADDRVENDOR.DISTRICT);
            //datos_BAPIMEPOADDRVENDOR.SetValue("CITY_NO", import.POADDRVENDOR.CITY_NO);
            //datos_BAPIMEPOADDRVENDOR.SetValue("POSTL_COD1", import.POADDRVENDOR.POSTL_COD1);
            //datos_BAPIMEPOADDRVENDOR.SetValue("POSTL_COD2", import.POADDRVENDOR.POSTL_COD2);
            //datos_BAPIMEPOADDRVENDOR.SetValue("POSTL_COD3", import.POADDRVENDOR.POSTL_COD3);
            //datos_BAPIMEPOADDRVENDOR.SetValue("PO_BOX", import.POADDRVENDOR.PO_BOX);
            //datos_BAPIMEPOADDRVENDOR.SetValue("PO_BOX_CIT", import.POADDRVENDOR.PO_BOX_CIT);
            //datos_BAPIMEPOADDRVENDOR.SetValue("DELIV_DIS", import.POADDRVENDOR.DELIV_DIS);
            //datos_BAPIMEPOADDRVENDOR.SetValue("STREET", import.POADDRVENDOR.STREET);
            //datos_BAPIMEPOADDRVENDOR.SetValue("STREET_NO", import.POADDRVENDOR.STREET_NO);
            //datos_BAPIMEPOADDRVENDOR.SetValue("STR_ABBR", import.POADDRVENDOR.STR_ABBR);
            //datos_BAPIMEPOADDRVENDOR.SetValue("HOUSE_NO", import.POADDRVENDOR.HOUSE_NO);
            //datos_BAPIMEPOADDRVENDOR.SetValue("STR_SUPPL1", import.POADDRVENDOR.STR_SUPPL1);
            //datos_BAPIMEPOADDRVENDOR.SetValue("STR_SUPPL2", import.POADDRVENDOR.STR_SUPPL2);
            //datos_BAPIMEPOADDRVENDOR.SetValue("LOCATION", import.POADDRVENDOR.LOCATION);
            //datos_BAPIMEPOADDRVENDOR.SetValue("BUILDING", import.POADDRVENDOR.BUILDING);
            //datos_BAPIMEPOADDRVENDOR.SetValue("FLOOR", import.POADDRVENDOR.FLOOR);
            //datos_BAPIMEPOADDRVENDOR.SetValue("ROOM_NO", import.POADDRVENDOR.ROOM_NO);
            //datos_BAPIMEPOADDRVENDOR.SetValue("COUNTRY", import.POADDRVENDOR.COUNTRY);
            //datos_BAPIMEPOADDRVENDOR.SetValue("LANGU", import.POADDRVENDOR.LANGU);
            //datos_BAPIMEPOADDRVENDOR.SetValue("REGION", import.POADDRVENDOR.REGION);
            //datos_BAPIMEPOADDRVENDOR.SetValue("SORT1", import.POADDRVENDOR.SORT1);
            //datos_BAPIMEPOADDRVENDOR.SetValue("SORT2", import.POADDRVENDOR.SORT2);
            //datos_BAPIMEPOADDRVENDOR.SetValue("TIME_ZONE", import.POADDRVENDOR.TIME_ZONE);
            //datos_BAPIMEPOADDRVENDOR.SetValue("TAXJURCODE", import.POADDRVENDOR.TAXJURCODE);
            //datos_BAPIMEPOADDRVENDOR.SetValue("ADR_NOTES", import.POADDRVENDOR.ADR_NOTES);
            //datos_BAPIMEPOADDRVENDOR.SetValue("COMM_TYPE", import.POADDRVENDOR.COMM_TYPE);
            //datos_BAPIMEPOADDRVENDOR.SetValue("TEL1_NUMBR", import.POADDRVENDOR.TEL1_NUMBR);
            //datos_BAPIMEPOADDRVENDOR.SetValue("TEL1_EXT", import.POADDRVENDOR.TEL1_EXT);
            //datos_BAPIMEPOADDRVENDOR.SetValue("FAX_NUMBER", import.POADDRVENDOR.FAX_NUMBER);
            //datos_BAPIMEPOADDRVENDOR.SetValue("FAX_EXTENS", import.POADDRVENDOR.FAX_EXTENS);
            //datos_BAPIMEPOADDRVENDOR.SetValue("STREET_LNG", import.POADDRVENDOR.STREET_LNG);
            //datos_BAPIMEPOADDRVENDOR.SetValue("DISTRCT_NO", import.POADDRVENDOR.DISTRCT_NO);
            //datos_BAPIMEPOADDRVENDOR.SetValue("CHCKSTATUS", import.POADDRVENDOR.CHCKSTATUS);
            //datos_BAPIMEPOADDRVENDOR.SetValue("PBOXCIT_NO", import.POADDRVENDOR.PBOXCIT_NO);
            //datos_BAPIMEPOADDRVENDOR.SetValue("TRANSPZONE", import.POADDRVENDOR.TRANSPZONE);
            //datos_BAPIMEPOADDRVENDOR.SetValue("HOUSE_NO2", import.POADDRVENDOR.HOUSE_NO2);
            //datos_BAPIMEPOADDRVENDOR.SetValue("E_MAIL", import.POADDRVENDOR.E_MAIL);
            //datos_BAPIMEPOADDRVENDOR.SetValue("STR_SUPPL3", import.POADDRVENDOR.STR_SUPPL3);
            //datos_BAPIMEPOADDRVENDOR.SetValue("TITLE", import.POADDRVENDOR.TITLE);
            //datos_BAPIMEPOADDRVENDOR.SetValue("COUNTRYISO", import.POADDRVENDOR.COUNTRYISO);
            //datos_BAPIMEPOADDRVENDOR.SetValue("LANGU_ISO", import.POADDRVENDOR.LANGU_ISO);
            //datos_BAPIMEPOADDRVENDOR.SetValue("BUILD_LONG", import.POADDRVENDOR.BUILD_LONG);
            //datos_BAPIMEPOADDRVENDOR.SetValue("REGIOGROUP", import.POADDRVENDOR.REGIOGROUP);
            //rfcFunction.SetValue("POADDRVENDOR", datos_BAPIMEPOADDRVENDOR);
            //RfcStructureMetadata obj_BAPIEIKP = SapRfcRepository.GetStructureMetadata("BAPIEIKP");
            //IRfcStructure datos_BAPIEIKP = obj_BAPIEIKP.CreateStructure();
            //datos_BAPIEIKP.SetValue("TRANSPORT_MODE", import.POEXPIMPHEADER.TRANSPORT_MODE);
            //datos_BAPIEIKP.SetValue("CUSTOMS", import.POEXPIMPHEADER.CUSTOMS);
            //rfcFunction.SetValue("POEXPIMPHEADER", datos_BAPIEIKP);
            //RfcStructureMetadata obj_BAPIEIKPX = SapRfcRepository.GetStructureMetadata("BAPIEIKPX");
            //IRfcStructure datos_BAPIEIKPX = obj_BAPIEIKPX.CreateStructure();
            //datos_BAPIEIKPX.SetValue("TRANSPORT_MODE", import.POEXPIMPHEADERX.TRANSPORT_MODE);
            //datos_BAPIEIKPX.SetValue("CUSTOMS", import.POEXPIMPHEADERX.CUSTOMS);
            //rfcFunction.SetValue("POEXPIMPHEADERX", datos_BAPIEIKPX);
            //RfcStructureMetadata obj_BAPIMEPOHEADER = SapRfcRepository.GetStructureMetadata("BAPIMEPOHEADER");
            //IRfcStructure datos_BAPIMEPOHEADER = obj_BAPIMEPOHEADER.CreateStructure();
            //datos_BAPIMEPOHEADER.SetValue("PO_NUMBER", import.POHEADER.PO_NUMBER);
            //datos_BAPIMEPOHEADER.SetValue("COMP_CODE", import.POHEADER.COMP_CODE);
            //datos_BAPIMEPOHEADER.SetValue("DOC_TYPE", import.POHEADER.DOC_TYPE);
            //datos_BAPIMEPOHEADER.SetValue("DELETE_IND", import.POHEADER.DELETE_IND);
            //datos_BAPIMEPOHEADER.SetValue("STATUS", import.POHEADER.STATUS);
            //datos_BAPIMEPOHEADER.SetValue("CREAT_DATE", import.POHEADER.CREAT_DATE);
            //datos_BAPIMEPOHEADER.SetValue("CREATED_BY", import.POHEADER.CREATED_BY);
            //datos_BAPIMEPOHEADER.SetValue("ITEM_INTVL", import.POHEADER.ITEM_INTVL);
            //datos_BAPIMEPOHEADER.SetValue("VENDOR", import.POHEADER.VENDOR);
            //datos_BAPIMEPOHEADER.SetValue("LANGU", import.POHEADER.LANGU);
            //datos_BAPIMEPOHEADER.SetValue("LANGU_ISO", import.POHEADER.LANGU_ISO);
            //datos_BAPIMEPOHEADER.SetValue("PMNTTRMS", import.POHEADER.PMNTTRMS);
            //datos_BAPIMEPOHEADER.SetValue("DSCNT1_TO", import.POHEADER.DSCNT1_TO);
            //datos_BAPIMEPOHEADER.SetValue("DSCNT2_TO", import.POHEADER.DSCNT2_TO);
            //datos_BAPIMEPOHEADER.SetValue("DSCNT3_TO", import.POHEADER.DSCNT3_TO);
            //datos_BAPIMEPOHEADER.SetValue("DSCT_PCT1", import.POHEADER.DSCT_PCT1);
            //datos_BAPIMEPOHEADER.SetValue("DSCT_PCT2", import.POHEADER.DSCT_PCT2);
            //datos_BAPIMEPOHEADER.SetValue("PURCH_ORG", import.POHEADER.PURCH_ORG);
            //datos_BAPIMEPOHEADER.SetValue("PUR_GROUP", import.POHEADER.PUR_GROUP);
            //datos_BAPIMEPOHEADER.SetValue("CURRENCY", import.POHEADER.CURRENCY);
            //datos_BAPIMEPOHEADER.SetValue("CURRENCY_ISO", import.POHEADER.CURRENCY_ISO);
            //datos_BAPIMEPOHEADER.SetValue("EXCH_RATE", import.POHEADER.EXCH_RATE);
            //datos_BAPIMEPOHEADER.SetValue("EX_RATE_FX", import.POHEADER.EX_RATE_FX);
            //datos_BAPIMEPOHEADER.SetValue("DOC_DATE", import.POHEADER.DOC_DATE);
            //datos_BAPIMEPOHEADER.SetValue("VPER_START", import.POHEADER.VPER_START);
            //datos_BAPIMEPOHEADER.SetValue("VPER_END", import.POHEADER.VPER_END);
            //datos_BAPIMEPOHEADER.SetValue("WARRANTY", import.POHEADER.WARRANTY);
            //datos_BAPIMEPOHEADER.SetValue("QUOTATION", import.POHEADER.QUOTATION);
            //datos_BAPIMEPOHEADER.SetValue("QUOT_DATE", import.POHEADER.QUOT_DATE);
            //datos_BAPIMEPOHEADER.SetValue("REF_1", import.POHEADER.REF_1);
            //datos_BAPIMEPOHEADER.SetValue("SALES_PERS", import.POHEADER.SALES_PERS);
            //datos_BAPIMEPOHEADER.SetValue("TELEPHONE", import.POHEADER.TELEPHONE);
            //datos_BAPIMEPOHEADER.SetValue("SUPPL_VEND", import.POHEADER.SUPPL_VEND);
            //datos_BAPIMEPOHEADER.SetValue("CUSTOMER", import.POHEADER.CUSTOMER);
            //datos_BAPIMEPOHEADER.SetValue("AGREEMENT", import.POHEADER.AGREEMENT);
            //datos_BAPIMEPOHEADER.SetValue("GR_MESSAGE", import.POHEADER.GR_MESSAGE);
            //datos_BAPIMEPOHEADER.SetValue("SUPPL_PLNT", import.POHEADER.SUPPL_PLNT);
            //datos_BAPIMEPOHEADER.SetValue("INCOTERMS1", import.POHEADER.INCOTERMS1);
            //datos_BAPIMEPOHEADER.SetValue("INCOTERMS2", import.POHEADER.INCOTERMS2);
            //datos_BAPIMEPOHEADER.SetValue("COLLECT_NO", import.POHEADER.COLLECT_NO);
            //datos_BAPIMEPOHEADER.SetValue("DIFF_INV", import.POHEADER.DIFF_INV);
            //datos_BAPIMEPOHEADER.SetValue("OUR_REF", import.POHEADER.OUR_REF);
            //datos_BAPIMEPOHEADER.SetValue("LOGSYSTEM", import.POHEADER.LOGSYSTEM);
            //datos_BAPIMEPOHEADER.SetValue("SUBITEMINT", import.POHEADER.SUBITEMINT);
            //datos_BAPIMEPOHEADER.SetValue("PO_REL_IND", import.POHEADER.PO_REL_IND);
            //datos_BAPIMEPOHEADER.SetValue("REL_STATUS", import.POHEADER.REL_STATUS);
            //datos_BAPIMEPOHEADER.SetValue("VAT_CNTRY", import.POHEADER.VAT_CNTRY);
            //datos_BAPIMEPOHEADER.SetValue("VAT_CNTRY_ISO", import.POHEADER.VAT_CNTRY_ISO);
            //datos_BAPIMEPOHEADER.SetValue("REASON_CANCEL", import.POHEADER.REASON_CANCEL);
            //datos_BAPIMEPOHEADER.SetValue("REASON_CODE", import.POHEADER.REASON_CODE);
            //datos_BAPIMEPOHEADER.SetValue("RETENTION_TYPE", import.POHEADER.RETENTION_TYPE);
            //datos_BAPIMEPOHEADER.SetValue("RETENTION_PERCENTAGE", import.POHEADER.RETENTION_PERCENTAGE);
            //datos_BAPIMEPOHEADER.SetValue("DOWNPAY_TYPE", import.POHEADER.DOWNPAY_TYPE);
            //datos_BAPIMEPOHEADER.SetValue("DOWNPAY_AMOUNT", import.POHEADER.DOWNPAY_AMOUNT);
            //datos_BAPIMEPOHEADER.SetValue("DOWNPAY_PERCENT", import.POHEADER.DOWNPAY_PERCENT);
            //datos_BAPIMEPOHEADER.SetValue("DOWNPAY_DUEDATE", import.POHEADER.DOWNPAY_DUEDATE);
            //datos_BAPIMEPOHEADER.SetValue("MEMORY", import.POHEADER.MEMORY);
            //datos_BAPIMEPOHEADER.SetValue("MEMORYTYPE", import.POHEADER.MEMORYTYPE);
            //datos_BAPIMEPOHEADER.SetValue("SHIPTYPE", import.POHEADER.SHIPTYPE);
            //datos_BAPIMEPOHEADER.SetValue("HANDOVERLOC", import.POHEADER.HANDOVERLOC);
            //datos_BAPIMEPOHEADER.SetValue("SHIPCOND", import.POHEADER.SHIPCOND);
            //datos_BAPIMEPOHEADER.SetValue("INCOTERMSV", import.POHEADER.INCOTERMSV);
            //datos_BAPIMEPOHEADER.SetValue("INCOTERMS2L", import.POHEADER.INCOTERMS2L);
            //datos_BAPIMEPOHEADER.SetValue("INCOTERMS3L", import.POHEADER.INCOTERMS3L);
            //rfcFunction.SetValue("POHEADER", datos_BAPIMEPOHEADER);
            //RfcStructureMetadata obj_BAPIMEPOHEADERX = SapRfcRepository.GetStructureMetadata("BAPIMEPOHEADERX");
            //IRfcStructure datos_BAPIMEPOHEADERX = obj_BAPIMEPOHEADERX.CreateStructure();
            //datos_BAPIMEPOHEADERX.SetValue("PO_NUMBER", import.POHEADERX.PO_NUMBER);
            //datos_BAPIMEPOHEADERX.SetValue("COMP_CODE", import.POHEADERX.COMP_CODE);
            //datos_BAPIMEPOHEADERX.SetValue("DOC_TYPE", import.POHEADERX.DOC_TYPE);
            //datos_BAPIMEPOHEADERX.SetValue("DELETE_IND", import.POHEADERX.DELETE_IND);
            //datos_BAPIMEPOHEADERX.SetValue("STATUS", import.POHEADERX.STATUS);
            //datos_BAPIMEPOHEADERX.SetValue("CREAT_DATE", import.POHEADERX.CREAT_DATE);
            //datos_BAPIMEPOHEADERX.SetValue("CREATED_BY", import.POHEADERX.CREATED_BY);
            //datos_BAPIMEPOHEADERX.SetValue("ITEM_INTVL", import.POHEADERX.ITEM_INTVL);
            //datos_BAPIMEPOHEADERX.SetValue("VENDOR", import.POHEADERX.VENDOR);
            //datos_BAPIMEPOHEADERX.SetValue("LANGU", import.POHEADERX.LANGU);
            //datos_BAPIMEPOHEADERX.SetValue("LANGU_ISO", import.POHEADERX.LANGU_ISO);
            //datos_BAPIMEPOHEADERX.SetValue("PMNTTRMS", import.POHEADERX.PMNTTRMS);
            //datos_BAPIMEPOHEADERX.SetValue("DSCNT1_TO", import.POHEADERX.DSCNT1_TO);
            //datos_BAPIMEPOHEADERX.SetValue("DSCNT2_TO", import.POHEADERX.DSCNT2_TO);
            //datos_BAPIMEPOHEADERX.SetValue("DSCNT3_TO", import.POHEADERX.DSCNT3_TO);
            //datos_BAPIMEPOHEADERX.SetValue("DSCT_PCT1", import.POHEADERX.DSCT_PCT1);
            //datos_BAPIMEPOHEADERX.SetValue("DSCT_PCT2", import.POHEADERX.DSCT_PCT2);
            //datos_BAPIMEPOHEADERX.SetValue("PURCH_ORG", import.POHEADERX.PURCH_ORG);
            //datos_BAPIMEPOHEADERX.SetValue("PUR_GROUP", import.POHEADERX.PUR_GROUP);
            //datos_BAPIMEPOHEADERX.SetValue("CURRENCY", import.POHEADERX.CURRENCY);
            //datos_BAPIMEPOHEADERX.SetValue("CURRENCY_ISO", import.POHEADERX.CURRENCY_ISO);
            //datos_BAPIMEPOHEADERX.SetValue("EXCH_RATE", import.POHEADERX.EXCH_RATE);
            //datos_BAPIMEPOHEADERX.SetValue("EX_RATE_FX", import.POHEADERX.EX_RATE_FX);
            //datos_BAPIMEPOHEADERX.SetValue("DOC_DATE", import.POHEADERX.DOC_DATE);
            //datos_BAPIMEPOHEADERX.SetValue("VPER_START", import.POHEADERX.VPER_START);
            //datos_BAPIMEPOHEADERX.SetValue("VPER_END", import.POHEADERX.VPER_END);
            //datos_BAPIMEPOHEADERX.SetValue("WARRANTY", import.POHEADERX.WARRANTY);
            //datos_BAPIMEPOHEADERX.SetValue("QUOTATION", import.POHEADERX.QUOTATION);
            //datos_BAPIMEPOHEADERX.SetValue("QUOT_DATE", import.POHEADERX.QUOT_DATE);
            //datos_BAPIMEPOHEADERX.SetValue("REF_1", import.POHEADERX.REF_1);
            //datos_BAPIMEPOHEADERX.SetValue("SALES_PERS", import.POHEADERX.SALES_PERS);
            //datos_BAPIMEPOHEADERX.SetValue("TELEPHONE", import.POHEADERX.TELEPHONE);
            //datos_BAPIMEPOHEADERX.SetValue("SUPPL_VEND", import.POHEADERX.SUPPL_VEND);
            //datos_BAPIMEPOHEADERX.SetValue("CUSTOMER", import.POHEADERX.CUSTOMER);
            //datos_BAPIMEPOHEADERX.SetValue("AGREEMENT", import.POHEADERX.AGREEMENT);
            //datos_BAPIMEPOHEADERX.SetValue("GR_MESSAGE", import.POHEADERX.GR_MESSAGE);
            //datos_BAPIMEPOHEADERX.SetValue("SUPPL_PLNT", import.POHEADERX.SUPPL_PLNT);
            //datos_BAPIMEPOHEADERX.SetValue("INCOTERMS1", import.POHEADERX.INCOTERMS1);
            //datos_BAPIMEPOHEADERX.SetValue("INCOTERMS2", import.POHEADERX.INCOTERMS2);
            //datos_BAPIMEPOHEADERX.SetValue("COLLECT_NO", import.POHEADERX.COLLECT_NO);
            //datos_BAPIMEPOHEADERX.SetValue("DIFF_INV", import.POHEADERX.DIFF_INV);
            //datos_BAPIMEPOHEADERX.SetValue("OUR_REF", import.POHEADERX.OUR_REF);
            //datos_BAPIMEPOHEADERX.SetValue("LOGSYSTEM", import.POHEADERX.LOGSYSTEM);
            //datos_BAPIMEPOHEADERX.SetValue("SUBITEMINT", import.POHEADERX.SUBITEMINT);
            //datos_BAPIMEPOHEADERX.SetValue("PO_REL_IND", import.POHEADERX.PO_REL_IND);
            //datos_BAPIMEPOHEADERX.SetValue("REL_STATUS", import.POHEADERX.REL_STATUS);
            //datos_BAPIMEPOHEADERX.SetValue("VAT_CNTRY", import.POHEADERX.VAT_CNTRY);
            //datos_BAPIMEPOHEADERX.SetValue("VAT_CNTRY_ISO", import.POHEADERX.VAT_CNTRY_ISO);
            //datos_BAPIMEPOHEADERX.SetValue("REASON_CANCEL", import.POHEADERX.REASON_CANCEL);
            //datos_BAPIMEPOHEADERX.SetValue("REASON_CODE", import.POHEADERX.REASON_CODE);
            //datos_BAPIMEPOHEADERX.SetValue("RETENTION_TYPE", import.POHEADERX.RETENTION_TYPE);
            //datos_BAPIMEPOHEADERX.SetValue("RETENTION_PERCENTAGE", import.POHEADERX.RETENTION_PERCENTAGE);
            //datos_BAPIMEPOHEADERX.SetValue("DOWNPAY_TYPE", import.POHEADERX.DOWNPAY_TYPE);
            //datos_BAPIMEPOHEADERX.SetValue("DOWNPAY_AMOUNT", import.POHEADERX.DOWNPAY_AMOUNT);
            //datos_BAPIMEPOHEADERX.SetValue("DOWNPAY_PERCENT", import.POHEADERX.DOWNPAY_PERCENT);
            //datos_BAPIMEPOHEADERX.SetValue("DOWNPAY_DUEDATE", import.POHEADERX.DOWNPAY_DUEDATE);
            //datos_BAPIMEPOHEADERX.SetValue("MEMORY", import.POHEADERX.MEMORY);
            //datos_BAPIMEPOHEADERX.SetValue("MEMORYTYPE", import.POHEADERX.MEMORYTYPE);
            //datos_BAPIMEPOHEADERX.SetValue("SHIPTYPE", import.POHEADERX.SHIPTYPE);
            //datos_BAPIMEPOHEADERX.SetValue("HANDOVERLOC", import.POHEADERX.HANDOVERLOC);
            //datos_BAPIMEPOHEADERX.SetValue("SHIPCOND", import.POHEADERX.SHIPCOND);
            //datos_BAPIMEPOHEADERX.SetValue("INCOTERMSV", import.POHEADERX.INCOTERMSV);
            //datos_BAPIMEPOHEADERX.SetValue("INCOTERMS2L", import.POHEADERX.INCOTERMS2L);
            //datos_BAPIMEPOHEADERX.SetValue("INCOTERMS3L", import.POHEADERX.INCOTERMS3L);
            //rfcFunction.SetValue("POHEADERX", datos_BAPIMEPOHEADERX);
            rfcFunction.SetValue("PURCHASEORDER", import.PURCHASEORDER);
            //rfcFunction.SetValue("TESTRUN", import.TESTRUN);
            //RfcStructureMetadata obj_BAPIMEDCM = SapRfcRepository.GetStructureMetadata("BAPIMEDCM");
            //IRfcStructure datos_BAPIMEDCM = obj_BAPIMEDCM.CreateStructure();
            //datos_BAPIMEDCM.SetValue("POST_DATE", import.VERSIONS.POST_DATE);
            //datos_BAPIMEDCM.SetValue("COMPLETED", import.VERSIONS.COMPLETED);
            //datos_BAPIMEDCM.SetValue("REASON", import.VERSIONS.REASON);
            //datos_BAPIMEDCM.SetValue("DESCRIPTION", import.VERSIONS.DESCRIPTION);
            //datos_BAPIMEDCM.SetValue("REQ_BY", import.VERSIONS.REQ_BY);
            //datos_BAPIMEDCM.SetValue("REQ_BY_EXT", import.VERSIONS.REQ_BY_EXT);
            //datos_BAPIMEDCM.SetValue("ACTIVITY", import.VERSIONS.ACTIVITY);
            //rfcFunction.SetValue("VERSIONS", datos_BAPIMEDCM);
            IRfcTable rfcTable_POITEM_I = rfcFunction.GetTable("POITEM");
            foreach (BAPI_PO_CHANGE_POITEM row in import.POITEM)
            {
                rfcTable_POITEM_I.Append();
                BAPI_PO_CHANGE_POITEM datoTabla = new BAPI_PO_CHANGE_POITEM();
                rfcTable_POITEM_I.SetValue("PO_ITEM", row.PO_ITEM);
                rfcTable_POITEM_I.SetValue("DELETE_IND", row.DELETE_IND);

                //rfcTable_POITEM_I.SetValue("SHORT_TEXT", row.SHORT_TEXT);
                //rfcTable_POITEM_I.SetValue("MATERIAL", row.MATERIAL);
                //rfcTable_POITEM_I.SetValue("MATERIAL_EXTERNAL", row.MATERIAL_EXTERNAL);
                //rfcTable_POITEM_I.SetValue("MATERIAL_GUID", row.MATERIAL_GUID);
                //rfcTable_POITEM_I.SetValue("MATERIAL_VERSION", row.MATERIAL_VERSION);
                //rfcTable_POITEM_I.SetValue("EMATERIAL", row.EMATERIAL);
                //rfcTable_POITEM_I.SetValue("EMATERIAL_EXTERNAL", row.EMATERIAL_EXTERNAL);
                //rfcTable_POITEM_I.SetValue("EMATERIAL_GUID", row.EMATERIAL_GUID);
                //rfcTable_POITEM_I.SetValue("EMATERIAL_VERSION", row.EMATERIAL_VERSION);
                //rfcTable_POITEM_I.SetValue("PLANT", row.PLANT);
                //rfcTable_POITEM_I.SetValue("STGE_LOC", row.STGE_LOC);
                //rfcTable_POITEM_I.SetValue("TRACKINGNO", row.TRACKINGNO);
                //rfcTable_POITEM_I.SetValue("MATL_GROUP", row.MATL_GROUP);
                //rfcTable_POITEM_I.SetValue("INFO_REC", row.INFO_REC);
                //rfcTable_POITEM_I.SetValue("VEND_MAT", row.VEND_MAT);
                //rfcTable_POITEM_I.SetValue("QUANTITY", row.QUANTITY);
                //rfcTable_POITEM_I.SetValue("PO_UNIT", row.PO_UNIT);
                //rfcTable_POITEM_I.SetValue("PO_UNIT_ISO", row.PO_UNIT_ISO);
                //rfcTable_POITEM_I.SetValue("ORDERPR_UN", row.ORDERPR_UN);
                //rfcTable_POITEM_I.SetValue("ORDERPR_UN_ISO", row.ORDERPR_UN_ISO);
                //rfcTable_POITEM_I.SetValue("CONV_NUM1", row.CONV_NUM1);
                //rfcTable_POITEM_I.SetValue("CONV_DEN1", row.CONV_DEN1);
                //rfcTable_POITEM_I.SetValue("NET_PRICE", row.NET_PRICE);
                //rfcTable_POITEM_I.SetValue("PRICE_UNIT", row.PRICE_UNIT);
                //rfcTable_POITEM_I.SetValue("GR_PR_TIME", row.GR_PR_TIME);
                //rfcTable_POITEM_I.SetValue("TAX_CODE", row.TAX_CODE);
                //rfcTable_POITEM_I.SetValue("BON_GRP1", row.BON_GRP1);
                //rfcTable_POITEM_I.SetValue("QUAL_INSP", row.QUAL_INSP);
                //rfcTable_POITEM_I.SetValue("INFO_UPD", row.INFO_UPD);
                //rfcTable_POITEM_I.SetValue("PRNT_PRICE", row.PRNT_PRICE);
                //rfcTable_POITEM_I.SetValue("EST_PRICE", row.EST_PRICE);
                //rfcTable_POITEM_I.SetValue("REMINDER1", row.REMINDER1);
                //rfcTable_POITEM_I.SetValue("REMINDER2", row.REMINDER2);
                //rfcTable_POITEM_I.SetValue("REMINDER3", row.REMINDER3);
                //rfcTable_POITEM_I.SetValue("OVER_DLV_TOL", row.OVER_DLV_TOL);
                //rfcTable_POITEM_I.SetValue("UNLIMITED_DLV", row.UNLIMITED_DLV);
                //rfcTable_POITEM_I.SetValue("UNDER_DLV_TOL", row.UNDER_DLV_TOL);
                //rfcTable_POITEM_I.SetValue("VAL_TYPE", row.VAL_TYPE);
                //rfcTable_POITEM_I.SetValue("NO_MORE_GR", row.NO_MORE_GR);
                //rfcTable_POITEM_I.SetValue("FINAL_INV", row.FINAL_INV);
                //rfcTable_POITEM_I.SetValue("ITEM_CAT", row.ITEM_CAT);
                //rfcTable_POITEM_I.SetValue("ACCTASSCAT", row.ACCTASSCAT);
                //rfcTable_POITEM_I.SetValue("DISTRIB", row.DISTRIB);
                //rfcTable_POITEM_I.SetValue("PART_INV", row.PART_INV);
                //rfcTable_POITEM_I.SetValue("GR_IND", row.GR_IND);
                //rfcTable_POITEM_I.SetValue("GR_NON_VAL", row.GR_NON_VAL);
                //rfcTable_POITEM_I.SetValue("IR_IND", row.IR_IND);
                //rfcTable_POITEM_I.SetValue("FREE_ITEM", row.FREE_ITEM);
                //rfcTable_POITEM_I.SetValue("GR_BASEDIV", row.GR_BASEDIV);
                //rfcTable_POITEM_I.SetValue("ACKN_REQD", row.ACKN_REQD);
                //rfcTable_POITEM_I.SetValue("ACKNOWL_NO", row.ACKNOWL_NO);
                //rfcTable_POITEM_I.SetValue("AGREEMENT", row.AGREEMENT);
                //rfcTable_POITEM_I.SetValue("AGMT_ITEM", row.AGMT_ITEM);
                //rfcTable_POITEM_I.SetValue("SHIPPING", row.SHIPPING);
                //rfcTable_POITEM_I.SetValue("CUSTOMER", row.CUSTOMER);
                //rfcTable_POITEM_I.SetValue("COND_GROUP", row.COND_GROUP);
                //rfcTable_POITEM_I.SetValue("NO_DISCT", row.NO_DISCT);
                //rfcTable_POITEM_I.SetValue("PLAN_DEL", row.PLAN_DEL);
                //rfcTable_POITEM_I.SetValue("NET_WEIGHT", row.NET_WEIGHT);
                //rfcTable_POITEM_I.SetValue("WEIGHTUNIT", row.WEIGHTUNIT);
                //rfcTable_POITEM_I.SetValue("WEIGHTUNIT_ISO", row.WEIGHTUNIT_ISO);
                //rfcTable_POITEM_I.SetValue("TAXJURCODE", row.TAXJURCODE);
                //rfcTable_POITEM_I.SetValue("CTRL_KEY", row.CTRL_KEY);
                //rfcTable_POITEM_I.SetValue("CONF_CTRL", row.CONF_CTRL);
                //rfcTable_POITEM_I.SetValue("REV_LEV", row.REV_LEV);
                //rfcTable_POITEM_I.SetValue("FUND", row.FUND);
                //rfcTable_POITEM_I.SetValue("FUNDS_CTR", row.FUNDS_CTR);
                //rfcTable_POITEM_I.SetValue("CMMT_ITEM", row.CMMT_ITEM);
                //rfcTable_POITEM_I.SetValue("PRICEDATE", row.PRICEDATE);
                //rfcTable_POITEM_I.SetValue("PRICE_DATE", row.PRICE_DATE);
                //rfcTable_POITEM_I.SetValue("GROSS_WT", row.GROSS_WT);
                //rfcTable_POITEM_I.SetValue("VOLUME", row.VOLUME);
                //rfcTable_POITEM_I.SetValue("VOLUMEUNIT", row.VOLUMEUNIT);
                //rfcTable_POITEM_I.SetValue("VOLUMEUNIT_ISO", row.VOLUMEUNIT_ISO);
                //rfcTable_POITEM_I.SetValue("INCOTERMS1", row.INCOTERMS1);
                //rfcTable_POITEM_I.SetValue("INCOTERMS2", row.INCOTERMS2);
                //rfcTable_POITEM_I.SetValue("PRE_VENDOR", row.PRE_VENDOR);
                //rfcTable_POITEM_I.SetValue("VEND_PART", row.VEND_PART);
                //rfcTable_POITEM_I.SetValue("HL_ITEM", row.HL_ITEM);
                //rfcTable_POITEM_I.SetValue("GR_TO_DATE", row.GR_TO_DATE);
                //rfcTable_POITEM_I.SetValue("SUPP_VENDOR", row.SUPP_VENDOR);
                //rfcTable_POITEM_I.SetValue("SC_VENDOR", row.SC_VENDOR);
                //rfcTable_POITEM_I.SetValue("KANBAN_IND", row.KANBAN_IND);
                //rfcTable_POITEM_I.SetValue("ERS", row.ERS);
                //rfcTable_POITEM_I.SetValue("R_PROMO", row.R_PROMO);
                //rfcTable_POITEM_I.SetValue("POINTS", row.POINTS);
                //rfcTable_POITEM_I.SetValue("POINT_UNIT", row.POINT_UNIT);
                //rfcTable_POITEM_I.SetValue("POINT_UNIT_ISO", row.POINT_UNIT_ISO);
                //rfcTable_POITEM_I.SetValue("SEASON", row.SEASON);
                //rfcTable_POITEM_I.SetValue("SEASON_YR", row.SEASON_YR);
                //rfcTable_POITEM_I.SetValue("BON_GRP2", row.BON_GRP2);
                //rfcTable_POITEM_I.SetValue("BON_GRP3", row.BON_GRP3);
                //rfcTable_POITEM_I.SetValue("SETT_ITEM", row.SETT_ITEM);
                //rfcTable_POITEM_I.SetValue("MINREMLIFE", row.MINREMLIFE);
                //rfcTable_POITEM_I.SetValue("RFQ_NO", row.RFQ_NO);
                //rfcTable_POITEM_I.SetValue("RFQ_ITEM", row.RFQ_ITEM);
                //rfcTable_POITEM_I.SetValue("PREQ_NO", row.PREQ_NO);
                //rfcTable_POITEM_I.SetValue("PREQ_ITEM", row.PREQ_ITEM);
                //rfcTable_POITEM_I.SetValue("REF_DOC", row.REF_DOC);
                //rfcTable_POITEM_I.SetValue("REF_ITEM", row.REF_ITEM);
                //rfcTable_POITEM_I.SetValue("SI_CAT", row.SI_CAT);
                //rfcTable_POITEM_I.SetValue("RET_ITEM", row.RET_ITEM);
                //rfcTable_POITEM_I.SetValue("AT_RELEV", row.AT_RELEV);
                //rfcTable_POITEM_I.SetValue("ORDER_REASON", row.ORDER_REASON);
                //rfcTable_POITEM_I.SetValue("BRAS_NBM", row.BRAS_NBM);
                //rfcTable_POITEM_I.SetValue("MATL_USAGE", row.MATL_USAGE);
                //rfcTable_POITEM_I.SetValue("MAT_ORIGIN", row.MAT_ORIGIN);
                //rfcTable_POITEM_I.SetValue("IN_HOUSE", row.IN_HOUSE);
                //rfcTable_POITEM_I.SetValue("INDUS3", row.INDUS3);
                //rfcTable_POITEM_I.SetValue("INF_INDEX", row.INF_INDEX);
                //rfcTable_POITEM_I.SetValue("UNTIL_DATE", row.UNTIL_DATE);
                //rfcTable_POITEM_I.SetValue("DELIV_COMPL", row.DELIV_COMPL);
                //rfcTable_POITEM_I.SetValue("PART_DELIV", row.PART_DELIV);
                //rfcTable_POITEM_I.SetValue("SHIP_BLOCKED", row.SHIP_BLOCKED);
                //rfcTable_POITEM_I.SetValue("PREQ_NAME", row.PREQ_NAME);
                //rfcTable_POITEM_I.SetValue("PERIOD_IND_EXPIRATION_DATE", row.PERIOD_IND_EXPIRATION_DATE);
                //rfcTable_POITEM_I.SetValue("INT_OBJ_NO", row.INT_OBJ_NO);
                //rfcTable_POITEM_I.SetValue("PCKG_NO", row.PCKG_NO);
                //rfcTable_POITEM_I.SetValue("BATCH", row.BATCH);
                //rfcTable_POITEM_I.SetValue("VENDRBATCH", row.VENDRBATCH);
                //rfcTable_POITEM_I.SetValue("CALCTYPE", row.CALCTYPE);
                //rfcTable_POITEM_I.SetValue("GRANT_NBR", row.GRANT_NBR);
                //rfcTable_POITEM_I.SetValue("CMMT_ITEM_LONG", row.CMMT_ITEM_LONG);
                //rfcTable_POITEM_I.SetValue("FUNC_AREA_LONG", row.FUNC_AREA_LONG);
                //rfcTable_POITEM_I.SetValue("NO_ROUNDING", row.NO_ROUNDING);
                //rfcTable_POITEM_I.SetValue("PO_PRICE", row.PO_PRICE);
                //rfcTable_POITEM_I.SetValue("SUPPL_STLOC", row.SUPPL_STLOC);
                //rfcTable_POITEM_I.SetValue("SRV_BASED_IV", row.SRV_BASED_IV);
                //rfcTable_POITEM_I.SetValue("FUNDS_RES", row.FUNDS_RES);
                //rfcTable_POITEM_I.SetValue("RES_ITEM", row.RES_ITEM);
                //rfcTable_POITEM_I.SetValue("ORIG_ACCEPT", row.ORIG_ACCEPT);
                //rfcTable_POITEM_I.SetValue("ALLOC_TBL", row.ALLOC_TBL);
                //rfcTable_POITEM_I.SetValue("ALLOC_TBL_ITEM", row.ALLOC_TBL_ITEM);
                //rfcTable_POITEM_I.SetValue("SRC_STOCK_TYPE", row.SRC_STOCK_TYPE);
                //rfcTable_POITEM_I.SetValue("REASON_REJ", row.REASON_REJ);
                //rfcTable_POITEM_I.SetValue("CRM_SALES_ORDER_NO", row.CRM_SALES_ORDER_NO);
                //rfcTable_POITEM_I.SetValue("CRM_SALES_ORDER_ITEM_NO", row.CRM_SALES_ORDER_ITEM_NO);
                //rfcTable_POITEM_I.SetValue("CRM_REF_SALES_ORDER_NO", row.CRM_REF_SALES_ORDER_NO);
                //rfcTable_POITEM_I.SetValue("CRM_REF_SO_ITEM_NO", row.CRM_REF_SO_ITEM_NO);
                //rfcTable_POITEM_I.SetValue("PRIO_URGENCY", row.PRIO_URGENCY);
                //rfcTable_POITEM_I.SetValue("PRIO_REQUIREMENT", row.PRIO_REQUIREMENT);
                //rfcTable_POITEM_I.SetValue("REASON_CODE", row.REASON_CODE);
                //rfcTable_POITEM_I.SetValue("FUND_LONG", row.FUND_LONG);
                //rfcTable_POITEM_I.SetValue("LONG_ITEM_NUMBER", row.LONG_ITEM_NUMBER);
                //rfcTable_POITEM_I.SetValue("EXTERNAL_SORT_NUMBER", row.EXTERNAL_SORT_NUMBER);
                //rfcTable_POITEM_I.SetValue("EXTERNAL_HIERARCHY_TYPE", row.EXTERNAL_HIERARCHY_TYPE);
                //rfcTable_POITEM_I.SetValue("RETENTION_PERCENTAGE", row.RETENTION_PERCENTAGE);
                //rfcTable_POITEM_I.SetValue("DOWNPAY_TYPE", row.DOWNPAY_TYPE);
                //rfcTable_POITEM_I.SetValue("DOWNPAY_AMOUNT", row.DOWNPAY_AMOUNT);
                //rfcTable_POITEM_I.SetValue("DOWNPAY_PERCENT", row.DOWNPAY_PERCENT);
                //rfcTable_POITEM_I.SetValue("DOWNPAY_DUEDATE", row.DOWNPAY_DUEDATE);
                //rfcTable_POITEM_I.SetValue("EXT_RFX_NUMBER", row.EXT_RFX_NUMBER);
                //rfcTable_POITEM_I.SetValue("EXT_RFX_ITEM", row.EXT_RFX_ITEM);
                //rfcTable_POITEM_I.SetValue("EXT_RFX_SYSTEM", row.EXT_RFX_SYSTEM);
                //rfcTable_POITEM_I.SetValue("SRM_CONTRACT_ID", row.SRM_CONTRACT_ID);
                //rfcTable_POITEM_I.SetValue("SRM_CONTRACT_ITM", row.SRM_CONTRACT_ITM);
                //rfcTable_POITEM_I.SetValue("BUDGET_PERIOD", row.BUDGET_PERIOD);
                //rfcTable_POITEM_I.SetValue("BLOCK_REASON_ID", row.BLOCK_REASON_ID);
                //rfcTable_POITEM_I.SetValue("BLOCK_REASON_TEXT", row.BLOCK_REASON_TEXT);
                //rfcTable_POITEM_I.SetValue("SPE_CRM_FKREL", row.SPE_CRM_FKREL);
                //rfcTable_POITEM_I.SetValue("DATE_QTY_FIXED", row.DATE_QTY_FIXED);
                //rfcTable_POITEM_I.SetValue("GI_BASED_GR", row.GI_BASED_GR);
                //rfcTable_POITEM_I.SetValue("SHIPTYPE", row.SHIPTYPE);
                //rfcTable_POITEM_I.SetValue("HANDOVERLOC", row.HANDOVERLOC);
                //rfcTable_POITEM_I.SetValue("TC_AUT_DET", row.TC_AUT_DET);
                //rfcTable_POITEM_I.SetValue("MANUAL_TC_REASON", row.MANUAL_TC_REASON);
                //rfcTable_POITEM_I.SetValue("FISCAL_INCENTIVE", row.FISCAL_INCENTIVE);
                //rfcTable_POITEM_I.SetValue("FISCAL_INCENTIVE_ID", row.FISCAL_INCENTIVE_ID);
                //rfcTable_POITEM_I.SetValue("TAX_SUBJECT_ST", row.TAX_SUBJECT_ST);
                //rfcTable_POITEM_I.SetValue("REQ_SEGMENT", row.REQ_SEGMENT);
                //rfcTable_POITEM_I.SetValue("STK_SEGMENT", row.STK_SEGMENT);
                //rfcTable_POITEM_I.SetValue("SF_TXJCD", row.SF_TXJCD);
                //rfcTable_POITEM_I.SetValue("INCOTERMS2L", row.INCOTERMS2L);
                //rfcTable_POITEM_I.SetValue("INCOTERMS3L", row.INCOTERMS3L);
                //rfcTable_POITEM_I.SetValue("MATERIAL_LONG", row.MATERIAL_LONG);
                //rfcTable_POITEM_I.SetValue("EMATERIAL_LONG", row.EMATERIAL_LONG);
                //rfcTable_POITEM_I.SetValue("SERVICEPERFORMER", row.SERVICEPERFORMER);
                //rfcTable_POITEM_I.SetValue("PRODUCTTYPE", row.PRODUCTTYPE);
                //rfcTable_POITEM_I.SetValue("STARTDATE", row.STARTDATE);
                //rfcTable_POITEM_I.SetValue("ENDDATE", row.ENDDATE);
            }
            rfcFunction.SetValue("POITEM", rfcTable_POITEM_I);
            IRfcTable rfcTable_POITEMX_I = rfcFunction.GetTable("POITEMX");
            foreach (BAPI_PO_CHANGE_POITEMX row in import.POITEMX)
            {
                rfcTable_POITEMX_I.Append();
                BAPI_PO_CHANGE_POITEMX datoTabla = new BAPI_PO_CHANGE_POITEMX();
                rfcTable_POITEMX_I.SetValue("PO_ITEM", row.PO_ITEM);
                rfcTable_POITEMX_I.SetValue("PO_ITEMX", row.PO_ITEMX);
                rfcTable_POITEMX_I.SetValue("DELETE_IND", row.DELETE_IND);
                //rfcTable_POITEMX_I.SetValue("SHORT_TEXT", row.SHORT_TEXT);
                //rfcTable_POITEMX_I.SetValue("MATERIAL", row.MATERIAL);
                //rfcTable_POITEMX_I.SetValue("MATERIAL_EXTERNAL", row.MATERIAL_EXTERNAL);
                //rfcTable_POITEMX_I.SetValue("MATERIAL_GUID", row.MATERIAL_GUID);
                //rfcTable_POITEMX_I.SetValue("MATERIAL_VERSION", row.MATERIAL_VERSION);
                //rfcTable_POITEMX_I.SetValue("EMATERIAL", row.EMATERIAL);
                //rfcTable_POITEMX_I.SetValue("EMATERIAL_EXTERNAL", row.EMATERIAL_EXTERNAL);
                //rfcTable_POITEMX_I.SetValue("EMATERIAL_GUID", row.EMATERIAL_GUID);
                //rfcTable_POITEMX_I.SetValue("EMATERIAL_VERSION", row.EMATERIAL_VERSION);
                //rfcTable_POITEMX_I.SetValue("PLANT", row.PLANT);
                //rfcTable_POITEMX_I.SetValue("STGE_LOC", row.STGE_LOC);
                //rfcTable_POITEMX_I.SetValue("TRACKINGNO", row.TRACKINGNO);
                //rfcTable_POITEMX_I.SetValue("MATL_GROUP", row.MATL_GROUP);
                //rfcTable_POITEMX_I.SetValue("INFO_REC", row.INFO_REC);
                //rfcTable_POITEMX_I.SetValue("VEND_MAT", row.VEND_MAT);
                //rfcTable_POITEMX_I.SetValue("QUANTITY", row.QUANTITY);
                //rfcTable_POITEMX_I.SetValue("PO_UNIT", row.PO_UNIT);
                //rfcTable_POITEMX_I.SetValue("PO_UNIT_ISO", row.PO_UNIT_ISO);
                //rfcTable_POITEMX_I.SetValue("ORDERPR_UN", row.ORDERPR_UN);
                //rfcTable_POITEMX_I.SetValue("ORDERPR_UN_ISO", row.ORDERPR_UN_ISO);
                //rfcTable_POITEMX_I.SetValue("CONV_NUM1", row.CONV_NUM1);
                //rfcTable_POITEMX_I.SetValue("CONV_DEN1", row.CONV_DEN1);
                //rfcTable_POITEMX_I.SetValue("NET_PRICE", row.NET_PRICE);
                //rfcTable_POITEMX_I.SetValue("PRICE_UNIT", row.PRICE_UNIT);
                //rfcTable_POITEMX_I.SetValue("GR_PR_TIME", row.GR_PR_TIME);
                //rfcTable_POITEMX_I.SetValue("TAX_CODE", row.TAX_CODE);
                //rfcTable_POITEMX_I.SetValue("BON_GRP1", row.BON_GRP1);
                //rfcTable_POITEMX_I.SetValue("QUAL_INSP", row.QUAL_INSP);
                //rfcTable_POITEMX_I.SetValue("INFO_UPD", row.INFO_UPD);
                //rfcTable_POITEMX_I.SetValue("PRNT_PRICE", row.PRNT_PRICE);
                //rfcTable_POITEMX_I.SetValue("EST_PRICE", row.EST_PRICE);
                //rfcTable_POITEMX_I.SetValue("REMINDER1", row.REMINDER1);
                //rfcTable_POITEMX_I.SetValue("REMINDER2", row.REMINDER2);
                //rfcTable_POITEMX_I.SetValue("REMINDER3", row.REMINDER3);
                //rfcTable_POITEMX_I.SetValue("OVER_DLV_TOL", row.OVER_DLV_TOL);
                //rfcTable_POITEMX_I.SetValue("UNLIMITED_DLV", row.UNLIMITED_DLV);
                //rfcTable_POITEMX_I.SetValue("UNDER_DLV_TOL", row.UNDER_DLV_TOL);
                //rfcTable_POITEMX_I.SetValue("VAL_TYPE", row.VAL_TYPE);
                //rfcTable_POITEMX_I.SetValue("NO_MORE_GR", row.NO_MORE_GR);
                //rfcTable_POITEMX_I.SetValue("FINAL_INV", row.FINAL_INV);
                //rfcTable_POITEMX_I.SetValue("ITEM_CAT", row.ITEM_CAT);
                //rfcTable_POITEMX_I.SetValue("ACCTASSCAT", row.ACCTASSCAT);
                //rfcTable_POITEMX_I.SetValue("DISTRIB", row.DISTRIB);
                //rfcTable_POITEMX_I.SetValue("PART_INV", row.PART_INV);
                //rfcTable_POITEMX_I.SetValue("GR_IND", row.GR_IND);
                //rfcTable_POITEMX_I.SetValue("GR_NON_VAL", row.GR_NON_VAL);
                //rfcTable_POITEMX_I.SetValue("IR_IND", row.IR_IND);
                //rfcTable_POITEMX_I.SetValue("FREE_ITEM", row.FREE_ITEM);
                //rfcTable_POITEMX_I.SetValue("GR_BASEDIV", row.GR_BASEDIV);
                //rfcTable_POITEMX_I.SetValue("ACKN_REQD", row.ACKN_REQD);
                //rfcTable_POITEMX_I.SetValue("ACKNOWL_NO", row.ACKNOWL_NO);
                //rfcTable_POITEMX_I.SetValue("AGREEMENT", row.AGREEMENT);
                //rfcTable_POITEMX_I.SetValue("AGMT_ITEM", row.AGMT_ITEM);
                //rfcTable_POITEMX_I.SetValue("SHIPPING", row.SHIPPING);
                //rfcTable_POITEMX_I.SetValue("CUSTOMER", row.CUSTOMER);
                //rfcTable_POITEMX_I.SetValue("COND_GROUP", row.COND_GROUP);
                //rfcTable_POITEMX_I.SetValue("NO_DISCT", row.NO_DISCT);
                //rfcTable_POITEMX_I.SetValue("PLAN_DEL", row.PLAN_DEL);
                //rfcTable_POITEMX_I.SetValue("NET_WEIGHT", row.NET_WEIGHT);
                //rfcTable_POITEMX_I.SetValue("WEIGHTUNIT", row.WEIGHTUNIT);
                //rfcTable_POITEMX_I.SetValue("WEIGHTUNIT_ISO", row.WEIGHTUNIT_ISO);
                //rfcTable_POITEMX_I.SetValue("TAXJURCODE", row.TAXJURCODE);
                //rfcTable_POITEMX_I.SetValue("CTRL_KEY", row.CTRL_KEY);
                //rfcTable_POITEMX_I.SetValue("CONF_CTRL", row.CONF_CTRL);
                //rfcTable_POITEMX_I.SetValue("REV_LEV", row.REV_LEV);
                //rfcTable_POITEMX_I.SetValue("FUND", row.FUND);
                //rfcTable_POITEMX_I.SetValue("FUNDS_CTR", row.FUNDS_CTR);
                //rfcTable_POITEMX_I.SetValue("CMMT_ITEM", row.CMMT_ITEM);
                //rfcTable_POITEMX_I.SetValue("PRICEDATE", row.PRICEDATE);
                //rfcTable_POITEMX_I.SetValue("PRICE_DATE", row.PRICE_DATE);
                //rfcTable_POITEMX_I.SetValue("GROSS_WT", row.GROSS_WT);
                //rfcTable_POITEMX_I.SetValue("VOLUME", row.VOLUME);
                //rfcTable_POITEMX_I.SetValue("VOLUMEUNIT", row.VOLUMEUNIT);
                //rfcTable_POITEMX_I.SetValue("VOLUMEUNIT_ISO", row.VOLUMEUNIT_ISO);
                //rfcTable_POITEMX_I.SetValue("INCOTERMS1", row.INCOTERMS1);
                //rfcTable_POITEMX_I.SetValue("INCOTERMS2", row.INCOTERMS2);
                //rfcTable_POITEMX_I.SetValue("PRE_VENDOR", row.PRE_VENDOR);
                //rfcTable_POITEMX_I.SetValue("VEND_PART", row.VEND_PART);
                //rfcTable_POITEMX_I.SetValue("HL_ITEM", row.HL_ITEM);
                //rfcTable_POITEMX_I.SetValue("GR_TO_DATE", row.GR_TO_DATE);
                //rfcTable_POITEMX_I.SetValue("SUPP_VENDOR", row.SUPP_VENDOR);
                //rfcTable_POITEMX_I.SetValue("SC_VENDOR", row.SC_VENDOR);
                //rfcTable_POITEMX_I.SetValue("KANBAN_IND", row.KANBAN_IND);
                //rfcTable_POITEMX_I.SetValue("ERS", row.ERS);
                //rfcTable_POITEMX_I.SetValue("R_PROMO", row.R_PROMO);
                //rfcTable_POITEMX_I.SetValue("POINTS", row.POINTS);
                //rfcTable_POITEMX_I.SetValue("POINT_UNIT", row.POINT_UNIT);
                //rfcTable_POITEMX_I.SetValue("POINT_UNIT_ISO", row.POINT_UNIT_ISO);
                //rfcTable_POITEMX_I.SetValue("SEASON", row.SEASON);
                //rfcTable_POITEMX_I.SetValue("SEASON_YR", row.SEASON_YR);
                //rfcTable_POITEMX_I.SetValue("BON_GRP2", row.BON_GRP2);
                //rfcTable_POITEMX_I.SetValue("BON_GRP3", row.BON_GRP3);
                //rfcTable_POITEMX_I.SetValue("SETT_ITEM", row.SETT_ITEM);
                //rfcTable_POITEMX_I.SetValue("MINREMLIFE", row.MINREMLIFE);
                //rfcTable_POITEMX_I.SetValue("RFQ_NO", row.RFQ_NO);
                //rfcTable_POITEMX_I.SetValue("RFQ_ITEM", row.RFQ_ITEM);
                //rfcTable_POITEMX_I.SetValue("PREQ_NO", row.PREQ_NO);
                //rfcTable_POITEMX_I.SetValue("PREQ_ITEM", row.PREQ_ITEM);
                //rfcTable_POITEMX_I.SetValue("REF_DOC", row.REF_DOC);
                //rfcTable_POITEMX_I.SetValue("REF_ITEM", row.REF_ITEM);
                //rfcTable_POITEMX_I.SetValue("SI_CAT", row.SI_CAT);
                //rfcTable_POITEMX_I.SetValue("RET_ITEM", row.RET_ITEM);
                //rfcTable_POITEMX_I.SetValue("AT_RELEV", row.AT_RELEV);
                //rfcTable_POITEMX_I.SetValue("ORDER_REASON", row.ORDER_REASON);
                //rfcTable_POITEMX_I.SetValue("BRAS_NBM", row.BRAS_NBM);
                //rfcTable_POITEMX_I.SetValue("MATL_USAGE", row.MATL_USAGE);
                //rfcTable_POITEMX_I.SetValue("MAT_ORIGIN", row.MAT_ORIGIN);
                //rfcTable_POITEMX_I.SetValue("IN_HOUSE", row.IN_HOUSE);
                //rfcTable_POITEMX_I.SetValue("INDUS3", row.INDUS3);
                //rfcTable_POITEMX_I.SetValue("INF_INDEX", row.INF_INDEX);
                //rfcTable_POITEMX_I.SetValue("UNTIL_DATE", row.UNTIL_DATE);
                //rfcTable_POITEMX_I.SetValue("DELIV_COMPL", row.DELIV_COMPL);
                //rfcTable_POITEMX_I.SetValue("PART_DELIV", row.PART_DELIV);
                //rfcTable_POITEMX_I.SetValue("SHIP_BLOCKED", row.SHIP_BLOCKED);
                //rfcTable_POITEMX_I.SetValue("PREQ_NAME", row.PREQ_NAME);
                //rfcTable_POITEMX_I.SetValue("PERIOD_IND_EXPIRATION_DATE", row.PERIOD_IND_EXPIRATION_DATE);
                //rfcTable_POITEMX_I.SetValue("INT_OBJ_NO", row.INT_OBJ_NO);
                //rfcTable_POITEMX_I.SetValue("PCKG_NO", row.PCKG_NO);
                //rfcTable_POITEMX_I.SetValue("BATCH", row.BATCH);
                //rfcTable_POITEMX_I.SetValue("VENDRBATCH", row.VENDRBATCH);
                //rfcTable_POITEMX_I.SetValue("CALCTYPE", row.CALCTYPE);
                //rfcTable_POITEMX_I.SetValue("NO_ROUNDING", row.NO_ROUNDING);
                //rfcTable_POITEMX_I.SetValue("PO_PRICE", row.PO_PRICE);
                //rfcTable_POITEMX_I.SetValue("SUPPL_STLOC", row.SUPPL_STLOC);
                //rfcTable_POITEMX_I.SetValue("SRV_BASED_IV", row.SRV_BASED_IV);
                //rfcTable_POITEMX_I.SetValue("FUNDS_RES", row.FUNDS_RES);
                //rfcTable_POITEMX_I.SetValue("RES_ITEM", row.RES_ITEM);
                //rfcTable_POITEMX_I.SetValue("GRANT_NBR", row.GRANT_NBR);
                //rfcTable_POITEMX_I.SetValue("FUNC_AREA_LONG", row.FUNC_AREA_LONG);
                //rfcTable_POITEMX_I.SetValue("ORIG_ACCEPT", row.ORIG_ACCEPT);
                //rfcTable_POITEMX_I.SetValue("ALLOC_TBL", row.ALLOC_TBL);
                //rfcTable_POITEMX_I.SetValue("ALLOC_TBL_ITEM", row.ALLOC_TBL_ITEM);
                //rfcTable_POITEMX_I.SetValue("SRC_STOCK_TYPE", row.SRC_STOCK_TYPE);
                //rfcTable_POITEMX_I.SetValue("REASON_REJ", row.REASON_REJ);
                //rfcTable_POITEMX_I.SetValue("CRM_SALES_ORDER_NO", row.CRM_SALES_ORDER_NO);
                //rfcTable_POITEMX_I.SetValue("CRM_SALES_ORDER_ITEM_NO", row.CRM_SALES_ORDER_ITEM_NO);
                //rfcTable_POITEMX_I.SetValue("CRM_REF_SALES_ORDER_NO", row.CRM_REF_SALES_ORDER_NO);
                //rfcTable_POITEMX_I.SetValue("CRM_REF_SO_ITEM_NO", row.CRM_REF_SO_ITEM_NO);
                //rfcTable_POITEMX_I.SetValue("PRIO_URGENCY", row.PRIO_URGENCY);
                //rfcTable_POITEMX_I.SetValue("PRIO_REQUIREMENT", row.PRIO_REQUIREMENT);
                //rfcTable_POITEMX_I.SetValue("REASON_CODE", row.REASON_CODE);
                //rfcTable_POITEMX_I.SetValue("LONG_ITEM_NUMBER", row.LONG_ITEM_NUMBER);
                //rfcTable_POITEMX_I.SetValue("EXTERNAL_SORT_NUMBER", row.EXTERNAL_SORT_NUMBER);
                //rfcTable_POITEMX_I.SetValue("EXTERNAL_HIERARCHY_TYPE", row.EXTERNAL_HIERARCHY_TYPE);
                //rfcTable_POITEMX_I.SetValue("RETENTION_PERCENTAGE", row.RETENTION_PERCENTAGE);
                //rfcTable_POITEMX_I.SetValue("DOWNPAY_TYPE", row.DOWNPAY_TYPE);
                //rfcTable_POITEMX_I.SetValue("DOWNPAY_AMOUNT", row.DOWNPAY_AMOUNT);
                //rfcTable_POITEMX_I.SetValue("DOWNPAY_PERCENT", row.DOWNPAY_PERCENT);
                //rfcTable_POITEMX_I.SetValue("DOWNPAY_DUEDATE", row.DOWNPAY_DUEDATE);
                //rfcTable_POITEMX_I.SetValue("EXT_RFX_NUMBER", row.EXT_RFX_NUMBER);
                //rfcTable_POITEMX_I.SetValue("EXT_RFX_ITEM", row.EXT_RFX_ITEM);
                //rfcTable_POITEMX_I.SetValue("EXT_RFX_SYSTEM", row.EXT_RFX_SYSTEM);
                //rfcTable_POITEMX_I.SetValue("SRM_CONTRACT_ID", row.SRM_CONTRACT_ID);
                //rfcTable_POITEMX_I.SetValue("SRM_CONTRACT_ITM", row.SRM_CONTRACT_ITM);
                //rfcTable_POITEMX_I.SetValue("BUDGET_PERIOD", row.BUDGET_PERIOD);
                //rfcTable_POITEMX_I.SetValue("BLOCK_REASON_ID", row.BLOCK_REASON_ID);
                //rfcTable_POITEMX_I.SetValue("BLOCK_REASON_TEXT", row.BLOCK_REASON_TEXT);
                //rfcTable_POITEMX_I.SetValue("SPE_CRM_FKREL", row.SPE_CRM_FKREL);
                //rfcTable_POITEMX_I.SetValue("DATE_QTY_FIXED", row.DATE_QTY_FIXED);
                //rfcTable_POITEMX_I.SetValue("GI_BASED_GR", row.GI_BASED_GR);
                //rfcTable_POITEMX_I.SetValue("SHIPTYPE", row.SHIPTYPE);
                //rfcTable_POITEMX_I.SetValue("HANDOVERLOC", row.HANDOVERLOC);
                //rfcTable_POITEMX_I.SetValue("TC_AUT_DET", row.TC_AUT_DET);
                //rfcTable_POITEMX_I.SetValue("MANUAL_TC_REASON", row.MANUAL_TC_REASON);
                //rfcTable_POITEMX_I.SetValue("FISCAL_INCENTIVE", row.FISCAL_INCENTIVE);
                //rfcTable_POITEMX_I.SetValue("FISCAL_INCENTIVE_ID", row.FISCAL_INCENTIVE_ID);
                //rfcTable_POITEMX_I.SetValue("TAX_SUBJECT_ST", row.TAX_SUBJECT_ST);
                //rfcTable_POITEMX_I.SetValue("REQ_SEGMENT", row.REQ_SEGMENT);
                //rfcTable_POITEMX_I.SetValue("STK_SEGMENT", row.STK_SEGMENT);
                //rfcTable_POITEMX_I.SetValue("SF_TXJCD", row.SF_TXJCD);
                //rfcTable_POITEMX_I.SetValue("INCOTERMS2L", row.INCOTERMS2L);
                //rfcTable_POITEMX_I.SetValue("INCOTERMS3L", row.INCOTERMS3L);
                //rfcTable_POITEMX_I.SetValue("MATERIAL_LONG", row.MATERIAL_LONG);
                //rfcTable_POITEMX_I.SetValue("EMATERIAL_LONG", row.EMATERIAL_LONG);
                //rfcTable_POITEMX_I.SetValue("SERVICEPERFORMER", row.SERVICEPERFORMER);
                //rfcTable_POITEMX_I.SetValue("PRODUCTTYPE", row.PRODUCTTYPE);
                //rfcTable_POITEMX_I.SetValue("STARTDATE", row.STARTDATE);
                //rfcTable_POITEMX_I.SetValue("ENDDATE", row.ENDDATE);
            }
            rfcFunction.SetValue("POITEMX", rfcTable_POITEMX_I);

            try
            {
                IRfcTable rfcTable_POCOMPONENTS_I = rfcFunction.GetTable("POCOMPONENTS");
                if (import.POCOMPONENTS != null)
                {
                    foreach (BAPI_PO_CHANGE_POCOMPONENTS row in import.POCOMPONENTS)
                    {
                        rfcTable_POCOMPONENTS_I.Append();
                        BAPI_PO_CHANGE_POCOMPONENTS datoTabla = new BAPI_PO_CHANGE_POCOMPONENTS();
                        rfcTable_POCOMPONENTS_I.SetValue("PO_ITEM", row.PO_ITEM);
                        rfcTable_POCOMPONENTS_I.SetValue("SCHED_LINE", row.SCHED_LINE);
                        rfcTable_POCOMPONENTS_I.SetValue("ITEM_NO", row.ITEM_NO);
                        rfcTable_POCOMPONENTS_I.SetValue("MATERIAL", row.MATERIAL);
                        rfcTable_POCOMPONENTS_I.SetValue("ENTRY_QUANTITY", row.ENTRY_QUANTITY);
                        rfcTable_POCOMPONENTS_I.SetValue("ENTRY_UOM", row.ENTRY_UOM);
                        rfcTable_POCOMPONENTS_I.SetValue("ENTRY_UOM_ISO", row.ENTRY_UOM_ISO);
                        rfcTable_POCOMPONENTS_I.SetValue("FIXED_QUAN", row.FIXED_QUAN);
                        rfcTable_POCOMPONENTS_I.SetValue("PLANT", row.PLANT);
                        rfcTable_POCOMPONENTS_I.SetValue("REQ_DATE", row.REQ_DATE);
                        rfcTable_POCOMPONENTS_I.SetValue("CHANGE_ID", row.CHANGE_ID);
                        rfcTable_POCOMPONENTS_I.SetValue("MATERIAL_EXTERNAL", row.MATERIAL_EXTERNAL);
                        rfcTable_POCOMPONENTS_I.SetValue("MATERIAL_GUID", row.MATERIAL_GUID);
                        rfcTable_POCOMPONENTS_I.SetValue("MATERIAL_VERSION", row.MATERIAL_VERSION);
                        rfcTable_POCOMPONENTS_I.SetValue("ITEM_CAT", row.ITEM_CAT);
                        rfcTable_POCOMPONENTS_I.SetValue("REQ_QUAN", row.REQ_QUAN);
                        rfcTable_POCOMPONENTS_I.SetValue("BASE_UOM", row.BASE_UOM);
                        rfcTable_POCOMPONENTS_I.SetValue("BASE_UOM_ISO", row.BASE_UOM_ISO);
                        rfcTable_POCOMPONENTS_I.SetValue("PHANT_ITEM", row.PHANT_ITEM);
                        rfcTable_POCOMPONENTS_I.SetValue("BATCH", row.BATCH);
                        rfcTable_POCOMPONENTS_I.SetValue("MAT_PROVISION", row.MAT_PROVISION);
                        rfcTable_POCOMPONENTS_I.SetValue("ISS_ST_LOC", row.ISS_ST_LOC);
                        rfcTable_POCOMPONENTS_I.SetValue("REV_LEV", row.REV_LEV);
                        rfcTable_POCOMPONENTS_I.SetValue("REQ_SEGMENT", row.REQ_SEGMENT);
                        //rfcTable_POCOMPONENTS_I.SetValue("MATERIAL_LONG", row.MATERIAL_LONG);
                    }
                }
                rfcFunction.SetValue("POCOMPONENTS", rfcTable_POCOMPONENTS_I);
                IRfcTable rfcTable_POCOMPONENTSX_I = rfcFunction.GetTable("POCOMPONENTSX");
                if (import.POCOMPONENTSX != null)
                {
                    foreach (BAPI_PO_CHANGE_POCOMPONENTSX row in import.POCOMPONENTSX)
                    {
                        rfcTable_POCOMPONENTSX_I.Append();
                        BAPI_PO_CHANGE_POCOMPONENTSX datoTabla = new BAPI_PO_CHANGE_POCOMPONENTSX();
                        rfcTable_POCOMPONENTSX_I.SetValue("PO_ITEM", row.PO_ITEM);
                        rfcTable_POCOMPONENTSX_I.SetValue("SCHED_LINE", row.SCHED_LINE);
                        rfcTable_POCOMPONENTSX_I.SetValue("ITEM_NO", row.ITEM_NO);
                        rfcTable_POCOMPONENTSX_I.SetValue("PO_ITEMX", row.PO_ITEMX);
                        rfcTable_POCOMPONENTSX_I.SetValue("SCHED_LINEX", row.SCHED_LINEX);
                        rfcTable_POCOMPONENTSX_I.SetValue("ITEM_NOX", row.ITEM_NOX);
                        rfcTable_POCOMPONENTSX_I.SetValue("MATERIAL", row.MATERIAL);
                        rfcTable_POCOMPONENTSX_I.SetValue("ENTRY_QUANTITY", row.ENTRY_QUANTITY);
                        rfcTable_POCOMPONENTSX_I.SetValue("ENTRY_UOM", row.ENTRY_UOM);
                        rfcTable_POCOMPONENTSX_I.SetValue("ENTRY_UOM_ISO", row.ENTRY_UOM_ISO);
                        rfcTable_POCOMPONENTSX_I.SetValue("FIXED_QUAN", row.FIXED_QUAN);
                        rfcTable_POCOMPONENTSX_I.SetValue("PLANT", row.PLANT);
                        rfcTable_POCOMPONENTSX_I.SetValue("REQ_DATE", row.REQ_DATE);
                        rfcTable_POCOMPONENTSX_I.SetValue("CHANGE_ID", row.CHANGE_ID);
                        rfcTable_POCOMPONENTSX_I.SetValue("MATERIAL_EXTERNAL", row.MATERIAL_EXTERNAL);
                        rfcTable_POCOMPONENTSX_I.SetValue("MATERIAL_GUID", row.MATERIAL_GUID);
                        rfcTable_POCOMPONENTSX_I.SetValue("MATERIAL_VERSION", row.MATERIAL_VERSION);
                        rfcTable_POCOMPONENTSX_I.SetValue("REQ_QUAN", row.REQ_QUAN);
                        rfcTable_POCOMPONENTSX_I.SetValue("BASE_UOM", row.BASE_UOM);
                        rfcTable_POCOMPONENTSX_I.SetValue("BASE_UOM_ISO", row.BASE_UOM_ISO);
                        rfcTable_POCOMPONENTSX_I.SetValue("PHANT_ITEM", row.PHANT_ITEM);
                        rfcTable_POCOMPONENTSX_I.SetValue("BATCH", row.BATCH);
                        rfcTable_POCOMPONENTSX_I.SetValue("MAT_PROVISION", row.MAT_PROVISION);
                        rfcTable_POCOMPONENTSX_I.SetValue("ISS_ST_LOC", row.ISS_ST_LOC);
                        rfcTable_POCOMPONENTSX_I.SetValue("ITEM_CAT", row.ITEM_CAT);
                        rfcTable_POCOMPONENTSX_I.SetValue("REV_LEV", row.REV_LEV);
                        rfcTable_POCOMPONENTSX_I.SetValue("REQ_SEGMENT", row.REQ_SEGMENT);
                        //rfcTable_POCOMPONENTSX_I.SetValue("MATERIAL_LONG", row.MATERIAL_LONG);
                    }
                }
                rfcFunction.SetValue("POCOMPONENTSX", rfcTable_POCOMPONENTSX_I);
            }
            catch
            {

            }

            rfcFunction.Invoke(configSap);
            string aa = rfcFunction.ToString();
            responce_BAPI_PO_CHANGE res = new responce_BAPI_PO_CHANGE();
            IRfcTable rfcTable_ALLVERSIONS = rfcFunction.GetTable("ALLVERSIONS");
            res.ALLVERSIONS = new BAPI_PO_CHANGE_ALLVERSIONS[rfcTable_ALLVERSIONS.RowCount];
            int i_ALLVERSIONS = 0;
            foreach (IRfcStructure row in rfcTable_ALLVERSIONS)
            {
                BAPI_PO_CHANGE_ALLVERSIONS datoTabla = new BAPI_PO_CHANGE_ALLVERSIONS();
                datoTabla.DOC_TYPE = row.GetString("DOC_TYPE");
                datoTabla.DOC_NUMBER = row.GetString("DOC_NUMBER");
                datoTabla.ITEM_NUMBER = row.GetInt("ITEM_NUMBER");
                datoTabla.VERSION = row.GetString("VERSION");
                datoTabla.CREATED_BY = row.GetString("CREATED_BY");
                datoTabla.CR_ON = row.GetString("CR_ON");
                datoTabla.REC_TIME = row.GetString("REC_TIME");
                datoTabla.RELEASED_BY = row.GetString("RELEASED_BY");
                datoTabla.RELEASE_DATE = row.GetString("RELEASE_DATE");
                datoTabla.RELEASE_TIME = row.GetString("RELEASE_TIME");
                datoTabla.RELEASEBY_PUR = row.GetString("RELEASEBY_PUR");
                datoTabla.RELEASEDATE_PUR = row.GetString("RELEASEDATE_PUR");
                datoTabla.RELEASETIME_PUR = row.GetString("RELEASETIME_PUR");
                datoTabla.REASON = row.GetString("REASON");
                datoTabla.DESCRIPTION = row.GetString("DESCRIPTION");
                datoTabla.REQ_BY_EXT = row.GetString("REQ_BY_EXT");
                datoTabla.REQ_BY = row.GetString("REQ_BY");
                datoTabla.NET_VALUE = row.GetDecimal("NET_VALUE");
                datoTabla.VALUE_CHANGED = row.GetDecimal("VALUE_CHANGED");
                datoTabla.CURRENCY = row.GetString("CURRENCY");
                datoTabla.CURRENCY_ISO = row.GetString("CURRENCY_ISO");
                datoTabla.POST_DATE = row.GetString("POST_DATE");
                datoTabla.COMPLETED = row.GetString("COMPLETED");
                datoTabla.STATUS = row.GetString("STATUS");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                datoTabla.STATUS_DOC_OLD = row.GetString("STATUS_DOC_OLD");
                res.ALLVERSIONS[i_ALLVERSIONS] = datoTabla; ++i_ALLVERSIONS;
            }
            IRfcTable rfcTable_EXTENSIONIN = rfcFunction.GetTable("EXTENSIONIN");
            res.EXTENSIONIN = new BAPI_PO_CHANGE_EXTENSIONIN[rfcTable_EXTENSIONIN.RowCount];
            int i_EXTENSIONIN = 0;
            foreach (IRfcStructure row in rfcTable_EXTENSIONIN)
            {
                BAPI_PO_CHANGE_EXTENSIONIN datoTabla = new BAPI_PO_CHANGE_EXTENSIONIN();
                datoTabla.STRUCTURE = row.GetString("STRUCTURE");
                datoTabla.VALUEPART1 = row.GetString("VALUEPART1");
                datoTabla.VALUEPART2 = row.GetString("VALUEPART2");
                datoTabla.VALUEPART3 = row.GetString("VALUEPART3");
                datoTabla.VALUEPART4 = row.GetString("VALUEPART4");
                res.EXTENSIONIN[i_EXTENSIONIN] = datoTabla; ++i_EXTENSIONIN;
            }
            IRfcTable rfcTable_EXTENSIONOUT = rfcFunction.GetTable("EXTENSIONOUT");
            res.EXTENSIONOUT = new BAPI_PO_CHANGE_EXTENSIONOUT[rfcTable_EXTENSIONOUT.RowCount];
            int i_EXTENSIONOUT = 0;
            foreach (IRfcStructure row in rfcTable_EXTENSIONOUT)
            {
                BAPI_PO_CHANGE_EXTENSIONOUT datoTabla = new BAPI_PO_CHANGE_EXTENSIONOUT();
                datoTabla.STRUCTURE = row.GetString("STRUCTURE");
                datoTabla.VALUEPART1 = row.GetString("VALUEPART1");
                datoTabla.VALUEPART2 = row.GetString("VALUEPART2");
                datoTabla.VALUEPART3 = row.GetString("VALUEPART3");
                datoTabla.VALUEPART4 = row.GetString("VALUEPART4");
                res.EXTENSIONOUT[i_EXTENSIONOUT] = datoTabla; ++i_EXTENSIONOUT;
            }
            IRfcTable rfcTable_INVPLANHEADER = rfcFunction.GetTable("INVPLANHEADER");
            res.INVPLANHEADER = new BAPI_PO_CHANGE_INVPLANHEADER[rfcTable_INVPLANHEADER.RowCount];
            int i_INVPLANHEADER = 0;
            foreach (IRfcStructure row in rfcTable_INVPLANHEADER)
            {
                BAPI_PO_CHANGE_INVPLANHEADER datoTabla = new BAPI_PO_CHANGE_INVPLANHEADER();
                datoTabla.DOC_ITEM = row.GetInt("DOC_ITEM");
                datoTabla.IV_PLAN_NUM = row.GetString("IV_PLAN_NUM");
                datoTabla.CATEGORY = row.GetString("CATEGORY");
                datoTabla.IP_TYPE = row.GetString("IP_TYPE");
                datoTabla.SORT_FLD = row.GetString("SORT_FLD");
                datoTabla.START_DATE = row.GetString("START_DATE");
                datoTabla.END_DATE = row.GetString("END_DATE");
                datoTabla.HORIZON = row.GetString("HORIZON");
                datoTabla.ORGN_ST_DAT = row.GetString("ORGN_ST_DAT");
                datoTabla.ORGN_END_DAT = row.GetString("ORGN_END_DAT");
                datoTabla.PERIOD = row.GetString("PERIOD");
                datoTabla.LNGTH_STAND_PRD = row.GetInt("LNGTH_STAND_PRD");
                datoTabla.REF_IV_PLAN_NUM = row.GetString("REF_IV_PLAN_NUM");
                datoTabla.DATES_FROM = row.GetString("DATES_FROM");
                datoTabla.IN_ADVANCE = row.GetString("IN_ADVANCE");
                datoTabla.ORGN_FROM_DAT = row.GetString("ORGN_FROM_DAT");
                datoTabla.DEV_BILL_DAT = row.GetString("DEV_BILL_DAT");
                datoTabla.CALENDER_ID = row.GetString("CALENDER_ID");
                datoTabla.DATES_TO = row.GetString("DATES_TO");
                datoTabla.ORGN_UNTIL_DAT = row.GetString("ORGN_UNTIL_DAT");
                datoTabla.PO_NUMBER = row.GetString("PO_NUMBER");
                datoTabla.UNLIMITED = row.GetInt("UNLIMITED");
                datoTabla.AUTO_COR_DAT = row.GetString("AUTO_COR_DAT");
                res.INVPLANHEADER[i_INVPLANHEADER] = datoTabla; ++i_INVPLANHEADER;
            }
            IRfcTable rfcTable_INVPLANHEADERX = rfcFunction.GetTable("INVPLANHEADERX");
            res.INVPLANHEADERX = new BAPI_PO_CHANGE_INVPLANHEADERX[rfcTable_INVPLANHEADERX.RowCount];
            int i_INVPLANHEADERX = 0;
            foreach (IRfcStructure row in rfcTable_INVPLANHEADERX)
            {
                BAPI_PO_CHANGE_INVPLANHEADERX datoTabla = new BAPI_PO_CHANGE_INVPLANHEADERX();
                datoTabla.DOC_ITEM = row.GetInt("DOC_ITEM");
                datoTabla.IV_PLAN_NUM = row.GetString("IV_PLAN_NUM");
                datoTabla.CATEGORY = row.GetString("CATEGORY");
                datoTabla.IP_TYPE = row.GetString("IP_TYPE");
                datoTabla.SORT_FLD = row.GetString("SORT_FLD");
                datoTabla.START_DATE = row.GetString("START_DATE");
                datoTabla.END_DATE = row.GetString("END_DATE");
                datoTabla.HORIZON = row.GetString("HORIZON");
                datoTabla.ORGN_ST_DAT = row.GetString("ORGN_ST_DAT");
                datoTabla.ORGN_END_DAT = row.GetString("ORGN_END_DAT");
                datoTabla.PERIOD = row.GetString("PERIOD");
                datoTabla.LNGTH_STAND_PRD = row.GetString("LNGTH_STAND_PRD");
                datoTabla.REF_IV_PLAN_NUM = row.GetString("REF_IV_PLAN_NUM");
                datoTabla.DATES_FROM = row.GetString("DATES_FROM");
                datoTabla.IN_ADVANCE = row.GetString("IN_ADVANCE");
                datoTabla.ORGN_FROM_DAT = row.GetString("ORGN_FROM_DAT");
                datoTabla.DEV_BILL_DAT = row.GetString("DEV_BILL_DAT");
                datoTabla.CALENDER_ID = row.GetString("CALENDER_ID");
                datoTabla.DATES_TO = row.GetString("DATES_TO");
                datoTabla.ORGN_UNTIL_DAT = row.GetString("ORGN_UNTIL_DAT");
                datoTabla.PO_NUMBER = row.GetString("PO_NUMBER");
                datoTabla.UNLIMITED = row.GetString("UNLIMITED");
                datoTabla.AUTO_COR_DAT = row.GetString("AUTO_COR_DAT");
                res.INVPLANHEADERX[i_INVPLANHEADERX] = datoTabla; ++i_INVPLANHEADERX;
            }
            IRfcTable rfcTable_INVPLANITEM = rfcFunction.GetTable("INVPLANITEM");
            res.INVPLANITEM = new BAPI_PO_CHANGE_INVPLANITEM[rfcTable_INVPLANITEM.RowCount];
            int i_INVPLANITEM = 0;
            foreach (IRfcStructure row in rfcTable_INVPLANITEM)
            {
                BAPI_PO_CHANGE_INVPLANITEM datoTabla = new BAPI_PO_CHANGE_INVPLANITEM();
                datoTabla.DOC_ITEM = row.GetInt("DOC_ITEM");
                datoTabla.IV_PLAN_NUM = row.GetString("IV_PLAN_NUM");
                datoTabla.IV_PLAN_ITEM = row.GetInt("IV_PLAN_ITEM");
                datoTabla.DEL_IND = row.GetString("DEL_IND");
                datoTabla.DATE_CATG = row.GetString("DATE_CATG");
                datoTabla.DATE_DESC = row.GetString("DATE_DESC");
                datoTabla.SETT_DATE_FROM = row.GetString("SETT_DATE_FROM");
                datoTabla.BILL_RULE = row.GetString("BILL_RULE");
                datoTabla.INVOICE_PERCENTAGE = row.GetDecimal("INVOICE_PERCENTAGE");
                datoTabla.CURRENCY = row.GetString("CURRENCY");
                datoTabla.CURRENCY_ISO = row.GetString("CURRENCY_ISO");
                datoTabla.EXCHG_RAT_DAT = row.GetDecimal("EXCHG_RAT_DAT");
                datoTabla.BILL_VALUE = row.GetDecimal("BILL_VALUE");
                datoTabla.BILLING_BLOCK = row.GetString("BILLING_BLOCK");
                datoTabla.BILLING_STATUS = row.GetString("BILLING_STATUS");
                datoTabla.SETT_DATE_TO = row.GetString("SETT_DATE_TO");
                datoTabla.CALENDER_ID = row.GetString("CALENDER_ID");
                datoTabla.BILL_DATE = row.GetString("BILL_DATE");
                datoTabla.CASH_DISCOUNT = row.GetDecimal("CASH_DISCOUNT");
                datoTabla.REBATE_BASIS1 = row.GetDecimal("REBATE_BASIS1");
                datoTabla.PRICING_OK = row.GetString("PRICING_OK");
                datoTabla.MILESTONE_NUM = row.GetInt("MILESTONE_NUM");
                datoTabla.MILESTONE_USE = row.GetString("MILESTONE_USE");
                datoTabla.MANUALLY = row.GetString("MANUALLY");
                res.INVPLANITEM[i_INVPLANITEM] = datoTabla; ++i_INVPLANITEM;
            }
            IRfcTable rfcTable_INVPLANITEMX = rfcFunction.GetTable("INVPLANITEMX");
            res.INVPLANITEMX = new BAPI_PO_CHANGE_INVPLANITEMX[rfcTable_INVPLANITEMX.RowCount];
            int i_INVPLANITEMX = 0;
            foreach (IRfcStructure row in rfcTable_INVPLANITEMX)
            {
                BAPI_PO_CHANGE_INVPLANITEMX datoTabla = new BAPI_PO_CHANGE_INVPLANITEMX();
                datoTabla.DOC_ITEM = row.GetInt("DOC_ITEM");
                datoTabla.IV_PLAN_NUM = row.GetString("IV_PLAN_NUM");
                datoTabla.IV_PLAN_ITEM = row.GetInt("IV_PLAN_ITEM");
                datoTabla.DEL_IND = row.GetString("DEL_IND");
                datoTabla.DATE_CATG = row.GetString("DATE_CATG");
                datoTabla.DATE_DESC = row.GetString("DATE_DESC");
                datoTabla.SETT_DATE_FROM = row.GetString("SETT_DATE_FROM");
                datoTabla.BILL_RULE = row.GetString("BILL_RULE");
                datoTabla.INVOICE_PERCENTAGE = row.GetString("INVOICE_PERCENTAGE");
                datoTabla.CURRENCY = row.GetString("CURRENCY");
                datoTabla.CURRENCY_ISO = row.GetString("CURRENCY_ISO");
                datoTabla.EXCHG_RAT_DAT = row.GetString("EXCHG_RAT_DAT");
                datoTabla.BILL_VALUE = row.GetString("BILL_VALUE");
                datoTabla.BILLING_BLOCK = row.GetString("BILLING_BLOCK");
                datoTabla.BILLING_STATUS = row.GetString("BILLING_STATUS");
                datoTabla.SETT_DATE_TO = row.GetString("SETT_DATE_TO");
                datoTabla.CALENDER_ID = row.GetString("CALENDER_ID");
                datoTabla.BILL_DATE = row.GetString("BILL_DATE");
                datoTabla.CASH_DISCOUNT = row.GetString("CASH_DISCOUNT");
                datoTabla.REBATE_BASIS1 = row.GetString("REBATE_BASIS1");
                datoTabla.PRICING_OK = row.GetString("PRICING_OK");
                datoTabla.MILESTONE_NUM = row.GetString("MILESTONE_NUM");
                datoTabla.MILESTONE_USE = row.GetString("MILESTONE_USE");
                datoTabla.MANUALLY = row.GetString("MANUALLY");
                res.INVPLANITEMX[i_INVPLANITEMX] = datoTabla; ++i_INVPLANITEMX;
            }
            /*IRfcTable rfcTable_NFMETALLITMS = rfcFunction.GetTable("NFMETALLITMS");
            res.NFMETALLITMS = new BAPI_PO_CHANGE_NFMETALLITMS[rfcTable_NFMETALLITMS.RowCount];
            int i_NFMETALLITMS = 0;
            foreach (IRfcStructure row in rfcTable_NFMETALLITMS)
            {
                BAPI_PO_CHANGE_NFMETALLITMS datoTabla = new BAPI_PO_CHANGE_NFMETALLITMS();
                datoTabla.DATA_INDEX = row.GetInt("DATA_INDEX");
                datoTabla.DOC_NUMBER = row.GetString("DOC_NUMBER");
                datoTabla.ITM_NUMBER = row.GetInt("ITM_NUMBER");
                datoTabla.COMPCODE = row.GetString("COMPCODE");
                datoTabla.FISCYEAR = row.GetInt("FISCYEAR");
                datoTabla.NFMKEY = row.GetString("NFMKEY");
                datoTabla.RATEDETKEY = row.GetString("RATEDETKEY");
                datoTabla.BASEKEY = row.GetString("BASEKEY");
                datoTabla.EXCHANGEKEY = row.GetString("EXCHANGEKEY");
                datoTabla.RATEDETDAT = row.GetString("RATEDETDAT");
                datoTabla.RATEMONTH = row.GetInt("RATEMONTH");
                datoTabla.ACTRATEDAT = row.GetString("ACTRATEDAT");
                datoTabla.RATE = row.GetDecimal("RATE");
                datoTabla.RATECURKY = row.GetString("RATECURKY");
                datoTabla.RATECURKYISO = row.GetString("RATECURKYISO");
                datoTabla.RATEDOCCUR = row.GetDecimal("RATEDOCCUR");
                datoTabla.INVOICEBL = row.GetString("INVOICEBL");
                datoTabla.BVALDOCCUR = row.GetDecimal("BVALDOCCUR");
                datoTabla.BVALCURKYD = row.GetString("BVALCURKYD");
                datoTabla.BVALCURKYDISO = row.GetString("BVALCURKYDISO");
                datoTabla.NETRATE = row.GetDecimal("NETRATE");
                datoTabla.PROVIDER = row.GetString("PROVIDER");
                datoTabla.VENDORCOV = row.GetString("VENDORCOV");
                datoTabla.COVERAGEKY = row.GetString("COVERAGEKY");
                datoTabla.POSTINGDAYS = row.GetInt("POSTINGDAYS");
                datoTabla.UPDTYPE = row.GetString("UPDTYPE");
                res.NFMETALLITMS[i_NFMETALLITMS] = datoTabla; ++i_NFMETALLITMS;
            }*/
            IRfcTable rfcTable_POACCOUNT = rfcFunction.GetTable("POACCOUNT");
            res.POACCOUNT = new BAPI_PO_CHANGE_POACCOUNT[rfcTable_POACCOUNT.RowCount];
            int i_POACCOUNT = 0;
            foreach (IRfcStructure row in rfcTable_POACCOUNT)
            {
                BAPI_PO_CHANGE_POACCOUNT datoTabla = new BAPI_PO_CHANGE_POACCOUNT();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SERIAL_NO = row.GetInt("SERIAL_NO");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                datoTabla.CREAT_DATE = row.GetString("CREAT_DATE");
                datoTabla.QUANTITY = row.GetDecimal("QUANTITY");
                datoTabla.DISTR_PERC = row.GetDecimal("DISTR_PERC");
                datoTabla.NET_VALUE = row.GetDecimal("NET_VALUE");
                datoTabla.GL_ACCOUNT = row.GetString("GL_ACCOUNT");
                datoTabla.BUS_AREA = row.GetString("BUS_AREA");
                datoTabla.COSTCENTER = row.GetString("COSTCENTER");
                datoTabla.SD_DOC = row.GetString("SD_DOC");
                datoTabla.ITM_NUMBER = row.GetInt("ITM_NUMBER");
                datoTabla.SCHED_LINE = row.GetInt("SCHED_LINE");
                datoTabla.ASSET_NO = row.GetString("ASSET_NO");
                datoTabla.SUB_NUMBER = row.GetString("SUB_NUMBER");
                datoTabla.ORDERID = row.GetString("ORDERID");
                datoTabla.GR_RCPT = row.GetString("GR_RCPT");
                datoTabla.UNLOAD_PT = row.GetString("UNLOAD_PT");
                datoTabla.CO_AREA = row.GetString("CO_AREA");
                datoTabla.COSTOBJECT = row.GetString("COSTOBJECT");
                datoTabla.PROFIT_CTR = row.GetString("PROFIT_CTR");
                datoTabla.WBS_ELEMENT = row.GetString("WBS_ELEMENT");
                datoTabla.NETWORK = row.GetString("NETWORK");
                datoTabla.RL_EST_KEY = row.GetString("RL_EST_KEY");
                datoTabla.PART_ACCT = row.GetString("PART_ACCT");
                datoTabla.CMMT_ITEM = row.GetString("CMMT_ITEM");
                datoTabla.REC_IND = row.GetString("REC_IND");
                datoTabla.FUNDS_CTR = row.GetString("FUNDS_CTR");
                datoTabla.FUND = row.GetString("FUND");
                datoTabla.FUNC_AREA = row.GetString("FUNC_AREA");
                datoTabla.REF_DATE = row.GetString("REF_DATE");
                datoTabla.TAX_CODE = row.GetString("TAX_CODE");
                datoTabla.TAXJURCODE = row.GetString("TAXJURCODE");
                datoTabla.NOND_ITAX = row.GetDecimal("NOND_ITAX");
                datoTabla.ACTTYPE = row.GetString("ACTTYPE");
                datoTabla.CO_BUSPROC = row.GetString("CO_BUSPROC");
                datoTabla.RES_DOC = row.GetString("RES_DOC");
                datoTabla.RES_ITEM = row.GetInt("RES_ITEM");
                datoTabla.ACTIVITY = row.GetString("ACTIVITY");
                datoTabla.GRANT_NBR = row.GetString("GRANT_NBR");
                datoTabla.CMMT_ITEM_LONG = row.GetString("CMMT_ITEM_LONG");
                datoTabla.FUNC_AREA_LONG = row.GetString("FUNC_AREA_LONG");
                datoTabla.BUDGET_PERIOD = row.GetString("BUDGET_PERIOD");
                datoTabla.FINAL_IND = row.GetString("FINAL_IND");
                datoTabla.FINAL_REASON = row.GetString("FINAL_REASON");
                res.POACCOUNT[i_POACCOUNT] = datoTabla; ++i_POACCOUNT;
            }
            IRfcTable rfcTable_POACCOUNTPROFITSEGMENT = rfcFunction.GetTable("POACCOUNTPROFITSEGMENT");
            res.POACCOUNTPROFITSEGMENT = new BAPI_PO_CHANGE_POACCOUNTPROFITSEGMENT[rfcTable_POACCOUNTPROFITSEGMENT.RowCount];
            int i_POACCOUNTPROFITSEGMENT = 0;
            foreach (IRfcStructure row in rfcTable_POACCOUNTPROFITSEGMENT)
            {
                BAPI_PO_CHANGE_POACCOUNTPROFITSEGMENT datoTabla = new BAPI_PO_CHANGE_POACCOUNTPROFITSEGMENT();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SERIAL_NO = row.GetInt("SERIAL_NO");
                datoTabla.FIELDNAME = row.GetString("FIELDNAME");
                datoTabla.VALUE = row.GetString("VALUE");
                res.POACCOUNTPROFITSEGMENT[i_POACCOUNTPROFITSEGMENT] = datoTabla; ++i_POACCOUNTPROFITSEGMENT;
            }
            IRfcTable rfcTable_POACCOUNTX = rfcFunction.GetTable("POACCOUNTX");
            res.POACCOUNTX = new BAPI_PO_CHANGE_POACCOUNTX[rfcTable_POACCOUNTX.RowCount];
            int i_POACCOUNTX = 0;
            foreach (IRfcStructure row in rfcTable_POACCOUNTX)
            {
                BAPI_PO_CHANGE_POACCOUNTX datoTabla = new BAPI_PO_CHANGE_POACCOUNTX();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SERIAL_NO = row.GetInt("SERIAL_NO");
                datoTabla.PO_ITEMX = row.GetString("PO_ITEMX");
                datoTabla.SERIAL_NOX = row.GetString("SERIAL_NOX");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                datoTabla.CREAT_DATE = row.GetString("CREAT_DATE");
                datoTabla.QUANTITY = row.GetString("QUANTITY");
                datoTabla.DISTR_PERC = row.GetString("DISTR_PERC");
                datoTabla.NET_VALUE = row.GetString("NET_VALUE");
                datoTabla.GL_ACCOUNT = row.GetString("GL_ACCOUNT");
                datoTabla.BUS_AREA = row.GetString("BUS_AREA");
                datoTabla.COSTCENTER = row.GetString("COSTCENTER");
                datoTabla.SD_DOC = row.GetString("SD_DOC");
                datoTabla.ITM_NUMBER = row.GetString("ITM_NUMBER");
                datoTabla.SCHED_LINE = row.GetString("SCHED_LINE");
                datoTabla.ASSET_NO = row.GetString("ASSET_NO");
                datoTabla.SUB_NUMBER = row.GetString("SUB_NUMBER");
                datoTabla.ORDERID = row.GetString("ORDERID");
                datoTabla.GR_RCPT = row.GetString("GR_RCPT");
                datoTabla.UNLOAD_PT = row.GetString("UNLOAD_PT");
                datoTabla.CO_AREA = row.GetString("CO_AREA");
                datoTabla.COSTOBJECT = row.GetString("COSTOBJECT");
                datoTabla.PROFIT_CTR = row.GetString("PROFIT_CTR");
                datoTabla.WBS_ELEMENT = row.GetString("WBS_ELEMENT");
                datoTabla.NETWORK = row.GetString("NETWORK");
                datoTabla.RL_EST_KEY = row.GetString("RL_EST_KEY");
                datoTabla.PART_ACCT = row.GetString("PART_ACCT");
                datoTabla.CMMT_ITEM = row.GetString("CMMT_ITEM");
                datoTabla.REC_IND = row.GetString("REC_IND");
                datoTabla.FUNDS_CTR = row.GetString("FUNDS_CTR");
                datoTabla.FUND = row.GetString("FUND");
                datoTabla.FUNC_AREA = row.GetString("FUNC_AREA");
                datoTabla.REF_DATE = row.GetString("REF_DATE");
                datoTabla.TAX_CODE = row.GetString("TAX_CODE");
                datoTabla.TAXJURCODE = row.GetString("TAXJURCODE");
                datoTabla.NOND_ITAX = row.GetString("NOND_ITAX");
                datoTabla.ACTTYPE = row.GetString("ACTTYPE");
                datoTabla.CO_BUSPROC = row.GetString("CO_BUSPROC");
                datoTabla.RES_DOC = row.GetString("RES_DOC");
                datoTabla.RES_ITEM = row.GetString("RES_ITEM");
                datoTabla.ACTIVITY = row.GetString("ACTIVITY");
                datoTabla.GRANT_NBR = row.GetString("GRANT_NBR");
                datoTabla.BUDGET_PERIOD = row.GetString("BUDGET_PERIOD");
                datoTabla.FINAL_IND = row.GetString("FINAL_IND");
                datoTabla.FINAL_REASON = row.GetString("FINAL_REASON");
                res.POACCOUNTX[i_POACCOUNTX] = datoTabla; ++i_POACCOUNTX;
            }
            IRfcTable rfcTable_POADDRDELIVERY = rfcFunction.GetTable("POADDRDELIVERY");
            res.POADDRDELIVERY = new BAPI_PO_CHANGE_POADDRDELIVERY[rfcTable_POADDRDELIVERY.RowCount];
            int i_POADDRDELIVERY = 0;
            foreach (IRfcStructure row in rfcTable_POADDRDELIVERY)
            {
                BAPI_PO_CHANGE_POADDRDELIVERY datoTabla = new BAPI_PO_CHANGE_POADDRDELIVERY();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.ADDR_NO = row.GetString("ADDR_NO");
                datoTabla.FORMOFADDR = row.GetString("FORMOFADDR");
                datoTabla.NAME = row.GetString("NAME");
                datoTabla.NAME_2 = row.GetString("NAME_2");
                datoTabla.NAME_3 = row.GetString("NAME_3");
                datoTabla.NAME_4 = row.GetString("NAME_4");
                datoTabla.C_O_NAME = row.GetString("C_O_NAME");
                datoTabla.CITY = row.GetString("CITY");
                datoTabla.DISTRICT = row.GetString("DISTRICT");
                datoTabla.CITY_NO = row.GetString("CITY_NO");
                datoTabla.POSTL_COD1 = row.GetString("POSTL_COD1");
                datoTabla.POSTL_COD2 = row.GetString("POSTL_COD2");
                datoTabla.POSTL_COD3 = row.GetString("POSTL_COD3");
                datoTabla.PO_BOX = row.GetString("PO_BOX");
                datoTabla.PO_BOX_CIT = row.GetString("PO_BOX_CIT");
                datoTabla.DELIV_DIS = row.GetString("DELIV_DIS");
                datoTabla.STREET = row.GetString("STREET");
                datoTabla.STREET_NO = row.GetString("STREET_NO");
                datoTabla.STR_ABBR = row.GetString("STR_ABBR");
                datoTabla.HOUSE_NO = row.GetString("HOUSE_NO");
                datoTabla.STR_SUPPL1 = row.GetString("STR_SUPPL1");
                datoTabla.STR_SUPPL2 = row.GetString("STR_SUPPL2");
                datoTabla.LOCATION = row.GetString("LOCATION");
                datoTabla.BUILDING = row.GetString("BUILDING");
                datoTabla.FLOOR = row.GetString("FLOOR");
                datoTabla.ROOM_NO = row.GetString("ROOM_NO");
                datoTabla.COUNTRY = row.GetString("COUNTRY");
                datoTabla.LANGU = row.GetString("LANGU");
                datoTabla.REGION = row.GetString("REGION");
                datoTabla.SORT1 = row.GetString("SORT1");
                datoTabla.SORT2 = row.GetString("SORT2");
                datoTabla.TIME_ZONE = row.GetString("TIME_ZONE");
                datoTabla.TAXJURCODE = row.GetString("TAXJURCODE");
                datoTabla.ADR_NOTES = row.GetString("ADR_NOTES");
                datoTabla.COMM_TYPE = row.GetString("COMM_TYPE");
                datoTabla.TEL1_NUMBR = row.GetString("TEL1_NUMBR");
                datoTabla.TEL1_EXT = row.GetString("TEL1_EXT");
                datoTabla.FAX_NUMBER = row.GetString("FAX_NUMBER");
                datoTabla.FAX_EXTENS = row.GetString("FAX_EXTENS");
                datoTabla.STREET_LNG = row.GetString("STREET_LNG");
                datoTabla.DISTRCT_NO = row.GetString("DISTRCT_NO");
                datoTabla.CHCKSTATUS = row.GetString("CHCKSTATUS");
                datoTabla.PBOXCIT_NO = row.GetString("PBOXCIT_NO");
                datoTabla.TRANSPZONE = row.GetString("TRANSPZONE");
                datoTabla.HOUSE_NO2 = row.GetString("HOUSE_NO2");
                datoTabla.E_MAIL = row.GetString("E_MAIL");
                datoTabla.STR_SUPPL3 = row.GetString("STR_SUPPL3");
                datoTabla.TITLE = row.GetString("TITLE");
                datoTabla.COUNTRYISO = row.GetString("COUNTRYISO");
                datoTabla.LANGU_ISO = row.GetString("LANGU_ISO");
                datoTabla.BUILD_LONG = row.GetString("BUILD_LONG");
                datoTabla.REGIOGROUP = row.GetString("REGIOGROUP");
                datoTabla.SUPP_VENDOR = row.GetString("SUPP_VENDOR");
                datoTabla.CUSTOMER = row.GetString("CUSTOMER");
                datoTabla.SC_VENDOR = row.GetString("SC_VENDOR");
                res.POADDRDELIVERY[i_POADDRDELIVERY] = datoTabla; ++i_POADDRDELIVERY;
            }
            IRfcTable rfcTable_POCOMPONENTS = rfcFunction.GetTable("POCOMPONENTS");
            res.POCOMPONENTS = new BAPI_PO_CHANGE_POCOMPONENTS[rfcTable_POCOMPONENTS.RowCount];
            int i_POCOMPONENTS = 0;
            foreach (IRfcStructure row in rfcTable_POCOMPONENTS)
            {
                BAPI_PO_CHANGE_POCOMPONENTS datoTabla = new BAPI_PO_CHANGE_POCOMPONENTS();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SCHED_LINE = row.GetInt("SCHED_LINE");
                datoTabla.ITEM_NO = row.GetInt("ITEM_NO");
                datoTabla.MATERIAL = row.GetString("MATERIAL");
                datoTabla.ENTRY_QUANTITY = row.GetDecimal("ENTRY_QUANTITY");
                datoTabla.ENTRY_UOM = row.GetString("ENTRY_UOM");
                datoTabla.ENTRY_UOM_ISO = row.GetString("ENTRY_UOM_ISO");
                datoTabla.FIXED_QUAN = row.GetString("FIXED_QUAN");
                datoTabla.PLANT = row.GetString("PLANT");
                datoTabla.REQ_DATE = row.GetString("REQ_DATE");
                datoTabla.CHANGE_ID = row.GetString("CHANGE_ID");
                datoTabla.MATERIAL_EXTERNAL = row.GetString("MATERIAL_EXTERNAL");
                datoTabla.MATERIAL_GUID = row.GetString("MATERIAL_GUID");
                datoTabla.MATERIAL_VERSION = row.GetString("MATERIAL_VERSION");
                datoTabla.ITEM_CAT = row.GetString("ITEM_CAT");
                datoTabla.REQ_QUAN = row.GetDecimal("REQ_QUAN");
                datoTabla.BASE_UOM = row.GetString("BASE_UOM");
                datoTabla.BASE_UOM_ISO = row.GetString("BASE_UOM_ISO");
                datoTabla.PHANT_ITEM = row.GetString("PHANT_ITEM");
                datoTabla.BATCH = row.GetString("BATCH");
                datoTabla.MAT_PROVISION = row.GetString("MAT_PROVISION");
                datoTabla.ISS_ST_LOC = row.GetString("ISS_ST_LOC");
                datoTabla.REV_LEV = row.GetString("REV_LEV");
                datoTabla.REQ_SEGMENT = row.GetString("REQ_SEGMENT");
                //datoTabla.MATERIAL_LONG = row.GetString("MATERIAL_LONG");
                res.POCOMPONENTS[i_POCOMPONENTS] = datoTabla; ++i_POCOMPONENTS;
            }
            IRfcTable rfcTable_POCOMPONENTSX = rfcFunction.GetTable("POCOMPONENTSX");
            res.POCOMPONENTSX = new BAPI_PO_CHANGE_POCOMPONENTSX[rfcTable_POCOMPONENTSX.RowCount];
            int i_POCOMPONENTSX = 0;
            foreach (IRfcStructure row in rfcTable_POCOMPONENTSX)
            {
                BAPI_PO_CHANGE_POCOMPONENTSX datoTabla = new BAPI_PO_CHANGE_POCOMPONENTSX();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SCHED_LINE = row.GetInt("SCHED_LINE");
                datoTabla.ITEM_NO = row.GetInt("ITEM_NO");
                datoTabla.PO_ITEMX = row.GetString("PO_ITEMX");
                datoTabla.SCHED_LINEX = row.GetString("SCHED_LINEX");
                datoTabla.ITEM_NOX = row.GetString("ITEM_NOX");
                datoTabla.MATERIAL = row.GetString("MATERIAL");
                datoTabla.ENTRY_QUANTITY = row.GetString("ENTRY_QUANTITY");
                datoTabla.ENTRY_UOM = row.GetString("ENTRY_UOM");
                datoTabla.ENTRY_UOM_ISO = row.GetString("ENTRY_UOM_ISO");
                datoTabla.FIXED_QUAN = row.GetString("FIXED_QUAN");
                datoTabla.PLANT = row.GetString("PLANT");
                datoTabla.REQ_DATE = row.GetString("REQ_DATE");
                datoTabla.CHANGE_ID = row.GetString("CHANGE_ID");
                datoTabla.MATERIAL_EXTERNAL = row.GetString("MATERIAL_EXTERNAL");
                datoTabla.MATERIAL_GUID = row.GetString("MATERIAL_GUID");
                datoTabla.MATERIAL_VERSION = row.GetString("MATERIAL_VERSION");
                datoTabla.REQ_QUAN = row.GetString("REQ_QUAN");
                datoTabla.BASE_UOM = row.GetString("BASE_UOM");
                datoTabla.BASE_UOM_ISO = row.GetString("BASE_UOM_ISO");
                datoTabla.PHANT_ITEM = row.GetString("PHANT_ITEM");
                datoTabla.BATCH = row.GetString("BATCH");
                datoTabla.MAT_PROVISION = row.GetString("MAT_PROVISION");
                datoTabla.ISS_ST_LOC = row.GetString("ISS_ST_LOC");
                datoTabla.ITEM_CAT = row.GetString("ITEM_CAT");
                datoTabla.REV_LEV = row.GetString("REV_LEV");
                datoTabla.REQ_SEGMENT = row.GetString("REQ_SEGMENT");
                //datoTabla.MATERIAL_LONG = row.GetString("MATERIAL_LONG");
                res.POCOMPONENTSX[i_POCOMPONENTSX] = datoTabla; ++i_POCOMPONENTSX;
            }
            IRfcTable rfcTable_POCOND = rfcFunction.GetTable("POCOND");
            res.POCOND = new BAPI_PO_CHANGE_POCOND[rfcTable_POCOND.RowCount];
            int i_POCOND = 0;
            foreach (IRfcStructure row in rfcTable_POCOND)
            {
                BAPI_PO_CHANGE_POCOND datoTabla = new BAPI_PO_CHANGE_POCOND();
                datoTabla.CONDITION_NO = row.GetString("CONDITION_NO");
                datoTabla.ITM_NUMBER = row.GetInt("ITM_NUMBER");
                datoTabla.COND_ST_NO = row.GetInt("COND_ST_NO");
                datoTabla.COND_COUNT = row.GetInt("COND_COUNT");
                datoTabla.COND_TYPE = row.GetString("COND_TYPE");
                datoTabla.COND_VALUE = row.GetDecimal("COND_VALUE");
                datoTabla.CURRENCY = row.GetString("CURRENCY");
                datoTabla.CURRENCY_ISO = row.GetString("CURRENCY_ISO");
                datoTabla.COND_UNIT = row.GetString("COND_UNIT");
                datoTabla.COND_UNIT_ISO = row.GetString("COND_UNIT_ISO");
                datoTabla.COND_P_UNT = row.GetDecimal("COND_P_UNT");
                datoTabla.APPLICATIO = row.GetString("APPLICATIO");
                datoTabla.CONPRICDAT = row.GetString("CONPRICDAT");
                datoTabla.CALCTYPCON = row.GetString("CALCTYPCON");
                datoTabla.CONBASEVAL = row.GetDecimal("CONBASEVAL");
                datoTabla.CONEXCHRAT = row.GetDecimal("CONEXCHRAT");
                datoTabla.NUMCONVERT = row.GetDecimal("NUMCONVERT");
                datoTabla.DENOMINATO = row.GetDecimal("DENOMINATO");
                datoTabla.CONDTYPE = row.GetString("CONDTYPE");
                datoTabla.STAT_CON = row.GetString("STAT_CON");
                datoTabla.SCALETYPE = row.GetString("SCALETYPE");
                datoTabla.ACCRUALS = row.GetString("ACCRUALS");
                datoTabla.CONINVOLST = row.GetString("CONINVOLST");
                datoTabla.CONDORIGIN = row.GetString("CONDORIGIN");
                datoTabla.GROUPCOND = row.GetString("GROUPCOND");
                datoTabla.COND_UPDAT = row.GetString("COND_UPDAT");
                datoTabla.ACCESS_SEQ = row.GetInt("ACCESS_SEQ");
                datoTabla.CONDCOUNT = row.GetInt("CONDCOUNT");
                datoTabla.CONDCNTRL = row.GetString("CONDCNTRL");
                datoTabla.CONDISACTI = row.GetString("CONDISACTI");
                datoTabla.CONDCLASS = row.GetString("CONDCLASS");
                datoTabla.FACTBASVAL = row.GetDouble("FACTBASVAL");
                datoTabla.SCALEBASIN = row.GetString("SCALEBASIN");
                datoTabla.SCALBASVAL = row.GetDecimal("SCALBASVAL");
                datoTabla.UNITMEASUR = row.GetString("UNITMEASUR");
                datoTabla.UNITMEASUR_ISO = row.GetString("UNITMEASUR_ISO");
                datoTabla.CURRENCKEY = row.GetString("CURRENCKEY");
                datoTabla.CURRENCKEY_ISO = row.GetString("CURRENCKEY_ISO");
                datoTabla.CONDINCOMP = row.GetString("CONDINCOMP");
                datoTabla.CONDCONFIG = row.GetString("CONDCONFIG");
                datoTabla.CONDCHAMAN = row.GetString("CONDCHAMAN");
                datoTabla.COND_NO = row.GetString("COND_NO");
                datoTabla.CHANGE_ID = row.GetString("CHANGE_ID");
                datoTabla.VENDOR_NO = row.GetString("VENDOR_NO");
                datoTabla.ACCESS_SEQ_LONG = row.GetInt("ACCESS_SEQ_LONG");
                datoTabla.COND_COUNT_LONG = row.GetInt("COND_COUNT_LONG");
                res.POCOND[i_POCOND] = datoTabla; ++i_POCOND;
            }
            IRfcTable rfcTable_POCONDHEADER = rfcFunction.GetTable("POCONDHEADER");
            res.POCONDHEADER = new BAPI_PO_CHANGE_POCONDHEADER[rfcTable_POCONDHEADER.RowCount];
            int i_POCONDHEADER = 0;
            foreach (IRfcStructure row in rfcTable_POCONDHEADER)
            {
                BAPI_PO_CHANGE_POCONDHEADER datoTabla = new BAPI_PO_CHANGE_POCONDHEADER();
                datoTabla.CONDITION_NO = row.GetString("CONDITION_NO");
                datoTabla.ITM_NUMBER = row.GetInt("ITM_NUMBER");
                datoTabla.COND_ST_NO = row.GetInt("COND_ST_NO");
                datoTabla.COND_COUNT = row.GetInt("COND_COUNT");
                datoTabla.COND_TYPE = row.GetString("COND_TYPE");
                datoTabla.COND_VALUE = row.GetDecimal("COND_VALUE");
                datoTabla.CURRENCY = row.GetString("CURRENCY");
                datoTabla.CURRENCY_ISO = row.GetString("CURRENCY_ISO");
                datoTabla.COND_UNIT = row.GetString("COND_UNIT");
                datoTabla.COND_UNIT_ISO = row.GetString("COND_UNIT_ISO");
                datoTabla.COND_P_UNT = row.GetDecimal("COND_P_UNT");
                datoTabla.APPLICATIO = row.GetString("APPLICATIO");
                datoTabla.CONPRICDAT = row.GetString("CONPRICDAT");
                datoTabla.CALCTYPCON = row.GetString("CALCTYPCON");
                datoTabla.CONBASEVAL = row.GetDecimal("CONBASEVAL");
                datoTabla.CONEXCHRAT = row.GetDecimal("CONEXCHRAT");
                datoTabla.NUMCONVERT = row.GetDecimal("NUMCONVERT");
                datoTabla.DENOMINATO = row.GetDecimal("DENOMINATO");
                datoTabla.CONDTYPE = row.GetString("CONDTYPE");
                datoTabla.STAT_CON = row.GetString("STAT_CON");
                datoTabla.SCALETYPE = row.GetString("SCALETYPE");
                datoTabla.ACCRUALS = row.GetString("ACCRUALS");
                datoTabla.CONINVOLST = row.GetString("CONINVOLST");
                datoTabla.CONDORIGIN = row.GetString("CONDORIGIN");
                datoTabla.GROUPCOND = row.GetString("GROUPCOND");
                datoTabla.COND_UPDAT = row.GetString("COND_UPDAT");
                datoTabla.ACCESS_SEQ = row.GetInt("ACCESS_SEQ");
                datoTabla.CONDCOUNT = row.GetInt("CONDCOUNT");
                datoTabla.CONDCNTRL = row.GetString("CONDCNTRL");
                datoTabla.CONDISACTI = row.GetString("CONDISACTI");
                datoTabla.CONDCLASS = row.GetString("CONDCLASS");
                datoTabla.FACTBASVAL = row.GetDouble("FACTBASVAL");
                datoTabla.SCALEBASIN = row.GetString("SCALEBASIN");
                datoTabla.SCALBASVAL = row.GetDecimal("SCALBASVAL");
                datoTabla.UNITMEASUR = row.GetString("UNITMEASUR");
                datoTabla.UNITMEASUR_ISO = row.GetString("UNITMEASUR_ISO");
                datoTabla.CURRENCKEY = row.GetString("CURRENCKEY");
                datoTabla.CURRENCKEY_ISO = row.GetString("CURRENCKEY_ISO");
                datoTabla.CONDINCOMP = row.GetString("CONDINCOMP");
                datoTabla.CONDCONFIG = row.GetString("CONDCONFIG");
                datoTabla.CONDCHAMAN = row.GetString("CONDCHAMAN");
                datoTabla.COND_NO = row.GetString("COND_NO");
                datoTabla.CHANGE_ID = row.GetString("CHANGE_ID");
                datoTabla.VENDOR_NO = row.GetString("VENDOR_NO");
                datoTabla.ACCESS_SEQ_LONG = row.GetInt("ACCESS_SEQ_LONG");
                datoTabla.COND_COUNT_LONG = row.GetInt("COND_COUNT_LONG");
                res.POCONDHEADER[i_POCONDHEADER] = datoTabla; ++i_POCONDHEADER;
            }
            IRfcTable rfcTable_POCONDHEADERX = rfcFunction.GetTable("POCONDHEADERX");
            res.POCONDHEADERX = new BAPI_PO_CHANGE_POCONDHEADERX[rfcTable_POCONDHEADERX.RowCount];
            int i_POCONDHEADERX = 0;
            foreach (IRfcStructure row in rfcTable_POCONDHEADERX)
            {
                BAPI_PO_CHANGE_POCONDHEADERX datoTabla = new BAPI_PO_CHANGE_POCONDHEADERX();
                datoTabla.CONDITION_NO = row.GetString("CONDITION_NO");
                datoTabla.ITM_NUMBER = row.GetInt("ITM_NUMBER");
                datoTabla.COND_ST_NO = row.GetInt("COND_ST_NO");
                datoTabla.CONDITION_NOX = row.GetString("CONDITION_NOX");
                datoTabla.ITM_NUMBERX = row.GetString("ITM_NUMBERX");
                datoTabla.COND_ST_NOX = row.GetString("COND_ST_NOX");
                datoTabla.COND_COUNT = row.GetString("COND_COUNT");
                datoTabla.COND_TYPE = row.GetString("COND_TYPE");
                datoTabla.COND_VALUE = row.GetString("COND_VALUE");
                datoTabla.CURRENCY = row.GetString("CURRENCY");
                datoTabla.CURRENCY_ISO = row.GetString("CURRENCY_ISO");
                datoTabla.COND_UNIT = row.GetString("COND_UNIT");
                datoTabla.COND_UNIT_ISO = row.GetString("COND_UNIT_ISO");
                datoTabla.COND_P_UNT = row.GetString("COND_P_UNT");
                datoTabla.APPLICATIO = row.GetString("APPLICATIO");
                datoTabla.CONPRICDAT = row.GetString("CONPRICDAT");
                datoTabla.CALCTYPCON = row.GetString("CALCTYPCON");
                datoTabla.CONBASEVAL = row.GetString("CONBASEVAL");
                datoTabla.CONEXCHRAT = row.GetString("CONEXCHRAT");
                datoTabla.NUMCONVERT = row.GetString("NUMCONVERT");
                datoTabla.DENOMINATO = row.GetString("DENOMINATO");
                datoTabla.CONDTYPE = row.GetString("CONDTYPE");
                datoTabla.STAT_CON = row.GetString("STAT_CON");
                datoTabla.SCALETYPE = row.GetString("SCALETYPE");
                datoTabla.ACCRUALS = row.GetString("ACCRUALS");
                datoTabla.CONINVOLST = row.GetString("CONINVOLST");
                datoTabla.CONDORIGIN = row.GetString("CONDORIGIN");
                datoTabla.GROUPCOND = row.GetString("GROUPCOND");
                datoTabla.COND_UPDAT = row.GetString("COND_UPDAT");
                datoTabla.ACCESS_SEQ = row.GetString("ACCESS_SEQ");
                datoTabla.CONDCOUNT = row.GetString("CONDCOUNT");
                datoTabla.CONDCNTRL = row.GetString("CONDCNTRL");
                datoTabla.CONDISACTI = row.GetString("CONDISACTI");
                datoTabla.CONDCLASS = row.GetString("CONDCLASS");
                datoTabla.FACTBASVAL = row.GetString("FACTBASVAL");
                datoTabla.SCALEBASIN = row.GetString("SCALEBASIN");
                datoTabla.SCALBASVAL = row.GetString("SCALBASVAL");
                datoTabla.UNITMEASUR = row.GetString("UNITMEASUR");
                datoTabla.UNITMEASUR_ISO = row.GetString("UNITMEASUR_ISO");
                datoTabla.CURRENCKEY = row.GetString("CURRENCKEY");
                datoTabla.CURRENCKEY_ISO = row.GetString("CURRENCKEY_ISO");
                datoTabla.CONDINCOMP = row.GetString("CONDINCOMP");
                datoTabla.CONDCONFIG = row.GetString("CONDCONFIG");
                datoTabla.CONDCHAMAN = row.GetString("CONDCHAMAN");
                datoTabla.COND_NO = row.GetString("COND_NO");
                datoTabla.CHANGE_ID = row.GetString("CHANGE_ID");
                datoTabla.VENDOR_NO = row.GetString("VENDOR_NO");
                datoTabla.ACCESS_SEQ_LONG = row.GetString("ACCESS_SEQ_LONG");
                datoTabla.COND_COUNT_LONG = row.GetString("COND_COUNT_LONG");
                res.POCONDHEADERX[i_POCONDHEADERX] = datoTabla; ++i_POCONDHEADERX;
            }
            IRfcTable rfcTable_POCONDX = rfcFunction.GetTable("POCONDX");
            res.POCONDX = new BAPI_PO_CHANGE_POCONDX[rfcTable_POCONDX.RowCount];
            int i_POCONDX = 0;
            foreach (IRfcStructure row in rfcTable_POCONDX)
            {
                BAPI_PO_CHANGE_POCONDX datoTabla = new BAPI_PO_CHANGE_POCONDX();
                datoTabla.CONDITION_NO = row.GetString("CONDITION_NO");
                datoTabla.ITM_NUMBER = row.GetInt("ITM_NUMBER");
                datoTabla.COND_ST_NO = row.GetInt("COND_ST_NO");
                datoTabla.CONDITION_NOX = row.GetString("CONDITION_NOX");
                datoTabla.ITM_NUMBERX = row.GetString("ITM_NUMBERX");
                datoTabla.COND_ST_NOX = row.GetString("COND_ST_NOX");
                datoTabla.COND_COUNT = row.GetString("COND_COUNT");
                datoTabla.COND_TYPE = row.GetString("COND_TYPE");
                datoTabla.COND_VALUE = row.GetString("COND_VALUE");
                datoTabla.CURRENCY = row.GetString("CURRENCY");
                datoTabla.CURRENCY_ISO = row.GetString("CURRENCY_ISO");
                datoTabla.COND_UNIT = row.GetString("COND_UNIT");
                datoTabla.COND_UNIT_ISO = row.GetString("COND_UNIT_ISO");
                datoTabla.COND_P_UNT = row.GetString("COND_P_UNT");
                datoTabla.APPLICATIO = row.GetString("APPLICATIO");
                datoTabla.CONPRICDAT = row.GetString("CONPRICDAT");
                datoTabla.CALCTYPCON = row.GetString("CALCTYPCON");
                datoTabla.CONBASEVAL = row.GetString("CONBASEVAL");
                datoTabla.CONEXCHRAT = row.GetString("CONEXCHRAT");
                datoTabla.NUMCONVERT = row.GetString("NUMCONVERT");
                datoTabla.DENOMINATO = row.GetString("DENOMINATO");
                datoTabla.CONDTYPE = row.GetString("CONDTYPE");
                datoTabla.STAT_CON = row.GetString("STAT_CON");
                datoTabla.SCALETYPE = row.GetString("SCALETYPE");
                datoTabla.ACCRUALS = row.GetString("ACCRUALS");
                datoTabla.CONINVOLST = row.GetString("CONINVOLST");
                datoTabla.CONDORIGIN = row.GetString("CONDORIGIN");
                datoTabla.GROUPCOND = row.GetString("GROUPCOND");
                datoTabla.COND_UPDAT = row.GetString("COND_UPDAT");
                datoTabla.ACCESS_SEQ = row.GetString("ACCESS_SEQ");
                datoTabla.CONDCOUNT = row.GetString("CONDCOUNT");
                datoTabla.CONDCNTRL = row.GetString("CONDCNTRL");
                datoTabla.CONDISACTI = row.GetString("CONDISACTI");
                datoTabla.CONDCLASS = row.GetString("CONDCLASS");
                datoTabla.FACTBASVAL = row.GetString("FACTBASVAL");
                datoTabla.SCALEBASIN = row.GetString("SCALEBASIN");
                datoTabla.SCALBASVAL = row.GetString("SCALBASVAL");
                datoTabla.UNITMEASUR = row.GetString("UNITMEASUR");
                datoTabla.UNITMEASUR_ISO = row.GetString("UNITMEASUR_ISO");
                datoTabla.CURRENCKEY = row.GetString("CURRENCKEY");
                datoTabla.CURRENCKEY_ISO = row.GetString("CURRENCKEY_ISO");
                datoTabla.CONDINCOMP = row.GetString("CONDINCOMP");
                datoTabla.CONDCONFIG = row.GetString("CONDCONFIG");
                datoTabla.CONDCHAMAN = row.GetString("CONDCHAMAN");
                datoTabla.COND_NO = row.GetString("COND_NO");
                datoTabla.CHANGE_ID = row.GetString("CHANGE_ID");
                datoTabla.VENDOR_NO = row.GetString("VENDOR_NO");
                datoTabla.ACCESS_SEQ_LONG = row.GetString("ACCESS_SEQ_LONG");
                datoTabla.COND_COUNT_LONG = row.GetString("COND_COUNT_LONG");
                res.POCONDX[i_POCONDX] = datoTabla; ++i_POCONDX;
            }
            IRfcTable rfcTable_POCONFIRMATION = rfcFunction.GetTable("POCONFIRMATION");
            res.POCONFIRMATION = new BAPI_PO_CHANGE_POCONFIRMATION[rfcTable_POCONFIRMATION.RowCount];
            int i_POCONFIRMATION = 0;
            foreach (IRfcStructure row in rfcTable_POCONFIRMATION)
            {
                BAPI_PO_CHANGE_POCONFIRMATION datoTabla = new BAPI_PO_CHANGE_POCONFIRMATION();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.CONF_SER = row.GetInt("CONF_SER");
                datoTabla.CONF_TYPE = row.GetString("CONF_TYPE");
                datoTabla.CONF_NAME = row.GetString("CONF_NAME");
                datoTabla.DEL_DATCAT = row.GetString("DEL_DATCAT");
                datoTabla.DEL_DATCAT_EXT = row.GetString("DEL_DATCAT_EXT");
                datoTabla.DELIV_DATE = row.GetString("DELIV_DATE");
                datoTabla.DELIV_TIME = row.GetString("DELIV_TIME");
                datoTabla.QUANTITY = row.GetDecimal("QUANTITY");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                datoTabla.DISPO_REL = row.GetString("DISPO_REL");
                datoTabla.RECEIPT_REL = row.GetString("RECEIPT_REL");
                datoTabla.EXT_DOC = row.GetString("EXT_DOC");
                datoTabla.DELIV_NUMB = row.GetString("DELIV_NUMB");
                datoTabla.DELIV_ITEM = row.GetInt("DELIV_ITEM");
                datoTabla.EXT_DOC_LONG = row.GetString("EXT_DOC_LONG");
                datoTabla.HANDOVERDATE = row.GetString("HANDOVERDATE");
                datoTabla.HANDOVERTIME = row.GetString("HANDOVERTIME");
                res.POCONFIRMATION[i_POCONFIRMATION] = datoTabla; ++i_POCONFIRMATION;
            }
            IRfcTable rfcTable_POCONTRACTLIMITS = rfcFunction.GetTable("POCONTRACTLIMITS");
            res.POCONTRACTLIMITS = new BAPI_PO_CHANGE_POCONTRACTLIMITS[rfcTable_POCONTRACTLIMITS.RowCount];
            int i_POCONTRACTLIMITS = 0;
            foreach (IRfcStructure row in rfcTable_POCONTRACTLIMITS)
            {
                BAPI_PO_CHANGE_POCONTRACTLIMITS datoTabla = new BAPI_PO_CHANGE_POCONTRACTLIMITS();
                datoTabla.PCKG_NO = row.GetInt("PCKG_NO");
                datoTabla.LINE_NO = row.GetInt("LINE_NO");
                datoTabla.CON_NUMBER = row.GetString("CON_NUMBER");
                datoTabla.CON_ITEM = row.GetInt("CON_ITEM");
                datoTabla.LIMIT = row.GetDecimal("LIMIT");
                datoTabla.NO_LIMIT = row.GetString("NO_LIMIT");
                datoTabla.PRICE_CHG = row.GetString("PRICE_CHG");
                datoTabla.SHORT_TEXT = row.GetString("SHORT_TEXT");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                res.POCONTRACTLIMITS[i_POCONTRACTLIMITS] = datoTabla; ++i_POCONTRACTLIMITS;
            }
            IRfcTable rfcTable_POEXPIMPITEM = rfcFunction.GetTable("POEXPIMPITEM");
            res.POEXPIMPITEM = new BAPI_PO_CHANGE_POEXPIMPITEM[rfcTable_POEXPIMPITEM.RowCount];
            int i_POEXPIMPITEM = 0;
            foreach (IRfcStructure row in rfcTable_POEXPIMPITEM)
            {
                BAPI_PO_CHANGE_POEXPIMPITEM datoTabla = new BAPI_PO_CHANGE_POEXPIMPITEM();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.BUSINESS_TRANSACTION_TYPE = row.GetString("BUSINESS_TRANSACTION_TYPE");
                datoTabla.EXPORT_IMPORT_PROCEDURE = row.GetString("EXPORT_IMPORT_PROCEDURE");
                datoTabla.COUNTRYORI = row.GetString("COUNTRYORI");
                datoTabla.COUNTRYORI_ISO = row.GetString("COUNTRYORI_ISO");
                datoTabla.REGIONORIG = row.GetString("REGIONORIG");
                datoTabla.COMM_CODE = row.GetString("COMM_CODE");
                datoTabla.SHIPPING_COUNTRY = row.GetString("SHIPPING_COUNTRY");
                datoTabla.SHIPPING_COUNTRY_ISO = row.GetString("SHIPPING_COUNTRY_ISO");
                res.POEXPIMPITEM[i_POEXPIMPITEM] = datoTabla; ++i_POEXPIMPITEM;
            }
            IRfcTable rfcTable_POEXPIMPITEMX = rfcFunction.GetTable("POEXPIMPITEMX");
            res.POEXPIMPITEMX = new BAPI_PO_CHANGE_POEXPIMPITEMX[rfcTable_POEXPIMPITEMX.RowCount];
            int i_POEXPIMPITEMX = 0;
            foreach (IRfcStructure row in rfcTable_POEXPIMPITEMX)
            {
                BAPI_PO_CHANGE_POEXPIMPITEMX datoTabla = new BAPI_PO_CHANGE_POEXPIMPITEMX();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.BUSINESS_TRANSACTION_TYPE = row.GetString("BUSINESS_TRANSACTION_TYPE");
                datoTabla.EXPORT_IMPORT_PROCEDURE = row.GetString("EXPORT_IMPORT_PROCEDURE");
                datoTabla.COUNTRYORI = row.GetString("COUNTRYORI");
                datoTabla.COUNTRYORI_ISO = row.GetString("COUNTRYORI_ISO");
                datoTabla.REGIONORIG = row.GetString("REGIONORIG");
                datoTabla.COMM_CODE = row.GetString("COMM_CODE");
                datoTabla.SHIPPING_COUNTRY = row.GetString("SHIPPING_COUNTRY");
                datoTabla.SHIPPING_COUNTRY_ISO = row.GetString("SHIPPING_COUNTRY_ISO");
                res.POEXPIMPITEMX[i_POEXPIMPITEMX] = datoTabla; ++i_POEXPIMPITEMX;
            }
            IRfcTable rfcTable_POHISTORY = rfcFunction.GetTable("POHISTORY");
            res.POHISTORY = new BAPI_PO_CHANGE_POHISTORY[rfcTable_POHISTORY.RowCount];
            int i_POHISTORY = 0;
            foreach (IRfcStructure row in rfcTable_POHISTORY)
            {
                BAPI_PO_CHANGE_POHISTORY datoTabla = new BAPI_PO_CHANGE_POHISTORY();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SERIAL_NO = row.GetInt("SERIAL_NO");
                datoTabla.PROCESS_ID = row.GetString("PROCESS_ID");
                datoTabla.DOC_YEAR = row.GetInt("DOC_YEAR");
                datoTabla.MAT_DOC = row.GetString("MAT_DOC");
                datoTabla.MATDOC_ITM = row.GetInt("MATDOC_ITM");
                datoTabla.HIST_TYPE = row.GetString("HIST_TYPE");
                datoTabla.MOVE_TYPE = row.GetString("MOVE_TYPE");
                datoTabla.PSTNG_DATE = row.GetString("PSTNG_DATE");
                datoTabla.QUANTITY = row.GetDecimal("QUANTITY");
                datoTabla.VAL_LOCCUR = row.GetDecimal("VAL_LOCCUR");
                datoTabla.VAL_FORCUR = row.GetDecimal("VAL_FORCUR");
                datoTabla.CURRENCY = row.GetString("CURRENCY");
                datoTabla.CL_VAL_LOC = row.GetDecimal("CL_VAL_LOC");
                datoTabla.BLOCKED_QY = row.GetDecimal("BLOCKED_QY");
                datoTabla.BL_QTY = row.GetDecimal("BL_QTY");
                datoTabla.DB_CR_IND = row.GetString("DB_CR_IND");
                datoTabla.VAL_TYPE = row.GetString("VAL_TYPE");
                datoTabla.NO_MORE_GR = row.GetString("NO_MORE_GR");
                datoTabla.REF_DOC_NO = row.GetString("REF_DOC_NO");
                datoTabla.REF_DOC_YR = row.GetInt("REF_DOC_YR");
                datoTabla.REF_DOC = row.GetString("REF_DOC");
                datoTabla.REF_DOC_IT = row.GetInt("REF_DOC_IT");
                datoTabla.MOVE_REAS = row.GetInt("MOVE_REAS");
                datoTabla.ENTRY_DATE = row.GetString("ENTRY_DATE");
                datoTabla.ENTRY_TIME = row.GetString("ENTRY_TIME");
                datoTabla.IVVAL_LOC = row.GetDecimal("IVVAL_LOC");
                datoTabla.IVVAL_FOR = row.GetDecimal("IVVAL_FOR");
                datoTabla.MATERIAL = row.GetString("MATERIAL");
                datoTabla.PLANT = row.GetString("PLANT");
                datoTabla.CONF_SER = row.GetInt("CONF_SER");
                datoTabla.CONDITION = row.GetString("CONDITION");
                datoTabla.TAX_CODE = row.GetString("TAX_CODE");
                datoTabla.DELIV_QTY = row.GetDecimal("DELIV_QTY");
                datoTabla.DELIV_UNIT = row.GetString("DELIV_UNIT");
                datoTabla.PUR_MAT = row.GetString("PUR_MAT");
                datoTabla.LOC_CURR = row.GetString("LOC_CURR");
                datoTabla.BATCH = row.GetString("BATCH");
                datoTabla.DOC_DATE = row.GetString("DOC_DATE");
                datoTabla.CURRENCY_ISO = row.GetString("CURRENCY_ISO");
                datoTabla.LOC_CURR_ISO = row.GetString("LOC_CURR_ISO");
                datoTabla.DELIV_UNIT_ISO = row.GetString("DELIV_UNIT_ISO");
                datoTabla.MATERIAL_EXTERNAL = row.GetString("MATERIAL_EXTERNAL");
                datoTabla.MATERIAL_GUID = row.GetString("MATERIAL_GUID");
                datoTabla.MATERIAL_VERSION = row.GetString("MATERIAL_VERSION");
                datoTabla.PUR_MAT_EXTERNAL = row.GetString("PUR_MAT_EXTERNAL");
                datoTabla.PUR_MAT_GUID = row.GetString("PUR_MAT_GUID");
                datoTabla.PUR_MAT_VERSION = row.GetString("PUR_MAT_VERSION");
                datoTabla.REF_DOC_NO_LONG = row.GetString("REF_DOC_NO_LONG");
                datoTabla.STK_SEGMENT = row.GetString("STK_SEGMENT");
                //datoTabla.MATERIAL_LONG = row.GetString("MATERIAL_LONG");
                datoTabla.PUR_MAT_LONG = row.GetString("PUR_MAT_LONG");
                res.POHISTORY[i_POHISTORY] = datoTabla; ++i_POHISTORY;
            }
            IRfcTable rfcTable_POHISTORY_MA = rfcFunction.GetTable("POHISTORY_MA");
            res.POHISTORY_MA = new BAPI_PO_CHANGE_POHISTORY_MA[rfcTable_POHISTORY_MA.RowCount];
            int i_POHISTORY_MA = 0;
            foreach (IRfcStructure row in rfcTable_POHISTORY_MA)
            {
                BAPI_PO_CHANGE_POHISTORY_MA datoTabla = new BAPI_PO_CHANGE_POHISTORY_MA();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SERIAL_NO = row.GetInt("SERIAL_NO");
                datoTabla.PROCESS_ID = row.GetString("PROCESS_ID");
                datoTabla.DOC_YEAR = row.GetInt("DOC_YEAR");
                datoTabla.MAT_DOC = row.GetString("MAT_DOC");
                datoTabla.MATDOC_ITM = row.GetInt("MATDOC_ITM");
                datoTabla.REF_DOC_YR = row.GetInt("REF_DOC_YR");
                datoTabla.REF_DOC = row.GetString("REF_DOC");
                datoTabla.REF_DOC_IT = row.GetInt("REF_DOC_IT");
                datoTabla.DB_CR_IND = row.GetString("DB_CR_IND");
                datoTabla.QUANTITY_F = row.GetDouble("QUANTITY_F");
                datoTabla.QUANTITY = row.GetDecimal("QUANTITY");
                datoTabla.VAL_LOCCUR = row.GetDecimal("VAL_LOCCUR");
                datoTabla.VAL_FORCUR = row.GetDecimal("VAL_FORCUR");
                datoTabla.CL_VAL_LOC = row.GetDecimal("CL_VAL_LOC");
                datoTabla.IVVAL_LOC = row.GetDecimal("IVVAL_LOC");
                datoTabla.IVVAL_FOR = row.GetDecimal("IVVAL_FOR");
                datoTabla.TAX_CODE = row.GetString("TAX_CODE");
                res.POHISTORY_MA[i_POHISTORY_MA] = datoTabla; ++i_POHISTORY_MA;
            }
            IRfcTable rfcTable_POHISTORY_TOTALS = rfcFunction.GetTable("POHISTORY_TOTALS");
            res.POHISTORY_TOTALS = new BAPI_PO_CHANGE_POHISTORY_TOTALS[rfcTable_POHISTORY_TOTALS.RowCount];
            int i_POHISTORY_TOTALS = 0;
            foreach (IRfcStructure row in rfcTable_POHISTORY_TOTALS)
            {
                BAPI_PO_CHANGE_POHISTORY_TOTALS datoTabla = new BAPI_PO_CHANGE_POHISTORY_TOTALS();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SERIAL_NO = row.GetInt("SERIAL_NO");
                datoTabla.WITHDR_QTY = row.GetDecimal("WITHDR_QTY");
                datoTabla.BLOCKED_QY = row.GetDecimal("BLOCKED_QY");
                datoTabla.BL_QTY = row.GetDecimal("BL_QTY");
                datoTabla.DELIV_QTY = row.GetDecimal("DELIV_QTY");
                datoTabla.PO_PR_QNT = row.GetDecimal("PO_PR_QNT");
                datoTabla.VAL_GR_LOC = row.GetDecimal("VAL_GR_LOC");
                datoTabla.VAL_GR_FOR = row.GetDecimal("VAL_GR_FOR");
                datoTabla.IV_QTY = row.GetDecimal("IV_QTY");
                datoTabla.IV_QTY_PO = row.GetDecimal("IV_QTY_PO");
                datoTabla.VAL_IV_LOC = row.GetDecimal("VAL_IV_LOC");
                datoTabla.VAL_IV_FOR = row.GetDecimal("VAL_IV_FOR");
                datoTabla.CL_VAL_LOC = row.GetDecimal("CL_VAL_LOC");
                datoTabla.CL_VAL_FOR = row.GetDecimal("CL_VAL_FOR");
                datoTabla.DOP_VL_LOC = row.GetDecimal("DOP_VL_LOC");
                datoTabla.IVVAL_LOC = row.GetDecimal("IVVAL_LOC");
                datoTabla.IVVAL_FOR = row.GetDecimal("IVVAL_FOR");
                datoTabla.DL_QTY_TRSP = row.GetDecimal("DL_QTY_TRSP");
                datoTabla.BL_QTY_TOTAL = row.GetDecimal("BL_QTY_TOTAL");
                datoTabla.DL_QTY_TOTAL = row.GetDecimal("DL_QTY_TOTAL");
                datoTabla.IV_QTY_TOTAL = row.GetDecimal("IV_QTY_TOTAL");
                datoTabla.CURRENCY = row.GetString("CURRENCY");
                datoTabla.CURRENCY_ISO = row.GetString("CURRENCY_ISO");
                res.POHISTORY_TOTALS[i_POHISTORY_TOTALS] = datoTabla; ++i_POHISTORY_TOTALS;
            }
            IRfcTable rfcTable_POITEM = rfcFunction.GetTable("POITEM");
            res.POITEM = new BAPI_PO_CHANGE_POITEM[rfcTable_POITEM.RowCount];
            int i_POITEM = 0;
            foreach (IRfcStructure row in rfcTable_POITEM)
            {
                BAPI_PO_CHANGE_POITEM datoTabla = new BAPI_PO_CHANGE_POITEM();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                datoTabla.SHORT_TEXT = row.GetString("SHORT_TEXT");
                datoTabla.MATERIAL = row.GetString("MATERIAL");
                datoTabla.MATERIAL_EXTERNAL = row.GetString("MATERIAL_EXTERNAL");
                datoTabla.MATERIAL_GUID = row.GetString("MATERIAL_GUID");
                datoTabla.MATERIAL_VERSION = row.GetString("MATERIAL_VERSION");
                datoTabla.EMATERIAL = row.GetString("EMATERIAL");
                datoTabla.EMATERIAL_EXTERNAL = row.GetString("EMATERIAL_EXTERNAL");
                datoTabla.EMATERIAL_GUID = row.GetString("EMATERIAL_GUID");
                datoTabla.EMATERIAL_VERSION = row.GetString("EMATERIAL_VERSION");
                datoTabla.PLANT = row.GetString("PLANT");
                datoTabla.STGE_LOC = row.GetString("STGE_LOC");
                datoTabla.TRACKINGNO = row.GetString("TRACKINGNO");
                datoTabla.MATL_GROUP = row.GetString("MATL_GROUP");
                datoTabla.INFO_REC = row.GetString("INFO_REC");
                datoTabla.VEND_MAT = row.GetString("VEND_MAT");
                datoTabla.QUANTITY = row.GetDecimal("QUANTITY");
                datoTabla.PO_UNIT = row.GetString("PO_UNIT");
                datoTabla.PO_UNIT_ISO = row.GetString("PO_UNIT_ISO");
                datoTabla.ORDERPR_UN = row.GetString("ORDERPR_UN");
                datoTabla.ORDERPR_UN_ISO = row.GetString("ORDERPR_UN_ISO");
                datoTabla.CONV_NUM1 = row.GetDecimal("CONV_NUM1");
                datoTabla.CONV_DEN1 = row.GetDecimal("CONV_DEN1");
                datoTabla.NET_PRICE = row.GetDecimal("NET_PRICE");
                datoTabla.PRICE_UNIT = row.GetDecimal("PRICE_UNIT");
                datoTabla.GR_PR_TIME = row.GetDecimal("GR_PR_TIME");
                datoTabla.TAX_CODE = row.GetString("TAX_CODE");
                datoTabla.BON_GRP1 = row.GetString("BON_GRP1");
                datoTabla.QUAL_INSP = row.GetString("QUAL_INSP");
                datoTabla.INFO_UPD = row.GetString("INFO_UPD");
                datoTabla.PRNT_PRICE = row.GetString("PRNT_PRICE");
                datoTabla.EST_PRICE = row.GetString("EST_PRICE");
                datoTabla.REMINDER1 = row.GetDecimal("REMINDER1");
                datoTabla.REMINDER2 = row.GetDecimal("REMINDER2");
                datoTabla.REMINDER3 = row.GetDecimal("REMINDER3");
                datoTabla.OVER_DLV_TOL = row.GetDecimal("OVER_DLV_TOL");
                datoTabla.UNLIMITED_DLV = row.GetString("UNLIMITED_DLV");
                datoTabla.UNDER_DLV_TOL = row.GetDecimal("UNDER_DLV_TOL");
                datoTabla.VAL_TYPE = row.GetString("VAL_TYPE");
                datoTabla.NO_MORE_GR = row.GetString("NO_MORE_GR");
                datoTabla.FINAL_INV = row.GetString("FINAL_INV");
                datoTabla.ITEM_CAT = row.GetString("ITEM_CAT");
                datoTabla.ACCTASSCAT = row.GetString("ACCTASSCAT");
                datoTabla.DISTRIB = row.GetString("DISTRIB");
                datoTabla.PART_INV = row.GetString("PART_INV");
                datoTabla.GR_IND = row.GetString("GR_IND");
                datoTabla.GR_NON_VAL = row.GetString("GR_NON_VAL");
                datoTabla.IR_IND = row.GetString("IR_IND");
                datoTabla.FREE_ITEM = row.GetString("FREE_ITEM");
                datoTabla.GR_BASEDIV = row.GetString("GR_BASEDIV");
                datoTabla.ACKN_REQD = row.GetString("ACKN_REQD");
                datoTabla.ACKNOWL_NO = row.GetString("ACKNOWL_NO");
                datoTabla.AGREEMENT = row.GetString("AGREEMENT");
                datoTabla.AGMT_ITEM = row.GetInt("AGMT_ITEM");
                datoTabla.SHIPPING = row.GetString("SHIPPING");
                datoTabla.CUSTOMER = row.GetString("CUSTOMER");
                datoTabla.COND_GROUP = row.GetString("COND_GROUP");
                datoTabla.NO_DISCT = row.GetString("NO_DISCT");
                datoTabla.PLAN_DEL = row.GetDecimal("PLAN_DEL");
                datoTabla.NET_WEIGHT = row.GetDecimal("NET_WEIGHT");
                datoTabla.WEIGHTUNIT = row.GetString("WEIGHTUNIT");
                datoTabla.WEIGHTUNIT_ISO = row.GetString("WEIGHTUNIT_ISO");
                datoTabla.TAXJURCODE = row.GetString("TAXJURCODE");
                datoTabla.CTRL_KEY = row.GetString("CTRL_KEY");
                datoTabla.CONF_CTRL = row.GetString("CONF_CTRL");
                datoTabla.REV_LEV = row.GetString("REV_LEV");
                datoTabla.FUND = row.GetString("FUND");
                datoTabla.FUNDS_CTR = row.GetString("FUNDS_CTR");
                datoTabla.CMMT_ITEM = row.GetString("CMMT_ITEM");
                datoTabla.PRICEDATE = row.GetString("PRICEDATE");
                datoTabla.PRICE_DATE = row.GetString("PRICE_DATE");
                datoTabla.GROSS_WT = row.GetDecimal("GROSS_WT");
                datoTabla.VOLUME = row.GetDecimal("VOLUME");
                datoTabla.VOLUMEUNIT = row.GetString("VOLUMEUNIT");
                datoTabla.VOLUMEUNIT_ISO = row.GetString("VOLUMEUNIT_ISO");
                datoTabla.INCOTERMS1 = row.GetString("INCOTERMS1");
                datoTabla.INCOTERMS2 = row.GetString("INCOTERMS2");
                datoTabla.PRE_VENDOR = row.GetString("PRE_VENDOR");
                datoTabla.VEND_PART = row.GetString("VEND_PART");
                datoTabla.HL_ITEM = row.GetInt("HL_ITEM");
                datoTabla.GR_TO_DATE = row.GetString("GR_TO_DATE");
                datoTabla.SUPP_VENDOR = row.GetString("SUPP_VENDOR");
                datoTabla.SC_VENDOR = row.GetString("SC_VENDOR");
                datoTabla.KANBAN_IND = row.GetString("KANBAN_IND");
                datoTabla.ERS = row.GetString("ERS");
                datoTabla.R_PROMO = row.GetString("R_PROMO");
                datoTabla.POINTS = row.GetDecimal("POINTS");
                datoTabla.POINT_UNIT = row.GetString("POINT_UNIT");
                datoTabla.POINT_UNIT_ISO = row.GetString("POINT_UNIT_ISO");
                datoTabla.SEASON = row.GetString("SEASON");
                datoTabla.SEASON_YR = row.GetString("SEASON_YR");
                datoTabla.BON_GRP2 = row.GetString("BON_GRP2");
                datoTabla.BON_GRP3 = row.GetString("BON_GRP3");
                datoTabla.SETT_ITEM = row.GetString("SETT_ITEM");
                datoTabla.MINREMLIFE = row.GetDecimal("MINREMLIFE");
                datoTabla.RFQ_NO = row.GetString("RFQ_NO");
                datoTabla.RFQ_ITEM = row.GetInt("RFQ_ITEM");
                datoTabla.PREQ_NO = row.GetString("PREQ_NO");
                datoTabla.PREQ_ITEM = row.GetInt("PREQ_ITEM");
                datoTabla.REF_DOC = row.GetString("REF_DOC");
                datoTabla.REF_ITEM = row.GetInt("REF_ITEM");
                datoTabla.SI_CAT = row.GetString("SI_CAT");
                datoTabla.RET_ITEM = row.GetString("RET_ITEM");
                datoTabla.AT_RELEV = row.GetString("AT_RELEV");
                datoTabla.ORDER_REASON = row.GetString("ORDER_REASON");
                datoTabla.BRAS_NBM = row.GetString("BRAS_NBM");
                datoTabla.MATL_USAGE = row.GetString("MATL_USAGE");
                datoTabla.MAT_ORIGIN = row.GetString("MAT_ORIGIN");
                datoTabla.IN_HOUSE = row.GetString("IN_HOUSE");
                datoTabla.INDUS3 = row.GetString("INDUS3");
                datoTabla.INF_INDEX = row.GetString("INF_INDEX");
                datoTabla.UNTIL_DATE = row.GetString("UNTIL_DATE");
                datoTabla.DELIV_COMPL = row.GetString("DELIV_COMPL");
                datoTabla.PART_DELIV = row.GetString("PART_DELIV");
                datoTabla.SHIP_BLOCKED = row.GetString("SHIP_BLOCKED");
                datoTabla.PREQ_NAME = row.GetString("PREQ_NAME");
                datoTabla.PERIOD_IND_EXPIRATION_DATE = row.GetString("PERIOD_IND_EXPIRATION_DATE");
                datoTabla.INT_OBJ_NO = row.GetInt("INT_OBJ_NO");
                datoTabla.PCKG_NO = row.GetInt("PCKG_NO");
                datoTabla.BATCH = row.GetString("BATCH");
                datoTabla.VENDRBATCH = row.GetString("VENDRBATCH");
                datoTabla.CALCTYPE = row.GetString("CALCTYPE");
                datoTabla.GRANT_NBR = row.GetString("GRANT_NBR");
                datoTabla.CMMT_ITEM_LONG = row.GetString("CMMT_ITEM_LONG");
                datoTabla.FUNC_AREA_LONG = row.GetString("FUNC_AREA_LONG");
                datoTabla.NO_ROUNDING = row.GetString("NO_ROUNDING");
                datoTabla.PO_PRICE = row.GetString("PO_PRICE");
                datoTabla.SUPPL_STLOC = row.GetString("SUPPL_STLOC");
                datoTabla.SRV_BASED_IV = row.GetString("SRV_BASED_IV");
                datoTabla.FUNDS_RES = row.GetString("FUNDS_RES");
                datoTabla.RES_ITEM = row.GetInt("RES_ITEM");
                datoTabla.ORIG_ACCEPT = row.GetString("ORIG_ACCEPT");
                datoTabla.ALLOC_TBL = row.GetString("ALLOC_TBL");
                datoTabla.ALLOC_TBL_ITEM = row.GetInt("ALLOC_TBL_ITEM");
                datoTabla.SRC_STOCK_TYPE = row.GetString("SRC_STOCK_TYPE");
                datoTabla.REASON_REJ = row.GetString("REASON_REJ");
                datoTabla.CRM_SALES_ORDER_NO = row.GetString("CRM_SALES_ORDER_NO");
                datoTabla.CRM_SALES_ORDER_ITEM_NO = row.GetInt("CRM_SALES_ORDER_ITEM_NO");
                datoTabla.CRM_REF_SALES_ORDER_NO = row.GetString("CRM_REF_SALES_ORDER_NO");
                datoTabla.CRM_REF_SO_ITEM_NO = row.GetString("CRM_REF_SO_ITEM_NO");
                datoTabla.PRIO_URGENCY = row.GetInt("PRIO_URGENCY");
                datoTabla.PRIO_REQUIREMENT = row.GetInt("PRIO_REQUIREMENT");
                datoTabla.REASON_CODE = row.GetString("REASON_CODE");
                datoTabla.FUND_LONG = row.GetString("FUND_LONG");
                datoTabla.LONG_ITEM_NUMBER = row.GetString("LONG_ITEM_NUMBER");
                datoTabla.EXTERNAL_SORT_NUMBER = row.GetInt("EXTERNAL_SORT_NUMBER");
                datoTabla.EXTERNAL_HIERARCHY_TYPE = row.GetString("EXTERNAL_HIERARCHY_TYPE");
                datoTabla.RETENTION_PERCENTAGE = row.GetDecimal("RETENTION_PERCENTAGE");
                datoTabla.DOWNPAY_TYPE = row.GetString("DOWNPAY_TYPE");
                datoTabla.DOWNPAY_AMOUNT = row.GetDecimal("DOWNPAY_AMOUNT");
                datoTabla.DOWNPAY_PERCENT = row.GetDecimal("DOWNPAY_PERCENT");
                datoTabla.DOWNPAY_DUEDATE = row.GetString("DOWNPAY_DUEDATE");
                datoTabla.EXT_RFX_NUMBER = row.GetString("EXT_RFX_NUMBER");
                datoTabla.EXT_RFX_ITEM = row.GetString("EXT_RFX_ITEM");
                datoTabla.EXT_RFX_SYSTEM = row.GetString("EXT_RFX_SYSTEM");
                datoTabla.SRM_CONTRACT_ID = row.GetString("SRM_CONTRACT_ID");
                datoTabla.SRM_CONTRACT_ITM = row.GetInt("SRM_CONTRACT_ITM");
                datoTabla.BUDGET_PERIOD = row.GetString("BUDGET_PERIOD");
                datoTabla.BLOCK_REASON_ID = row.GetString("BLOCK_REASON_ID");
                datoTabla.BLOCK_REASON_TEXT = row.GetString("BLOCK_REASON_TEXT");
                datoTabla.SPE_CRM_FKREL = row.GetString("SPE_CRM_FKREL");
                datoTabla.DATE_QTY_FIXED = row.GetString("DATE_QTY_FIXED");
                datoTabla.GI_BASED_GR = row.GetString("GI_BASED_GR");
                datoTabla.SHIPTYPE = row.GetString("SHIPTYPE");
                datoTabla.HANDOVERLOC = row.GetString("HANDOVERLOC");
                datoTabla.TC_AUT_DET = row.GetString("TC_AUT_DET");
                datoTabla.MANUAL_TC_REASON = row.GetString("MANUAL_TC_REASON");
                datoTabla.FISCAL_INCENTIVE = row.GetString("FISCAL_INCENTIVE");
                datoTabla.FISCAL_INCENTIVE_ID = row.GetString("FISCAL_INCENTIVE_ID");
                datoTabla.TAX_SUBJECT_ST = row.GetString("TAX_SUBJECT_ST");
                datoTabla.REQ_SEGMENT = row.GetString("REQ_SEGMENT");
                datoTabla.STK_SEGMENT = row.GetString("STK_SEGMENT");
                //datoTabla.SF_TXJCD = row.GetString("SF_TXJCD");
                datoTabla.INCOTERMS2L = row.GetString("INCOTERMS2L");
                datoTabla.INCOTERMS3L = row.GetString("INCOTERMS3L");
                /*datoTabla.MATERIAL_LONG = row.GetString("MATERIAL_LONG");
                datoTabla.EMATERIAL_LONG = row.GetString("EMATERIAL_LONG");
                datoTabla.SERVICEPERFORMER = row.GetString("SERVICEPERFORMER");
                datoTabla.PRODUCTTYPE = row.GetString("PRODUCTTYPE");
                datoTabla.STARTDATE = row.GetString("STARTDATE");
                datoTabla.ENDDATE = row.GetString("ENDDATE");*/
                res.POITEM[i_POITEM] = datoTabla; ++i_POITEM;
            }
            IRfcTable rfcTable_POITEMX = rfcFunction.GetTable("POITEMX");
            res.POITEMX = new BAPI_PO_CHANGE_POITEMX[rfcTable_POITEMX.RowCount];
            int i_POITEMX = 0;
            foreach (IRfcStructure row in rfcTable_POITEMX)
            {
                BAPI_PO_CHANGE_POITEMX datoTabla = new BAPI_PO_CHANGE_POITEMX();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.PO_ITEMX = row.GetString("PO_ITEMX");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                datoTabla.SHORT_TEXT = row.GetString("SHORT_TEXT");
                datoTabla.MATERIAL = row.GetString("MATERIAL");
                datoTabla.MATERIAL_EXTERNAL = row.GetString("MATERIAL_EXTERNAL");
                datoTabla.MATERIAL_GUID = row.GetString("MATERIAL_GUID");
                datoTabla.MATERIAL_VERSION = row.GetString("MATERIAL_VERSION");
                datoTabla.EMATERIAL = row.GetString("EMATERIAL");
                datoTabla.EMATERIAL_EXTERNAL = row.GetString("EMATERIAL_EXTERNAL");
                datoTabla.EMATERIAL_GUID = row.GetString("EMATERIAL_GUID");
                datoTabla.EMATERIAL_VERSION = row.GetString("EMATERIAL_VERSION");
                datoTabla.PLANT = row.GetString("PLANT");
                datoTabla.STGE_LOC = row.GetString("STGE_LOC");
                datoTabla.TRACKINGNO = row.GetString("TRACKINGNO");
                datoTabla.MATL_GROUP = row.GetString("MATL_GROUP");
                datoTabla.INFO_REC = row.GetString("INFO_REC");
                datoTabla.VEND_MAT = row.GetString("VEND_MAT");
                datoTabla.QUANTITY = row.GetString("QUANTITY");
                datoTabla.PO_UNIT = row.GetString("PO_UNIT");
                datoTabla.PO_UNIT_ISO = row.GetString("PO_UNIT_ISO");
                datoTabla.ORDERPR_UN = row.GetString("ORDERPR_UN");
                datoTabla.ORDERPR_UN_ISO = row.GetString("ORDERPR_UN_ISO");
                datoTabla.CONV_NUM1 = row.GetString("CONV_NUM1");
                datoTabla.CONV_DEN1 = row.GetString("CONV_DEN1");
                datoTabla.NET_PRICE = row.GetString("NET_PRICE");
                datoTabla.PRICE_UNIT = row.GetString("PRICE_UNIT");
                datoTabla.GR_PR_TIME = row.GetString("GR_PR_TIME");
                datoTabla.TAX_CODE = row.GetString("TAX_CODE");
                datoTabla.BON_GRP1 = row.GetString("BON_GRP1");
                datoTabla.QUAL_INSP = row.GetString("QUAL_INSP");
                datoTabla.INFO_UPD = row.GetString("INFO_UPD");
                datoTabla.PRNT_PRICE = row.GetString("PRNT_PRICE");
                datoTabla.EST_PRICE = row.GetString("EST_PRICE");
                datoTabla.REMINDER1 = row.GetString("REMINDER1");
                datoTabla.REMINDER2 = row.GetString("REMINDER2");
                datoTabla.REMINDER3 = row.GetString("REMINDER3");
                datoTabla.OVER_DLV_TOL = row.GetString("OVER_DLV_TOL");
                datoTabla.UNLIMITED_DLV = row.GetString("UNLIMITED_DLV");
                datoTabla.UNDER_DLV_TOL = row.GetString("UNDER_DLV_TOL");
                datoTabla.VAL_TYPE = row.GetString("VAL_TYPE");
                datoTabla.NO_MORE_GR = row.GetString("NO_MORE_GR");
                datoTabla.FINAL_INV = row.GetString("FINAL_INV");
                datoTabla.ITEM_CAT = row.GetString("ITEM_CAT");
                datoTabla.ACCTASSCAT = row.GetString("ACCTASSCAT");
                datoTabla.DISTRIB = row.GetString("DISTRIB");
                datoTabla.PART_INV = row.GetString("PART_INV");
                datoTabla.GR_IND = row.GetString("GR_IND");
                datoTabla.GR_NON_VAL = row.GetString("GR_NON_VAL");
                datoTabla.IR_IND = row.GetString("IR_IND");
                datoTabla.FREE_ITEM = row.GetString("FREE_ITEM");
                datoTabla.GR_BASEDIV = row.GetString("GR_BASEDIV");
                datoTabla.ACKN_REQD = row.GetString("ACKN_REQD");
                datoTabla.ACKNOWL_NO = row.GetString("ACKNOWL_NO");
                datoTabla.AGREEMENT = row.GetString("AGREEMENT");
                datoTabla.AGMT_ITEM = row.GetString("AGMT_ITEM");
                datoTabla.SHIPPING = row.GetString("SHIPPING");
                datoTabla.CUSTOMER = row.GetString("CUSTOMER");
                datoTabla.COND_GROUP = row.GetString("COND_GROUP");
                datoTabla.NO_DISCT = row.GetString("NO_DISCT");
                datoTabla.PLAN_DEL = row.GetString("PLAN_DEL");
                datoTabla.NET_WEIGHT = row.GetString("NET_WEIGHT");
                datoTabla.WEIGHTUNIT = row.GetString("WEIGHTUNIT");
                datoTabla.WEIGHTUNIT_ISO = row.GetString("WEIGHTUNIT_ISO");
                datoTabla.TAXJURCODE = row.GetString("TAXJURCODE");
                datoTabla.CTRL_KEY = row.GetString("CTRL_KEY");
                datoTabla.CONF_CTRL = row.GetString("CONF_CTRL");
                datoTabla.REV_LEV = row.GetString("REV_LEV");
                datoTabla.FUND = row.GetString("FUND");
                datoTabla.FUNDS_CTR = row.GetString("FUNDS_CTR");
                datoTabla.CMMT_ITEM = row.GetString("CMMT_ITEM");
                datoTabla.PRICEDATE = row.GetString("PRICEDATE");
                datoTabla.PRICE_DATE = row.GetString("PRICE_DATE");
                datoTabla.GROSS_WT = row.GetString("GROSS_WT");
                datoTabla.VOLUME = row.GetString("VOLUME");
                datoTabla.VOLUMEUNIT = row.GetString("VOLUMEUNIT");
                datoTabla.VOLUMEUNIT_ISO = row.GetString("VOLUMEUNIT_ISO");
                datoTabla.INCOTERMS1 = row.GetString("INCOTERMS1");
                datoTabla.INCOTERMS2 = row.GetString("INCOTERMS2");
                datoTabla.PRE_VENDOR = row.GetString("PRE_VENDOR");
                datoTabla.VEND_PART = row.GetString("VEND_PART");
                datoTabla.HL_ITEM = row.GetString("HL_ITEM");
                datoTabla.GR_TO_DATE = row.GetString("GR_TO_DATE");
                datoTabla.SUPP_VENDOR = row.GetString("SUPP_VENDOR");
                datoTabla.SC_VENDOR = row.GetString("SC_VENDOR");
                datoTabla.KANBAN_IND = row.GetString("KANBAN_IND");
                datoTabla.ERS = row.GetString("ERS");
                datoTabla.R_PROMO = row.GetString("R_PROMO");
                datoTabla.POINTS = row.GetString("POINTS");
                datoTabla.POINT_UNIT = row.GetString("POINT_UNIT");
                datoTabla.POINT_UNIT_ISO = row.GetString("POINT_UNIT_ISO");
                datoTabla.SEASON = row.GetString("SEASON");
                datoTabla.SEASON_YR = row.GetString("SEASON_YR");
                datoTabla.BON_GRP2 = row.GetString("BON_GRP2");
                datoTabla.BON_GRP3 = row.GetString("BON_GRP3");
                datoTabla.SETT_ITEM = row.GetString("SETT_ITEM");
                datoTabla.MINREMLIFE = row.GetString("MINREMLIFE");
                datoTabla.RFQ_NO = row.GetString("RFQ_NO");
                datoTabla.RFQ_ITEM = row.GetString("RFQ_ITEM");
                datoTabla.PREQ_NO = row.GetString("PREQ_NO");
                datoTabla.PREQ_ITEM = row.GetString("PREQ_ITEM");
                datoTabla.REF_DOC = row.GetString("REF_DOC");
                datoTabla.REF_ITEM = row.GetString("REF_ITEM");
                datoTabla.SI_CAT = row.GetString("SI_CAT");
                datoTabla.RET_ITEM = row.GetString("RET_ITEM");
                datoTabla.AT_RELEV = row.GetString("AT_RELEV");
                datoTabla.ORDER_REASON = row.GetString("ORDER_REASON");
                datoTabla.BRAS_NBM = row.GetString("BRAS_NBM");
                datoTabla.MATL_USAGE = row.GetString("MATL_USAGE");
                datoTabla.MAT_ORIGIN = row.GetString("MAT_ORIGIN");
                datoTabla.IN_HOUSE = row.GetString("IN_HOUSE");
                datoTabla.INDUS3 = row.GetString("INDUS3");
                datoTabla.INF_INDEX = row.GetString("INF_INDEX");
                datoTabla.UNTIL_DATE = row.GetString("UNTIL_DATE");
                datoTabla.DELIV_COMPL = row.GetString("DELIV_COMPL");
                datoTabla.PART_DELIV = row.GetString("PART_DELIV");
                datoTabla.SHIP_BLOCKED = row.GetString("SHIP_BLOCKED");
                datoTabla.PREQ_NAME = row.GetString("PREQ_NAME");
                datoTabla.PERIOD_IND_EXPIRATION_DATE = row.GetString("PERIOD_IND_EXPIRATION_DATE");
                datoTabla.INT_OBJ_NO = row.GetString("INT_OBJ_NO");
                datoTabla.PCKG_NO = row.GetString("PCKG_NO");
                datoTabla.BATCH = row.GetString("BATCH");
                datoTabla.VENDRBATCH = row.GetString("VENDRBATCH");
                datoTabla.CALCTYPE = row.GetString("CALCTYPE");
                datoTabla.NO_ROUNDING = row.GetString("NO_ROUNDING");
                datoTabla.PO_PRICE = row.GetString("PO_PRICE");
                datoTabla.SUPPL_STLOC = row.GetString("SUPPL_STLOC");
                datoTabla.SRV_BASED_IV = row.GetString("SRV_BASED_IV");
                datoTabla.FUNDS_RES = row.GetString("FUNDS_RES");
                datoTabla.RES_ITEM = row.GetString("RES_ITEM");
                datoTabla.GRANT_NBR = row.GetString("GRANT_NBR");
                datoTabla.FUNC_AREA_LONG = row.GetString("FUNC_AREA_LONG");
                datoTabla.ORIG_ACCEPT = row.GetString("ORIG_ACCEPT");
                datoTabla.ALLOC_TBL = row.GetString("ALLOC_TBL");
                datoTabla.ALLOC_TBL_ITEM = row.GetString("ALLOC_TBL_ITEM");
                datoTabla.SRC_STOCK_TYPE = row.GetString("SRC_STOCK_TYPE");
                datoTabla.REASON_REJ = row.GetString("REASON_REJ");
                datoTabla.CRM_SALES_ORDER_NO = row.GetString("CRM_SALES_ORDER_NO");
                datoTabla.CRM_SALES_ORDER_ITEM_NO = row.GetString("CRM_SALES_ORDER_ITEM_NO");
                datoTabla.CRM_REF_SALES_ORDER_NO = row.GetString("CRM_REF_SALES_ORDER_NO");
                datoTabla.CRM_REF_SO_ITEM_NO = row.GetString("CRM_REF_SO_ITEM_NO");
                datoTabla.PRIO_URGENCY = row.GetString("PRIO_URGENCY");
                datoTabla.PRIO_REQUIREMENT = row.GetString("PRIO_REQUIREMENT");
                datoTabla.REASON_CODE = row.GetString("REASON_CODE");
                datoTabla.LONG_ITEM_NUMBER = row.GetString("LONG_ITEM_NUMBER");
                datoTabla.EXTERNAL_SORT_NUMBER = row.GetString("EXTERNAL_SORT_NUMBER");
                datoTabla.EXTERNAL_HIERARCHY_TYPE = row.GetString("EXTERNAL_HIERARCHY_TYPE");
                datoTabla.RETENTION_PERCENTAGE = row.GetString("RETENTION_PERCENTAGE");
                datoTabla.DOWNPAY_TYPE = row.GetString("DOWNPAY_TYPE");
                datoTabla.DOWNPAY_AMOUNT = row.GetString("DOWNPAY_AMOUNT");
                datoTabla.DOWNPAY_PERCENT = row.GetString("DOWNPAY_PERCENT");
                datoTabla.DOWNPAY_DUEDATE = row.GetString("DOWNPAY_DUEDATE");
                datoTabla.EXT_RFX_NUMBER = row.GetString("EXT_RFX_NUMBER");
                datoTabla.EXT_RFX_ITEM = row.GetString("EXT_RFX_ITEM");
                datoTabla.EXT_RFX_SYSTEM = row.GetString("EXT_RFX_SYSTEM");
                datoTabla.SRM_CONTRACT_ID = row.GetString("SRM_CONTRACT_ID");
                datoTabla.SRM_CONTRACT_ITM = row.GetString("SRM_CONTRACT_ITM");
                datoTabla.BUDGET_PERIOD = row.GetString("BUDGET_PERIOD");
                datoTabla.BLOCK_REASON_ID = row.GetString("BLOCK_REASON_ID");
                datoTabla.BLOCK_REASON_TEXT = row.GetString("BLOCK_REASON_TEXT");
                datoTabla.SPE_CRM_FKREL = row.GetString("SPE_CRM_FKREL");
                datoTabla.DATE_QTY_FIXED = row.GetString("DATE_QTY_FIXED");
                datoTabla.GI_BASED_GR = row.GetString("GI_BASED_GR");
                datoTabla.SHIPTYPE = row.GetString("SHIPTYPE");
                datoTabla.HANDOVERLOC = row.GetString("HANDOVERLOC");
                datoTabla.TC_AUT_DET = row.GetString("TC_AUT_DET");
                datoTabla.MANUAL_TC_REASON = row.GetString("MANUAL_TC_REASON");
                datoTabla.FISCAL_INCENTIVE = row.GetString("FISCAL_INCENTIVE");
                datoTabla.FISCAL_INCENTIVE_ID = row.GetString("FISCAL_INCENTIVE_ID");
                datoTabla.TAX_SUBJECT_ST = row.GetString("TAX_SUBJECT_ST");
                datoTabla.REQ_SEGMENT = row.GetString("REQ_SEGMENT");
                datoTabla.STK_SEGMENT = row.GetString("STK_SEGMENT");
                //datoTabla.SF_TXJCD = row.GetString("SF_TXJCD");
                datoTabla.INCOTERMS2L = row.GetString("INCOTERMS2L");
                datoTabla.INCOTERMS3L = row.GetString("INCOTERMS3L");
                /*datoTabla.MATERIAL_LONG = row.GetString("MATERIAL_LONG");
                datoTabla.EMATERIAL_LONG = row.GetString("EMATERIAL_LONG");
                datoTabla.SERVICEPERFORMER = row.GetString("SERVICEPERFORMER");
                datoTabla.PRODUCTTYPE = row.GetString("PRODUCTTYPE");
                datoTabla.STARTDATE = row.GetString("STARTDATE");
                datoTabla.ENDDATE = row.GetString("ENDDATE");*/
                res.POITEMX[i_POITEMX] = datoTabla; ++i_POITEMX;
            }
            IRfcTable rfcTable_POLIMITS = rfcFunction.GetTable("POLIMITS");
            res.POLIMITS = new BAPI_PO_CHANGE_POLIMITS[rfcTable_POLIMITS.RowCount];
            int i_POLIMITS = 0;
            foreach (IRfcStructure row in rfcTable_POLIMITS)
            {
                BAPI_PO_CHANGE_POLIMITS datoTabla = new BAPI_PO_CHANGE_POLIMITS();
                datoTabla.PCKG_NO = row.GetInt("PCKG_NO");
                datoTabla.LIMIT = row.GetDecimal("LIMIT");
                datoTabla.NO_LIMIT = row.GetString("NO_LIMIT");
                datoTabla.EXP_VALUE = row.GetDecimal("EXP_VALUE");
                datoTabla.SSC_EXIST = row.GetString("SSC_EXIST");
                datoTabla.CON_EXIST = row.GetString("CON_EXIST");
                datoTabla.TMP_EXIST = row.GetString("TMP_EXIST");
                datoTabla.PRICE_CHG = row.GetString("PRICE_CHG");
                datoTabla.FREE_LIMIT = row.GetDecimal("FREE_LIMIT");
                datoTabla.NO_FRLIMIT = row.GetString("NO_FRLIMIT");
                datoTabla.SERV_TYPE = row.GetString("SERV_TYPE");
                datoTabla.EDITION = row.GetInt("EDITION");
                datoTabla.SSC_LIMIT = row.GetDecimal("SSC_LIMIT");
                datoTabla.SSC_NOLIM = row.GetString("SSC_NOLIM");
                datoTabla.SSC_PRSCHG = row.GetString("SSC_PRSCHG");
                datoTabla.SSC_PERC = row.GetDecimal("SSC_PERC");
                datoTabla.TMP_NUMBER = row.GetString("TMP_NUMBER");
                datoTabla.TMP_LIMIT = row.GetDecimal("TMP_LIMIT");
                datoTabla.TMP_NOLIM = row.GetString("TMP_NOLIM");
                datoTabla.TMP_PRSCHG = row.GetString("TMP_PRSCHG");
                datoTabla.TMP_PERC = row.GetDecimal("TMP_PERC");
                datoTabla.CONT_PERC = row.GetDecimal("CONT_PERC");
                res.POLIMITS[i_POLIMITS] = datoTabla; ++i_POLIMITS;
            }
            IRfcTable rfcTable_POPARTNER = rfcFunction.GetTable("POPARTNER");
            res.POPARTNER = new BAPI_PO_CHANGE_POPARTNER[rfcTable_POPARTNER.RowCount];
            int i_POPARTNER = 0;
            foreach (IRfcStructure row in rfcTable_POPARTNER)
            {
                BAPI_PO_CHANGE_POPARTNER datoTabla = new BAPI_PO_CHANGE_POPARTNER();
                datoTabla.PARTNERDESC = row.GetString("PARTNERDESC");
                datoTabla.LANGU = row.GetString("LANGU");
                datoTabla.BUSPARTNO = row.GetString("BUSPARTNO");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                res.POPARTNER[i_POPARTNER] = datoTabla; ++i_POPARTNER;
            }
            IRfcTable rfcTable_POSCHEDULE = rfcFunction.GetTable("POSCHEDULE");
            res.POSCHEDULE = new BAPI_PO_CHANGE_POSCHEDULE[rfcTable_POSCHEDULE.RowCount];
            int i_POSCHEDULE = 0;
            foreach (IRfcStructure row in rfcTable_POSCHEDULE)
            {
                BAPI_PO_CHANGE_POSCHEDULE datoTabla = new BAPI_PO_CHANGE_POSCHEDULE();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SCHED_LINE = row.GetInt("SCHED_LINE");
                datoTabla.DEL_DATCAT_EXT = row.GetString("DEL_DATCAT_EXT");
                datoTabla.DELIVERY_DATE = row.GetString("DELIVERY_DATE");
                datoTabla.QUANTITY = row.GetDecimal("QUANTITY");
                datoTabla.DELIV_TIME = row.GetString("DELIV_TIME");
                datoTabla.STAT_DATE = row.GetString("STAT_DATE");
                datoTabla.PREQ_NO = row.GetString("PREQ_NO");
                datoTabla.PREQ_ITEM = row.GetInt("PREQ_ITEM");
                datoTabla.PO_DATE = row.GetString("PO_DATE");
                datoTabla.ROUTESCHED = row.GetString("ROUTESCHED");
                datoTabla.MS_DATE = row.GetString("MS_DATE");
                datoTabla.MS_TIME = row.GetString("MS_TIME");
                datoTabla.LOAD_DATE = row.GetString("LOAD_DATE");
                datoTabla.LOAD_TIME = row.GetString("LOAD_TIME");
                datoTabla.TP_DATE = row.GetString("TP_DATE");
                datoTabla.TP_TIME = row.GetString("TP_TIME");
                datoTabla.GI_DATE = row.GetString("GI_DATE");
                datoTabla.GI_TIME = row.GetString("GI_TIME");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                datoTabla.REQ_CLOSED = row.GetString("REQ_CLOSED");
                datoTabla.GR_END_DATE = row.GetString("GR_END_DATE");
                datoTabla.GR_END_TIME = row.GetString("GR_END_TIME");
                datoTabla.COM_QTY = row.GetDecimal("COM_QTY");
                datoTabla.COM_DATE = row.GetString("COM_DATE");
                datoTabla.GEO_ROUTE = row.GetString("GEO_ROUTE");
                datoTabla.HANDOVERDATE = row.GetString("HANDOVERDATE");
                datoTabla.HANDOVERTIME = row.GetString("HANDOVERTIME");
                res.POSCHEDULE[i_POSCHEDULE] = datoTabla; ++i_POSCHEDULE;
            }
            IRfcTable rfcTable_POSCHEDULEX = rfcFunction.GetTable("POSCHEDULEX");
            res.POSCHEDULEX = new BAPI_PO_CHANGE_POSCHEDULEX[rfcTable_POSCHEDULEX.RowCount];
            int i_POSCHEDULEX = 0;
            foreach (IRfcStructure row in rfcTable_POSCHEDULEX)
            {
                BAPI_PO_CHANGE_POSCHEDULEX datoTabla = new BAPI_PO_CHANGE_POSCHEDULEX();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SCHED_LINE = row.GetInt("SCHED_LINE");
                datoTabla.PO_ITEMX = row.GetString("PO_ITEMX");
                datoTabla.SCHED_LINEX = row.GetString("SCHED_LINEX");
                datoTabla.DEL_DATCAT_EXT = row.GetString("DEL_DATCAT_EXT");
                datoTabla.DELIVERY_DATE = row.GetString("DELIVERY_DATE");
                datoTabla.QUANTITY = row.GetString("QUANTITY");
                datoTabla.DELIV_TIME = row.GetString("DELIV_TIME");
                datoTabla.STAT_DATE = row.GetString("STAT_DATE");
                datoTabla.PREQ_NO = row.GetString("PREQ_NO");
                datoTabla.PREQ_ITEM = row.GetString("PREQ_ITEM");
                datoTabla.PO_DATE = row.GetString("PO_DATE");
                datoTabla.ROUTESCHED = row.GetString("ROUTESCHED");
                datoTabla.MS_DATE = row.GetString("MS_DATE");
                datoTabla.MS_TIME = row.GetString("MS_TIME");
                datoTabla.LOAD_DATE = row.GetString("LOAD_DATE");
                datoTabla.LOAD_TIME = row.GetString("LOAD_TIME");
                datoTabla.TP_DATE = row.GetString("TP_DATE");
                datoTabla.TP_TIME = row.GetString("TP_TIME");
                datoTabla.GI_DATE = row.GetString("GI_DATE");
                datoTabla.GI_TIME = row.GetString("GI_TIME");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                datoTabla.REQ_CLOSED = row.GetString("REQ_CLOSED");
                datoTabla.GR_END_DATE = row.GetString("GR_END_DATE");
                datoTabla.GR_END_TIME = row.GetString("GR_END_TIME");
                datoTabla.COM_QTY = row.GetString("COM_QTY");
                datoTabla.COM_DATE = row.GetString("COM_DATE");
                datoTabla.GEO_ROUTE = row.GetString("GEO_ROUTE");
                datoTabla.HANDOVERDATE = row.GetString("HANDOVERDATE");
                datoTabla.HANDOVERTIME = row.GetString("HANDOVERTIME");
                res.POSCHEDULEX[i_POSCHEDULEX] = datoTabla; ++i_POSCHEDULEX;
            }
            IRfcTable rfcTable_POSERVICES = rfcFunction.GetTable("POSERVICES");
            res.POSERVICES = new BAPI_PO_CHANGE_POSERVICES[rfcTable_POSERVICES.RowCount];
            int i_POSERVICES = 0;
            foreach (IRfcStructure row in rfcTable_POSERVICES)
            {
                BAPI_PO_CHANGE_POSERVICES datoTabla = new BAPI_PO_CHANGE_POSERVICES();
                datoTabla.PCKG_NO = row.GetInt("PCKG_NO");
                datoTabla.LINE_NO = row.GetInt("LINE_NO");
                datoTabla.EXT_LINE = row.GetInt("EXT_LINE");
                datoTabla.OUTL_LEVEL = row.GetByte("OUTL_LEVEL");
                datoTabla.OUTL_NO = row.GetString("OUTL_NO");
                datoTabla.OUTL_IND = row.GetString("OUTL_IND");
                datoTabla.SUBPCKG_NO = row.GetInt("SUBPCKG_NO");
                datoTabla.SERVICE = row.GetString("SERVICE");
                datoTabla.SERV_TYPE = row.GetString("SERV_TYPE");
                datoTabla.EDITION = row.GetInt("EDITION");
                datoTabla.SSC_ITEM = row.GetString("SSC_ITEM");
                datoTabla.EXT_SERV = row.GetString("EXT_SERV");
                datoTabla.QUANTITY = row.GetDecimal("QUANTITY");
                datoTabla.BASE_UOM = row.GetString("BASE_UOM");
                datoTabla.UOM_ISO = row.GetString("UOM_ISO");
                datoTabla.OVF_TOL = row.GetDecimal("OVF_TOL");
                datoTabla.OVF_UNLIM = row.GetString("OVF_UNLIM");
                datoTabla.PRICE_UNIT = row.GetDecimal("PRICE_UNIT");
                datoTabla.GR_PRICE = row.GetDecimal("GR_PRICE");
                datoTabla.FROM_LINE = row.GetString("FROM_LINE");
                datoTabla.TO_LINE = row.GetString("TO_LINE");
                datoTabla.SHORT_TEXT = row.GetString("SHORT_TEXT");
                datoTabla.DISTRIB = row.GetString("DISTRIB");
                datoTabla.PERS_NO = row.GetInt("PERS_NO");
                datoTabla.WAGETYPE = row.GetString("WAGETYPE");
                datoTabla.PLN_PCKG = row.GetInt("PLN_PCKG");
                datoTabla.PLN_LINE = row.GetInt("PLN_LINE");
                datoTabla.CON_PCKG = row.GetInt("CON_PCKG");
                datoTabla.CON_LINE = row.GetInt("CON_LINE");
                datoTabla.TMP_PCKG = row.GetInt("TMP_PCKG");
                datoTabla.TMP_LINE = row.GetInt("TMP_LINE");
                datoTabla.SSC_LIM = row.GetString("SSC_LIM");
                datoTabla.LIMIT_LINE = row.GetInt("LIMIT_LINE");
                datoTabla.TARGET_VAL = row.GetDecimal("TARGET_VAL");
                datoTabla.BASLINE_NO = row.GetInt("BASLINE_NO");
                datoTabla.BASIC_LINE = row.GetString("BASIC_LINE");
                datoTabla.ALTERNAT = row.GetString("ALTERNAT");
                datoTabla.BIDDER = row.GetString("BIDDER");
                datoTabla.SUPP_LINE = row.GetString("SUPP_LINE");
                datoTabla.OPEN_QTY = row.GetString("OPEN_QTY");
                datoTabla.INFORM = row.GetString("INFORM");
                datoTabla.BLANKET = row.GetString("BLANKET");
                datoTabla.EVENTUAL = row.GetString("EVENTUAL");
                datoTabla.TAX_CODE = row.GetString("TAX_CODE");
                datoTabla.TAXJURCODE = row.GetString("TAXJURCODE");
                datoTabla.PRICE_CHG = row.GetString("PRICE_CHG");
                datoTabla.MATL_GROUP = row.GetString("MATL_GROUP");
                datoTabla.DATE = row.GetString("DATE");
                datoTabla.BEGINTIME = row.GetString("BEGINTIME");
                datoTabla.ENDTIME = row.GetString("ENDTIME");
                datoTabla.EXTPERS_NO = row.GetString("EXTPERS_NO");
                datoTabla.FORMULA = row.GetString("FORMULA");
                datoTabla.FORM_VAL1 = row.GetDecimal("FORM_VAL1");
                datoTabla.FORM_VAL2 = row.GetDecimal("FORM_VAL2");
                datoTabla.FORM_VAL3 = row.GetDecimal("FORM_VAL3");
                datoTabla.FORM_VAL4 = row.GetDecimal("FORM_VAL4");
                datoTabla.FORM_VAL5 = row.GetDecimal("FORM_VAL5");
                datoTabla.USERF1_NUM = row.GetInt("USERF1_NUM");
                datoTabla.USERF2_NUM = row.GetDecimal("USERF2_NUM");
                datoTabla.USERF1_TXT = row.GetString("USERF1_TXT");
                datoTabla.USERF2_TXT = row.GetString("USERF2_TXT");
                datoTabla.HI_LINE_NO = row.GetInt("HI_LINE_NO");
                datoTabla.EXTREFKEY = row.GetString("EXTREFKEY");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                datoTabla.PER_SDATE = row.GetString("PER_SDATE");
                datoTabla.PER_EDATE = row.GetString("PER_EDATE");
                datoTabla.EXTERNAL_ITEM_ID = row.GetString("EXTERNAL_ITEM_ID");
                datoTabla.SERVICE_ITEM_KEY = row.GetInt("SERVICE_ITEM_KEY");
                datoTabla.NET_VALUE = row.GetDecimal("NET_VALUE");
                res.POSERVICES[i_POSERVICES] = datoTabla; ++i_POSERVICES;
            }
            IRfcTable rfcTable_POSERVICESTEXT = rfcFunction.GetTable("POSERVICESTEXT");
            res.POSERVICESTEXT = new BAPI_PO_CHANGE_POSERVICESTEXT[rfcTable_POSERVICESTEXT.RowCount];
            int i_POSERVICESTEXT = 0;
            foreach (IRfcStructure row in rfcTable_POSERVICESTEXT)
            {
                BAPI_PO_CHANGE_POSERVICESTEXT datoTabla = new BAPI_PO_CHANGE_POSERVICESTEXT();
                datoTabla.PCKG_NO = row.GetInt("PCKG_NO");
                datoTabla.LINE_NO = row.GetInt("LINE_NO");
                datoTabla.TEXT_ID = row.GetString("TEXT_ID");
                datoTabla.FORMAT_COL = row.GetString("FORMAT_COL");
                datoTabla.TEXT_LINE = row.GetString("TEXT_LINE");
                res.POSERVICESTEXT[i_POSERVICESTEXT] = datoTabla; ++i_POSERVICESTEXT;
            }
            IRfcTable rfcTable_POSHIPPING = rfcFunction.GetTable("POSHIPPING");
            res.POSHIPPING = new BAPI_PO_CHANGE_POSHIPPING[rfcTable_POSHIPPING.RowCount];
            int i_POSHIPPING = 0;
            foreach (IRfcStructure row in rfcTable_POSHIPPING)
            {
                BAPI_PO_CHANGE_POSHIPPING datoTabla = new BAPI_PO_CHANGE_POSHIPPING();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SHIP_POINT = row.GetString("SHIP_POINT");
                datoTabla.SHIP_COND = row.GetString("SHIP_COND");
                datoTabla.DLV_PRIO = row.GetInt("DLV_PRIO");
                datoTabla.ROUTE = row.GetString("ROUTE");
                datoTabla.UNLOAD_PT = row.GetString("UNLOAD_PT");
                datoTabla.AUTH_NUMBER = row.GetString("AUTH_NUMBER");
                datoTabla.SRC_DLV_NO = row.GetString("SRC_DLV_NO");
                datoTabla.SRC_HANDLG_UNIT = row.GetString("SRC_HANDLG_UNIT");
                datoTabla.INSPOUT_GUID = row.GetString("INSPOUT_GUID");
                datoTabla.FOLLOW_UP = row.GetString("FOLLOW_UP");
                datoTabla.LOADINGGRP = row.GetString("LOADINGGRP");
                datoTabla.TRANS_GRP = row.GetString("TRANS_GRP");
                res.POSHIPPING[i_POSHIPPING] = datoTabla; ++i_POSHIPPING;
            }
            IRfcTable rfcTable_POSHIPPINGEXP = rfcFunction.GetTable("POSHIPPINGEXP");
            res.POSHIPPINGEXP = new BAPI_PO_CHANGE_POSHIPPINGEXP[rfcTable_POSHIPPINGEXP.RowCount];
            int i_POSHIPPINGEXP = 0;
            foreach (IRfcStructure row in rfcTable_POSHIPPINGEXP)
            {
                BAPI_PO_CHANGE_POSHIPPINGEXP datoTabla = new BAPI_PO_CHANGE_POSHIPPINGEXP();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SHIP_POINT = row.GetString("SHIP_POINT");
                datoTabla.DLV_PRIO = row.GetInt("DLV_PRIO");
                datoTabla.ROUTE = row.GetString("ROUTE");
                datoTabla.CUSTOMER = row.GetString("CUSTOMER");
                datoTabla.SOLD_TO = row.GetString("SOLD_TO");
                datoTabla.FWDAGENT = row.GetString("FWDAGENT");
                datoTabla.SALESORG = row.GetString("SALESORG");
                datoTabla.DISTR_CHAN = row.GetString("DISTR_CHAN");
                datoTabla.DIVISION = row.GetString("DIVISION");
                datoTabla.DEL_CREATE_DATE = row.GetString("DEL_CREATE_DATE");
                datoTabla.PLND_DELRY = row.GetDecimal("PLND_DELRY");
                datoTabla.LANGU = row.GetString("LANGU");
                datoTabla.LANGU_ISO = row.GetString("LANGU_ISO");
                datoTabla.SHIP_COND = row.GetString("SHIP_COND");
                datoTabla.LOADINGGRP = row.GetString("LOADINGGRP");
                datoTabla.TRANS_GRP = row.GetString("TRANS_GRP");
                datoTabla.UNLOAD_PT = row.GetString("UNLOAD_PT");
                datoTabla.ORDCOMBIND = row.GetString("ORDCOMBIND");
                datoTabla.TIME_ZONE = row.GetString("TIME_ZONE");
                datoTabla.AUTH_NUMBER = row.GetString("AUTH_NUMBER");
                datoTabla.SRC_DLV_NO = row.GetString("SRC_DLV_NO");
                datoTabla.SRC_HANDLG_UNIT = row.GetString("SRC_HANDLG_UNIT");
                datoTabla.INSPOUT_GUID = row.GetString("INSPOUT_GUID");
                datoTabla.FOLLOW_UP = row.GetString("FOLLOW_UP");
                res.POSHIPPINGEXP[i_POSHIPPINGEXP] = datoTabla; ++i_POSHIPPINGEXP;
            }
            IRfcTable rfcTable_POSHIPPINGX = rfcFunction.GetTable("POSHIPPINGX");
            res.POSHIPPINGX = new BAPI_PO_CHANGE_POSHIPPINGX[rfcTable_POSHIPPINGX.RowCount];
            int i_POSHIPPINGX = 0;
            foreach (IRfcStructure row in rfcTable_POSHIPPINGX)
            {
                BAPI_PO_CHANGE_POSHIPPINGX datoTabla = new BAPI_PO_CHANGE_POSHIPPINGX();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.PO_ITEMX = row.GetString("PO_ITEMX");
                datoTabla.SHIP_POINT = row.GetString("SHIP_POINT");
                datoTabla.SHIP_COND = row.GetString("SHIP_COND");
                datoTabla.DLV_PRIO = row.GetString("DLV_PRIO");
                datoTabla.ROUTE = row.GetString("ROUTE");
                datoTabla.UNLOAD_PT = row.GetString("UNLOAD_PT");
                datoTabla.AUTH_NUMBER = row.GetString("AUTH_NUMBER");
                datoTabla.SRC_DLV_NO = row.GetString("SRC_DLV_NO");
                datoTabla.SRC_HANDLG_UNIT = row.GetString("SRC_HANDLG_UNIT");
                datoTabla.INSPOUT_GUID = row.GetString("INSPOUT_GUID");
                datoTabla.FOLLOW_UP = row.GetString("FOLLOW_UP");
                datoTabla.LOADINGGRP = row.GetString("LOADINGGRP");
                datoTabla.TRANS_GRP = row.GetString("TRANS_GRP");
                res.POSHIPPINGX[i_POSHIPPINGX] = datoTabla; ++i_POSHIPPINGX;
            }
            IRfcTable rfcTable_POSRVACCESSVALUES = rfcFunction.GetTable("POSRVACCESSVALUES");
            res.POSRVACCESSVALUES = new BAPI_PO_CHANGE_POSRVACCESSVALUES[rfcTable_POSRVACCESSVALUES.RowCount];
            int i_POSRVACCESSVALUES = 0;
            foreach (IRfcStructure row in rfcTable_POSRVACCESSVALUES)
            {
                BAPI_PO_CHANGE_POSRVACCESSVALUES datoTabla = new BAPI_PO_CHANGE_POSRVACCESSVALUES();
                datoTabla.PCKG_NO = row.GetInt("PCKG_NO");
                datoTabla.LINE_NO = row.GetInt("LINE_NO");
                datoTabla.SERNO_LINE = row.GetInt("SERNO_LINE");
                datoTabla.PERCENTAGE = row.GetDecimal("PERCENTAGE");
                datoTabla.SERIAL_NO = row.GetInt("SERIAL_NO");
                datoTabla.QUANTITY = row.GetDecimal("QUANTITY");
                datoTabla.NET_VALUE = row.GetDecimal("NET_VALUE");
                res.POSRVACCESSVALUES[i_POSRVACCESSVALUES] = datoTabla; ++i_POSRVACCESSVALUES;
            }
            IRfcTable rfcTable_POTEXTHEADER = rfcFunction.GetTable("POTEXTHEADER");
            res.POTEXTHEADER = new BAPI_PO_CHANGE_POTEXTHEADER[rfcTable_POTEXTHEADER.RowCount];
            int i_POTEXTHEADER = 0;
            foreach (IRfcStructure row in rfcTable_POTEXTHEADER)
            {
                BAPI_PO_CHANGE_POTEXTHEADER datoTabla = new BAPI_PO_CHANGE_POTEXTHEADER();
                datoTabla.PO_NUMBER = row.GetString("PO_NUMBER");
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.TEXT_ID = row.GetString("TEXT_ID");
                datoTabla.TEXT_FORM = row.GetString("TEXT_FORM");
                datoTabla.TEXT_LINE = row.GetString("TEXT_LINE");
                res.POTEXTHEADER[i_POTEXTHEADER] = datoTabla; ++i_POTEXTHEADER;
            }
            IRfcTable rfcTable_POTEXTITEM = rfcFunction.GetTable("POTEXTITEM");
            res.POTEXTITEM = new BAPI_PO_CHANGE_POTEXTITEM[rfcTable_POTEXTITEM.RowCount];
            int i_POTEXTITEM = 0;
            foreach (IRfcStructure row in rfcTable_POTEXTITEM)
            {
                BAPI_PO_CHANGE_POTEXTITEM datoTabla = new BAPI_PO_CHANGE_POTEXTITEM();
                datoTabla.PO_NUMBER = row.GetString("PO_NUMBER");
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.TEXT_ID = row.GetString("TEXT_ID");
                datoTabla.TEXT_FORM = row.GetString("TEXT_FORM");
                datoTabla.TEXT_LINE = row.GetString("TEXT_LINE");
                res.POTEXTITEM[i_POTEXTITEM] = datoTabla; ++i_POTEXTITEM;
            }
            IRfcTable rfcTable_RETURN = rfcFunction.GetTable("RETURN");
            res.RETURN = new BAPI_PO_CHANGE_RETURN[rfcTable_RETURN.RowCount];
            int i_RETURN = 0;
            foreach (IRfcStructure row in rfcTable_RETURN)
            {
                BAPI_PO_CHANGE_RETURN datoTabla = new BAPI_PO_CHANGE_RETURN();
                datoTabla.TYPE = row.GetString("TYPE");
                datoTabla.ID = row.GetString("ID");
                datoTabla.NUMBER = row.GetInt("NUMBER");
                datoTabla.MESSAGE = row.GetString("MESSAGE");
                datoTabla.LOG_NO = row.GetString("LOG_NO");
                datoTabla.LOG_MSG_NO = row.GetInt("LOG_MSG_NO");
                datoTabla.MESSAGE_V1 = row.GetString("MESSAGE_V1");
                datoTabla.MESSAGE_V2 = row.GetString("MESSAGE_V2");
                datoTabla.MESSAGE_V3 = row.GetString("MESSAGE_V3");
                datoTabla.MESSAGE_V4 = row.GetString("MESSAGE_V4");
                datoTabla.PARAMETER = row.GetString("PARAMETER");
                datoTabla.ROW = row.GetInt("ROW");
                datoTabla.FIELD = row.GetString("FIELD");
                datoTabla.SYSTEM = row.GetString("SYSTEM");
                res.RETURN[i_RETURN] = datoTabla; ++i_RETURN;
            }
            IRfcTable rfcTable_SERIALNUMBER = rfcFunction.GetTable("SERIALNUMBER");
            res.SERIALNUMBER = new BAPI_PO_CHANGE_SERIALNUMBER[rfcTable_SERIALNUMBER.RowCount];
            int i_SERIALNUMBER = 0;
            foreach (IRfcStructure row in rfcTable_SERIALNUMBER)
            {
                BAPI_PO_CHANGE_SERIALNUMBER datoTabla = new BAPI_PO_CHANGE_SERIALNUMBER();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SCHED_LINE = row.GetInt("SCHED_LINE");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                datoTabla.SERIALNO = row.GetString("SERIALNO");
                datoTabla.UII = row.GetString("UII");
                res.SERIALNUMBER[i_SERIALNUMBER] = datoTabla; ++i_SERIALNUMBER;
            }
            IRfcTable rfcTable_SERIALNUMBERX = rfcFunction.GetTable("SERIALNUMBERX");
            res.SERIALNUMBERX = new BAPI_PO_CHANGE_SERIALNUMBERX[rfcTable_SERIALNUMBERX.RowCount];
            int i_SERIALNUMBERX = 0;
            foreach (IRfcStructure row in rfcTable_SERIALNUMBERX)
            {
                BAPI_PO_CHANGE_SERIALNUMBERX datoTabla = new BAPI_PO_CHANGE_SERIALNUMBERX();
                datoTabla.PO_ITEM = row.GetInt("PO_ITEM");
                datoTabla.SCHED_LINE = row.GetInt("SCHED_LINE");
                datoTabla.PO_ITEMX = row.GetString("PO_ITEMX");
                datoTabla.SCHED_LINEX = row.GetString("SCHED_LINEX");
                datoTabla.DELETE_IND = row.GetString("DELETE_IND");
                datoTabla.SERIALNO = row.GetString("SERIALNO");
                datoTabla.UII = row.GetString("UII");
                res.SERIALNUMBERX[i_SERIALNUMBERX] = datoTabla; ++i_SERIALNUMBERX;
            }

            
                BAPI_TRANSACTION.Commit(configSap);
                RfcSessionManager.EndContext(configSap);
             
         
            return res;
        }
    }
    public class request_BAPI_PO_CHANGE
    {
        public String MEMORY_COMPLETE;
        public String MEMORY_UNCOMPLETE;
        public String NO_AUTHORITY;
        public String NO_MESSAGE_REQ;
        public String NO_MESSAGING;
        public String NO_PRICE_FROM_PO;
        public String PARK_COMPLETE;
        public String PARK_UNCOMPLETE;
        public BAPI_PO_CHANGE_POADDRVENDOR POADDRVENDOR;
        public BAPI_PO_CHANGE_POEXPIMPHEADER POEXPIMPHEADER;
        public BAPI_PO_CHANGE_POEXPIMPHEADERX POEXPIMPHEADERX;
        public BAPI_PO_CHANGE_POHEADER POHEADER;
        public BAPI_PO_CHANGE_POHEADERX POHEADERX;
        public String PURCHASEORDER;
        public String TESTRUN;
        public BAPI_PO_CHANGE_VERSIONS VERSIONS;
        public BAPI_PO_CHANGE_POITEM[] POITEM;
        public BAPI_PO_CHANGE_POITEMX[] POITEMX;
        public BAPI_PO_CHANGE_POCOMPONENTS[] POCOMPONENTS;
        public BAPI_PO_CHANGE_POCOMPONENTSX[] POCOMPONENTSX;

    }
    public class responce_BAPI_PO_CHANGE
    {
        public bool RESULTADO_BAPI;
        public BAPI_PO_CHANGE_ALLVERSIONS[] ALLVERSIONS;
        public BAPI_PO_CHANGE_EXTENSIONIN[] EXTENSIONIN;
        public BAPI_PO_CHANGE_EXTENSIONOUT[] EXTENSIONOUT;
        public BAPI_PO_CHANGE_INVPLANHEADER[] INVPLANHEADER;
        public BAPI_PO_CHANGE_INVPLANHEADERX[] INVPLANHEADERX;
        public BAPI_PO_CHANGE_INVPLANITEM[] INVPLANITEM;
        public BAPI_PO_CHANGE_INVPLANITEMX[] INVPLANITEMX;
        public BAPI_PO_CHANGE_NFMETALLITMS[] NFMETALLITMS;
        public BAPI_PO_CHANGE_POACCOUNT[] POACCOUNT;
        public BAPI_PO_CHANGE_POACCOUNTPROFITSEGMENT[] POACCOUNTPROFITSEGMENT;
        public BAPI_PO_CHANGE_POACCOUNTX[] POACCOUNTX;
        public BAPI_PO_CHANGE_POADDRDELIVERY[] POADDRDELIVERY;
        public BAPI_PO_CHANGE_POCOMPONENTS[] POCOMPONENTS;
        public BAPI_PO_CHANGE_POCOMPONENTSX[] POCOMPONENTSX;
        public BAPI_PO_CHANGE_POCOND[] POCOND;
        public BAPI_PO_CHANGE_POCONDHEADER[] POCONDHEADER;
        public BAPI_PO_CHANGE_POCONDHEADERX[] POCONDHEADERX;
        public BAPI_PO_CHANGE_POCONDX[] POCONDX;
        public BAPI_PO_CHANGE_POCONFIRMATION[] POCONFIRMATION;
        public BAPI_PO_CHANGE_POCONTRACTLIMITS[] POCONTRACTLIMITS;
        public BAPI_PO_CHANGE_POEXPIMPITEM[] POEXPIMPITEM;
        public BAPI_PO_CHANGE_POEXPIMPITEMX[] POEXPIMPITEMX;
        public BAPI_PO_CHANGE_POHISTORY[] POHISTORY;
        public BAPI_PO_CHANGE_POHISTORY_MA[] POHISTORY_MA;
        public BAPI_PO_CHANGE_POHISTORY_TOTALS[] POHISTORY_TOTALS;
        public BAPI_PO_CHANGE_POITEM[] POITEM;
        public BAPI_PO_CHANGE_POITEMX[] POITEMX;
        public BAPI_PO_CHANGE_POLIMITS[] POLIMITS;
        public BAPI_PO_CHANGE_POPARTNER[] POPARTNER;
        public BAPI_PO_CHANGE_POSCHEDULE[] POSCHEDULE;
        public BAPI_PO_CHANGE_POSCHEDULEX[] POSCHEDULEX;
        public BAPI_PO_CHANGE_POSERVICES[] POSERVICES;
        public BAPI_PO_CHANGE_POSERVICESTEXT[] POSERVICESTEXT;
        public BAPI_PO_CHANGE_POSHIPPING[] POSHIPPING;
        public BAPI_PO_CHANGE_POSHIPPINGEXP[] POSHIPPINGEXP;
        public BAPI_PO_CHANGE_POSHIPPINGX[] POSHIPPINGX;
        public BAPI_PO_CHANGE_POSRVACCESSVALUES[] POSRVACCESSVALUES;
        public BAPI_PO_CHANGE_POTEXTHEADER[] POTEXTHEADER;
        public BAPI_PO_CHANGE_POTEXTITEM[] POTEXTITEM;
        public BAPI_PO_CHANGE_RETURN[] RETURN;
        public BAPI_PO_CHANGE_SERIALNUMBER[] SERIALNUMBER;
        public BAPI_PO_CHANGE_SERIALNUMBERX[] SERIALNUMBERX;
    }
    public class BAPI_PO_CHANGE_POADDRVENDOR
    {
        public String PO_NUMBER;
        public String ADDR_NO;
        public String FORMOFADDR;
        public String NAME;
        public String NAME_2;
        public String NAME_3;
        public String NAME_4;
        public String C_O_NAME;
        public String CITY;
        public String DISTRICT;
        public String CITY_NO;
        public String POSTL_COD1;
        public String POSTL_COD2;
        public String POSTL_COD3;
        public String PO_BOX;
        public String PO_BOX_CIT;
        public String DELIV_DIS;
        public String STREET;
        public String STREET_NO;
        public String STR_ABBR;
        public String HOUSE_NO;
        public String STR_SUPPL1;
        public String STR_SUPPL2;
        public String LOCATION;
        public String BUILDING;
        public String FLOOR;
        public String ROOM_NO;
        public String COUNTRY;
        public String LANGU;
        public String REGION;
        public String SORT1;
        public String SORT2;
        public String TIME_ZONE;
        public String TAXJURCODE;
        public String ADR_NOTES;
        public String COMM_TYPE;
        public String TEL1_NUMBR;
        public String TEL1_EXT;
        public String FAX_NUMBER;
        public String FAX_EXTENS;
        public String STREET_LNG;
        public String DISTRCT_NO;
        public String CHCKSTATUS;
        public String PBOXCIT_NO;
        public String TRANSPZONE;
        public String HOUSE_NO2;
        public String E_MAIL;
        public String STR_SUPPL3;
        public String TITLE;
        public String COUNTRYISO;
        public String LANGU_ISO;
        public String BUILD_LONG;
        public String REGIOGROUP;
    }
    public class BAPI_PO_CHANGE_POEXPIMPHEADER
    {
        public String TRANSPORT_MODE;
        public String CUSTOMS;
    }
    public class BAPI_PO_CHANGE_POEXPIMPHEADERX
    {
        public String TRANSPORT_MODE;
        public String CUSTOMS;
    }
    public class BAPI_PO_CHANGE_POHEADER
    {
        public String PO_NUMBER;
        public String COMP_CODE;
        public String DOC_TYPE;
        public String DELETE_IND;
        public String STATUS;
        public String CREAT_DATE;
        public String CREATED_BY;
        public Int32 ITEM_INTVL;
        public String VENDOR;
        public String LANGU;
        public String LANGU_ISO;
        public String PMNTTRMS;
        public Decimal DSCNT1_TO;
        public Decimal DSCNT2_TO;
        public Decimal DSCNT3_TO;
        public Decimal DSCT_PCT1;
        public Decimal DSCT_PCT2;
        public String PURCH_ORG;
        public String PUR_GROUP;
        public String CURRENCY;
        public String CURRENCY_ISO;
        public Decimal EXCH_RATE;
        public String EX_RATE_FX;
        public String DOC_DATE;
        public String VPER_START;
        public String VPER_END;
        public String WARRANTY;
        public String QUOTATION;
        public String QUOT_DATE;
        public String REF_1;
        public String SALES_PERS;
        public String TELEPHONE;
        public String SUPPL_VEND;
        public String CUSTOMER;
        public String AGREEMENT;
        public String GR_MESSAGE;
        public String SUPPL_PLNT;
        public String INCOTERMS1;
        public String INCOTERMS2;
        public String COLLECT_NO;
        public String DIFF_INV;
        public String OUR_REF;
        public String LOGSYSTEM;
        public Int32 SUBITEMINT;
        public String PO_REL_IND;
        public String REL_STATUS;
        public String VAT_CNTRY;
        public String VAT_CNTRY_ISO;
        public Int32 REASON_CANCEL;
        public String REASON_CODE;
        public String RETENTION_TYPE;
        public Decimal RETENTION_PERCENTAGE;
        public String DOWNPAY_TYPE;
        public Decimal DOWNPAY_AMOUNT;
        public Decimal DOWNPAY_PERCENT;
        public String DOWNPAY_DUEDATE;
        public String MEMORY;
        public String MEMORYTYPE;
        public String SHIPTYPE;
        public String HANDOVERLOC;
        public String SHIPCOND;
        public String INCOTERMSV;
        public String INCOTERMS2L;
        public String INCOTERMS3L;
    }
    public class BAPI_PO_CHANGE_POHEADERX
    {
        public String PO_NUMBER;
        public String COMP_CODE;
        public String DOC_TYPE;
        public String DELETE_IND;
        public String STATUS;
        public String CREAT_DATE;
        public String CREATED_BY;
        public String ITEM_INTVL;
        public String VENDOR;
        public String LANGU;
        public String LANGU_ISO;
        public String PMNTTRMS;
        public String DSCNT1_TO;
        public String DSCNT2_TO;
        public String DSCNT3_TO;
        public String DSCT_PCT1;
        public String DSCT_PCT2;
        public String PURCH_ORG;
        public String PUR_GROUP;
        public String CURRENCY;
        public String CURRENCY_ISO;
        public String EXCH_RATE;
        public String EX_RATE_FX;
        public String DOC_DATE;
        public String VPER_START;
        public String VPER_END;
        public String WARRANTY;
        public String QUOTATION;
        public String QUOT_DATE;
        public String REF_1;
        public String SALES_PERS;
        public String TELEPHONE;
        public String SUPPL_VEND;
        public String CUSTOMER;
        public String AGREEMENT;
        public String GR_MESSAGE;
        public String SUPPL_PLNT;
        public String INCOTERMS1;
        public String INCOTERMS2;
        public String COLLECT_NO;
        public String DIFF_INV;
        public String OUR_REF;
        public String LOGSYSTEM;
        public String SUBITEMINT;
        public String PO_REL_IND;
        public String REL_STATUS;
        public String VAT_CNTRY;
        public String VAT_CNTRY_ISO;
        public String REASON_CANCEL;
        public String REASON_CODE;
        public String RETENTION_TYPE;
        public String RETENTION_PERCENTAGE;
        public String DOWNPAY_TYPE;
        public String DOWNPAY_AMOUNT;
        public String DOWNPAY_PERCENT;
        public String DOWNPAY_DUEDATE;
        public String MEMORY;
        public String MEMORYTYPE;
        public String SHIPTYPE;
        public String HANDOVERLOC;
        public String SHIPCOND;
        public String INCOTERMSV;
        public String INCOTERMS2L;
        public String INCOTERMS3L;
    }
    public class BAPI_PO_CHANGE_VERSIONS
    {
        public String POST_DATE;
        public String COMPLETED;
        public String REASON;
        public String DESCRIPTION;
        public String REQ_BY;
        public String REQ_BY_EXT;
        public String ACTIVITY;
    }
    public class BAPI_PO_CHANGE_ALLVERSIONS
    {
        public String DOC_TYPE;
        public String DOC_NUMBER;
        public Int32 ITEM_NUMBER;
        public String VERSION;
        public String CREATED_BY;
        public String CR_ON;
        public String REC_TIME;
        public String RELEASED_BY;
        public String RELEASE_DATE;
        public String RELEASE_TIME;
        public String RELEASEBY_PUR;
        public String RELEASEDATE_PUR;
        public String RELEASETIME_PUR;
        public String REASON;
        public String DESCRIPTION;
        public String REQ_BY_EXT;
        public String REQ_BY;
        public Decimal NET_VALUE;
        public Decimal VALUE_CHANGED;
        public String CURRENCY;
        public String CURRENCY_ISO;
        public String POST_DATE;
        public String COMPLETED;
        public String STATUS;
        public String DELETE_IND;
        public String STATUS_DOC_OLD;
    }
    public class BAPI_PO_CHANGE_EXTENSIONIN
    {
        public String STRUCTURE;
        public String VALUEPART1;
        public String VALUEPART2;
        public String VALUEPART3;
        public String VALUEPART4;
    }
    public class BAPI_PO_CHANGE_EXTENSIONOUT
    {
        public String STRUCTURE;
        public String VALUEPART1;
        public String VALUEPART2;
        public String VALUEPART3;
        public String VALUEPART4;
    }
    public class BAPI_PO_CHANGE_INVPLANHEADER
    {
        public Int32 DOC_ITEM;
        public String IV_PLAN_NUM;
        public String CATEGORY;
        public String IP_TYPE;
        public String SORT_FLD;
        public String START_DATE;
        public String END_DATE;
        public String HORIZON;
        public String ORGN_ST_DAT;
        public String ORGN_END_DAT;
        public String PERIOD;
        public Int32 LNGTH_STAND_PRD;
        public String REF_IV_PLAN_NUM;
        public String DATES_FROM;
        public String IN_ADVANCE;
        public String ORGN_FROM_DAT;
        public String DEV_BILL_DAT;
        public String CALENDER_ID;
        public String DATES_TO;
        public String ORGN_UNTIL_DAT;
        public String PO_NUMBER;
        public Int32 UNLIMITED;
        public String AUTO_COR_DAT;
    }
    public class BAPI_PO_CHANGE_INVPLANHEADERX
    {
        public Int32 DOC_ITEM;
        public String IV_PLAN_NUM;
        public String CATEGORY;
        public String IP_TYPE;
        public String SORT_FLD;
        public String START_DATE;
        public String END_DATE;
        public String HORIZON;
        public String ORGN_ST_DAT;
        public String ORGN_END_DAT;
        public String PERIOD;
        public String LNGTH_STAND_PRD;
        public String REF_IV_PLAN_NUM;
        public String DATES_FROM;
        public String IN_ADVANCE;
        public String ORGN_FROM_DAT;
        public String DEV_BILL_DAT;
        public String CALENDER_ID;
        public String DATES_TO;
        public String ORGN_UNTIL_DAT;
        public String PO_NUMBER;
        public String UNLIMITED;
        public String AUTO_COR_DAT;
    }
    public class BAPI_PO_CHANGE_INVPLANITEM
    {
        public Int32 DOC_ITEM;
        public String IV_PLAN_NUM;
        public Int32 IV_PLAN_ITEM;
        public String DEL_IND;
        public String DATE_CATG;
        public String DATE_DESC;
        public String SETT_DATE_FROM;
        public String BILL_RULE;
        public Decimal INVOICE_PERCENTAGE;
        public String CURRENCY;
        public String CURRENCY_ISO;
        public Decimal EXCHG_RAT_DAT;
        public Decimal BILL_VALUE;
        public String BILLING_BLOCK;
        public String BILLING_STATUS;
        public String SETT_DATE_TO;
        public String CALENDER_ID;
        public String BILL_DATE;
        public Decimal CASH_DISCOUNT;
        public Decimal REBATE_BASIS1;
        public String PRICING_OK;
        public Int32 MILESTONE_NUM;
        public String MILESTONE_USE;
        public String MANUALLY;
    }
    public class BAPI_PO_CHANGE_INVPLANITEMX
    {
        public Int32 DOC_ITEM;
        public String IV_PLAN_NUM;
        public Int32 IV_PLAN_ITEM;
        public String DEL_IND;
        public String DATE_CATG;
        public String DATE_DESC;
        public String SETT_DATE_FROM;
        public String BILL_RULE;
        public String INVOICE_PERCENTAGE;
        public String CURRENCY;
        public String CURRENCY_ISO;
        public String EXCHG_RAT_DAT;
        public String BILL_VALUE;
        public String BILLING_BLOCK;
        public String BILLING_STATUS;
        public String SETT_DATE_TO;
        public String CALENDER_ID;
        public String BILL_DATE;
        public String CASH_DISCOUNT;
        public String REBATE_BASIS1;
        public String PRICING_OK;
        public String MILESTONE_NUM;
        public String MILESTONE_USE;
        public String MANUALLY;
    }
    public class BAPI_PO_CHANGE_NFMETALLITMS
    {
        public Int32 DATA_INDEX;
        public String DOC_NUMBER;
        public Int32 ITM_NUMBER;
        public String COMPCODE;
        public Int32 FISCYEAR;
        public String NFMKEY;
        public String RATEDETKEY;
        public String BASEKEY;
        public String EXCHANGEKEY;
        public String RATEDETDAT;
        public Int32 RATEMONTH;
        public String ACTRATEDAT;
        public Decimal RATE;
        public String RATECURKY;
        public String RATECURKYISO;
        public Decimal RATEDOCCUR;
        public String INVOICEBL;
        public Decimal BVALDOCCUR;
        public String BVALCURKYD;
        public String BVALCURKYDISO;
        public Decimal NETRATE;
        public String PROVIDER;
        public String VENDORCOV;
        public String COVERAGEKY;
        public Int32 POSTINGDAYS;
        public String UPDTYPE;
    }
    public class BAPI_PO_CHANGE_POACCOUNT
    {
        public Int32 PO_ITEM;
        public Int32 SERIAL_NO;
        public String DELETE_IND;
        public String CREAT_DATE;
        public Decimal QUANTITY;
        public Decimal DISTR_PERC;
        public Decimal NET_VALUE;
        public String GL_ACCOUNT;
        public String BUS_AREA;
        public String COSTCENTER;
        public String SD_DOC;
        public Int32 ITM_NUMBER;
        public Int32 SCHED_LINE;
        public String ASSET_NO;
        public String SUB_NUMBER;
        public String ORDERID;
        public String GR_RCPT;
        public String UNLOAD_PT;
        public String CO_AREA;
        public String COSTOBJECT;
        public String PROFIT_CTR;
        public String WBS_ELEMENT;
        public String NETWORK;
        public String RL_EST_KEY;
        public String PART_ACCT;
        public String CMMT_ITEM;
        public String REC_IND;
        public String FUNDS_CTR;
        public String FUND;
        public String FUNC_AREA;
        public String REF_DATE;
        public String TAX_CODE;
        public String TAXJURCODE;
        public Decimal NOND_ITAX;
        public String ACTTYPE;
        public String CO_BUSPROC;
        public String RES_DOC;
        public Int32 RES_ITEM;
        public String ACTIVITY;
        public String GRANT_NBR;
        public String CMMT_ITEM_LONG;
        public String FUNC_AREA_LONG;
        public String BUDGET_PERIOD;
        public String FINAL_IND;
        public String FINAL_REASON;
    }
    public class BAPI_PO_CHANGE_POACCOUNTPROFITSEGMENT
    {
        public Int32 PO_ITEM;
        public Int32 SERIAL_NO;
        public String FIELDNAME;
        public String VALUE;
    }
    public class BAPI_PO_CHANGE_POACCOUNTX
    {
        public Int32 PO_ITEM;
        public Int32 SERIAL_NO;
        public String PO_ITEMX;
        public String SERIAL_NOX;
        public String DELETE_IND;
        public String CREAT_DATE;
        public String QUANTITY;
        public String DISTR_PERC;
        public String NET_VALUE;
        public String GL_ACCOUNT;
        public String BUS_AREA;
        public String COSTCENTER;
        public String SD_DOC;
        public String ITM_NUMBER;
        public String SCHED_LINE;
        public String ASSET_NO;
        public String SUB_NUMBER;
        public String ORDERID;
        public String GR_RCPT;
        public String UNLOAD_PT;
        public String CO_AREA;
        public String COSTOBJECT;
        public String PROFIT_CTR;
        public String WBS_ELEMENT;
        public String NETWORK;
        public String RL_EST_KEY;
        public String PART_ACCT;
        public String CMMT_ITEM;
        public String REC_IND;
        public String FUNDS_CTR;
        public String FUND;
        public String FUNC_AREA;
        public String REF_DATE;
        public String TAX_CODE;
        public String TAXJURCODE;
        public String NOND_ITAX;
        public String ACTTYPE;
        public String CO_BUSPROC;
        public String RES_DOC;
        public String RES_ITEM;
        public String ACTIVITY;
        public String GRANT_NBR;
        public String BUDGET_PERIOD;
        public String FINAL_IND;
        public String FINAL_REASON;
    }
    public class BAPI_PO_CHANGE_POADDRDELIVERY
    {
        public Int32 PO_ITEM;
        public String ADDR_NO;
        public String FORMOFADDR;
        public String NAME;
        public String NAME_2;
        public String NAME_3;
        public String NAME_4;
        public String C_O_NAME;
        public String CITY;
        public String DISTRICT;
        public String CITY_NO;
        public String POSTL_COD1;
        public String POSTL_COD2;
        public String POSTL_COD3;
        public String PO_BOX;
        public String PO_BOX_CIT;
        public String DELIV_DIS;
        public String STREET;
        public String STREET_NO;
        public String STR_ABBR;
        public String HOUSE_NO;
        public String STR_SUPPL1;
        public String STR_SUPPL2;
        public String LOCATION;
        public String BUILDING;
        public String FLOOR;
        public String ROOM_NO;
        public String COUNTRY;
        public String LANGU;
        public String REGION;
        public String SORT1;
        public String SORT2;
        public String TIME_ZONE;
        public String TAXJURCODE;
        public String ADR_NOTES;
        public String COMM_TYPE;
        public String TEL1_NUMBR;
        public String TEL1_EXT;
        public String FAX_NUMBER;
        public String FAX_EXTENS;
        public String STREET_LNG;
        public String DISTRCT_NO;
        public String CHCKSTATUS;
        public String PBOXCIT_NO;
        public String TRANSPZONE;
        public String HOUSE_NO2;
        public String E_MAIL;
        public String STR_SUPPL3;
        public String TITLE;
        public String COUNTRYISO;
        public String LANGU_ISO;
        public String BUILD_LONG;
        public String REGIOGROUP;
        public String SUPP_VENDOR;
        public String CUSTOMER;
        public String SC_VENDOR;
    }
    public class BAPI_PO_CHANGE_POCOMPONENTS
    {
        public Int32 PO_ITEM;
        public Int32 SCHED_LINE;
        public Int32 ITEM_NO;
        public String MATERIAL;
        public Decimal ENTRY_QUANTITY;
        public String ENTRY_UOM;
        public String ENTRY_UOM_ISO;
        public String FIXED_QUAN;
        public String PLANT;
        public String REQ_DATE;
        public String CHANGE_ID;
        public String MATERIAL_EXTERNAL;
        public String MATERIAL_GUID;
        public String MATERIAL_VERSION;
        public String ITEM_CAT;
        public Decimal REQ_QUAN;
        public String BASE_UOM;
        public String BASE_UOM_ISO;
        public String PHANT_ITEM;
        public String BATCH;
        public String MAT_PROVISION;
        public String ISS_ST_LOC;
        public String REV_LEV;
        public String REQ_SEGMENT;
        public String MATERIAL_LONG;
    }
    public class BAPI_PO_CHANGE_POCOMPONENTSX
    {
        public Int32 PO_ITEM;
        public Int32 SCHED_LINE;
        public Int32 ITEM_NO;
        public String PO_ITEMX;
        public String SCHED_LINEX;
        public String ITEM_NOX;
        public String MATERIAL;
        public String ENTRY_QUANTITY;
        public String ENTRY_UOM;
        public String ENTRY_UOM_ISO;
        public String FIXED_QUAN;
        public String PLANT;
        public String REQ_DATE;
        public String CHANGE_ID;
        public String MATERIAL_EXTERNAL;
        public String MATERIAL_GUID;
        public String MATERIAL_VERSION;
        public String REQ_QUAN;
        public String BASE_UOM;
        public String BASE_UOM_ISO;
        public String PHANT_ITEM;
        public String BATCH;
        public String MAT_PROVISION;
        public String ISS_ST_LOC;
        public String ITEM_CAT;
        public String REV_LEV;
        public String REQ_SEGMENT;
        public String MATERIAL_LONG;
    }
    public class BAPI_PO_CHANGE_POCOND
    {
        public String CONDITION_NO;
        public Int32 ITM_NUMBER;
        public Int32 COND_ST_NO;
        public Int32 COND_COUNT;
        public String COND_TYPE;
        public Decimal COND_VALUE;
        public String CURRENCY;
        public String CURRENCY_ISO;
        public String COND_UNIT;
        public String COND_UNIT_ISO;
        public Decimal COND_P_UNT;
        public String APPLICATIO;
        public String CONPRICDAT;
        public String CALCTYPCON;
        public Decimal CONBASEVAL;
        public Decimal CONEXCHRAT;
        public Decimal NUMCONVERT;
        public Decimal DENOMINATO;
        public String CONDTYPE;
        public String STAT_CON;
        public String SCALETYPE;
        public String ACCRUALS;
        public String CONINVOLST;
        public String CONDORIGIN;
        public String GROUPCOND;
        public String COND_UPDAT;
        public Int32 ACCESS_SEQ;
        public Int32 CONDCOUNT;
        public String CONDCNTRL;
        public String CONDISACTI;
        public String CONDCLASS;
        public Double FACTBASVAL;
        public String SCALEBASIN;
        public Decimal SCALBASVAL;
        public String UNITMEASUR;
        public String UNITMEASUR_ISO;
        public String CURRENCKEY;
        public String CURRENCKEY_ISO;
        public String CONDINCOMP;
        public String CONDCONFIG;
        public String CONDCHAMAN;
        public String COND_NO;
        public String CHANGE_ID;
        public String VENDOR_NO;
        public Int32 ACCESS_SEQ_LONG;
        public Int32 COND_COUNT_LONG;
    }
    public class BAPI_PO_CHANGE_POCONDHEADER
    {
        public String CONDITION_NO;
        public Int32 ITM_NUMBER;
        public Int32 COND_ST_NO;
        public Int32 COND_COUNT;
        public String COND_TYPE;
        public Decimal COND_VALUE;
        public String CURRENCY;
        public String CURRENCY_ISO;
        public String COND_UNIT;
        public String COND_UNIT_ISO;
        public Decimal COND_P_UNT;
        public String APPLICATIO;
        public String CONPRICDAT;
        public String CALCTYPCON;
        public Decimal CONBASEVAL;
        public Decimal CONEXCHRAT;
        public Decimal NUMCONVERT;
        public Decimal DENOMINATO;
        public String CONDTYPE;
        public String STAT_CON;
        public String SCALETYPE;
        public String ACCRUALS;
        public String CONINVOLST;
        public String CONDORIGIN;
        public String GROUPCOND;
        public String COND_UPDAT;
        public Int32 ACCESS_SEQ;
        public Int32 CONDCOUNT;
        public String CONDCNTRL;
        public String CONDISACTI;
        public String CONDCLASS;
        public Double FACTBASVAL;
        public String SCALEBASIN;
        public Decimal SCALBASVAL;
        public String UNITMEASUR;
        public String UNITMEASUR_ISO;
        public String CURRENCKEY;
        public String CURRENCKEY_ISO;
        public String CONDINCOMP;
        public String CONDCONFIG;
        public String CONDCHAMAN;
        public String COND_NO;
        public String CHANGE_ID;
        public String VENDOR_NO;
        public Int32 ACCESS_SEQ_LONG;
        public Int32 COND_COUNT_LONG;
    }
    public class BAPI_PO_CHANGE_POCONDHEADERX
    {
        public String CONDITION_NO;
        public Int32 ITM_NUMBER;
        public Int32 COND_ST_NO;
        public String CONDITION_NOX;
        public String ITM_NUMBERX;
        public String COND_ST_NOX;
        public String COND_COUNT;
        public String COND_TYPE;
        public String COND_VALUE;
        public String CURRENCY;
        public String CURRENCY_ISO;
        public String COND_UNIT;
        public String COND_UNIT_ISO;
        public String COND_P_UNT;
        public String APPLICATIO;
        public String CONPRICDAT;
        public String CALCTYPCON;
        public String CONBASEVAL;
        public String CONEXCHRAT;
        public String NUMCONVERT;
        public String DENOMINATO;
        public String CONDTYPE;
        public String STAT_CON;
        public String SCALETYPE;
        public String ACCRUALS;
        public String CONINVOLST;
        public String CONDORIGIN;
        public String GROUPCOND;
        public String COND_UPDAT;
        public String ACCESS_SEQ;
        public String CONDCOUNT;
        public String CONDCNTRL;
        public String CONDISACTI;
        public String CONDCLASS;
        public String FACTBASVAL;
        public String SCALEBASIN;
        public String SCALBASVAL;
        public String UNITMEASUR;
        public String UNITMEASUR_ISO;
        public String CURRENCKEY;
        public String CURRENCKEY_ISO;
        public String CONDINCOMP;
        public String CONDCONFIG;
        public String CONDCHAMAN;
        public String COND_NO;
        public String CHANGE_ID;
        public String VENDOR_NO;
        public String ACCESS_SEQ_LONG;
        public String COND_COUNT_LONG;
    }
    public class BAPI_PO_CHANGE_POCONDX
    {
        public String CONDITION_NO;
        public Int32 ITM_NUMBER;
        public Int32 COND_ST_NO;
        public String CONDITION_NOX;
        public String ITM_NUMBERX;
        public String COND_ST_NOX;
        public String COND_COUNT;
        public String COND_TYPE;
        public String COND_VALUE;
        public String CURRENCY;
        public String CURRENCY_ISO;
        public String COND_UNIT;
        public String COND_UNIT_ISO;
        public String COND_P_UNT;
        public String APPLICATIO;
        public String CONPRICDAT;
        public String CALCTYPCON;
        public String CONBASEVAL;
        public String CONEXCHRAT;
        public String NUMCONVERT;
        public String DENOMINATO;
        public String CONDTYPE;
        public String STAT_CON;
        public String SCALETYPE;
        public String ACCRUALS;
        public String CONINVOLST;
        public String CONDORIGIN;
        public String GROUPCOND;
        public String COND_UPDAT;
        public String ACCESS_SEQ;
        public String CONDCOUNT;
        public String CONDCNTRL;
        public String CONDISACTI;
        public String CONDCLASS;
        public String FACTBASVAL;
        public String SCALEBASIN;
        public String SCALBASVAL;
        public String UNITMEASUR;
        public String UNITMEASUR_ISO;
        public String CURRENCKEY;
        public String CURRENCKEY_ISO;
        public String CONDINCOMP;
        public String CONDCONFIG;
        public String CONDCHAMAN;
        public String COND_NO;
        public String CHANGE_ID;
        public String VENDOR_NO;
        public String ACCESS_SEQ_LONG;
        public String COND_COUNT_LONG;
    }
    public class BAPI_PO_CHANGE_POCONFIRMATION
    {
        public Int32 PO_ITEM;
        public Int32 CONF_SER;
        public String CONF_TYPE;
        public String CONF_NAME;
        public String DEL_DATCAT;
        public String DEL_DATCAT_EXT;
        public String DELIV_DATE;
        public String DELIV_TIME;
        public Decimal QUANTITY;
        public String DELETE_IND;
        public String DISPO_REL;
        public String RECEIPT_REL;
        public String EXT_DOC;
        public String DELIV_NUMB;
        public Int32 DELIV_ITEM;
        public String EXT_DOC_LONG;
        public String HANDOVERDATE;
        public String HANDOVERTIME;
    }
    public class BAPI_PO_CHANGE_POCONTRACTLIMITS
    {
        public Int32 PCKG_NO;
        public Int32 LINE_NO;
        public String CON_NUMBER;
        public Int32 CON_ITEM;
        public Decimal LIMIT;
        public String NO_LIMIT;
        public String PRICE_CHG;
        public String SHORT_TEXT;
        public String DELETE_IND;
    }
    public class BAPI_PO_CHANGE_POEXPIMPITEM
    {
        public Int32 PO_ITEM;
        public String BUSINESS_TRANSACTION_TYPE;
        public String EXPORT_IMPORT_PROCEDURE;
        public String COUNTRYORI;
        public String COUNTRYORI_ISO;
        public String REGIONORIG;
        public String COMM_CODE;
        public String SHIPPING_COUNTRY;
        public String SHIPPING_COUNTRY_ISO;
    }
    public class BAPI_PO_CHANGE_POEXPIMPITEMX
    {
        public Int32 PO_ITEM;
        public String BUSINESS_TRANSACTION_TYPE;
        public String EXPORT_IMPORT_PROCEDURE;
        public String COUNTRYORI;
        public String COUNTRYORI_ISO;
        public String REGIONORIG;
        public String COMM_CODE;
        public String SHIPPING_COUNTRY;
        public String SHIPPING_COUNTRY_ISO;
    }
    public class BAPI_PO_CHANGE_POHISTORY
    {
        public Int32 PO_ITEM;
        public Int32 SERIAL_NO;
        public String PROCESS_ID;
        public Int32 DOC_YEAR;
        public String MAT_DOC;
        public Int32 MATDOC_ITM;
        public String HIST_TYPE;
        public String MOVE_TYPE;
        public String PSTNG_DATE;
        public Decimal QUANTITY;
        public Decimal VAL_LOCCUR;
        public Decimal VAL_FORCUR;
        public String CURRENCY;
        public Decimal CL_VAL_LOC;
        public Decimal BLOCKED_QY;
        public Decimal BL_QTY;
        public String DB_CR_IND;
        public String VAL_TYPE;
        public String NO_MORE_GR;
        public String REF_DOC_NO;
        public Int32 REF_DOC_YR;
        public String REF_DOC;
        public Int32 REF_DOC_IT;
        public Int32 MOVE_REAS;
        public String ENTRY_DATE;
        public String ENTRY_TIME;
        public Decimal IVVAL_LOC;
        public Decimal IVVAL_FOR;
        public String MATERIAL;
        public String PLANT;
        public Int32 CONF_SER;
        public String CONDITION;
        public String TAX_CODE;
        public Decimal DELIV_QTY;
        public String DELIV_UNIT;
        public String PUR_MAT;
        public String LOC_CURR;
        public String BATCH;
        public String DOC_DATE;
        public String CURRENCY_ISO;
        public String LOC_CURR_ISO;
        public String DELIV_UNIT_ISO;
        public String MATERIAL_EXTERNAL;
        public String MATERIAL_GUID;
        public String MATERIAL_VERSION;
        public String PUR_MAT_EXTERNAL;
        public String PUR_MAT_GUID;
        public String PUR_MAT_VERSION;
        public String REF_DOC_NO_LONG;
        public String STK_SEGMENT;
        public String MATERIAL_LONG;
        public String PUR_MAT_LONG;
    }
    public class BAPI_PO_CHANGE_POHISTORY_MA
    {
        public Int32 PO_ITEM;
        public Int32 SERIAL_NO;
        public String PROCESS_ID;
        public Int32 DOC_YEAR;
        public String MAT_DOC;
        public Int32 MATDOC_ITM;
        public Int32 REF_DOC_YR;
        public String REF_DOC;
        public Int32 REF_DOC_IT;
        public String DB_CR_IND;
        public Double QUANTITY_F;
        public Decimal QUANTITY;
        public Decimal VAL_LOCCUR;
        public Decimal VAL_FORCUR;
        public Decimal CL_VAL_LOC;
        public Decimal IVVAL_LOC;
        public Decimal IVVAL_FOR;
        public String TAX_CODE;
    }
    public class BAPI_PO_CHANGE_POHISTORY_TOTALS
    {
        public Int32 PO_ITEM;
        public Int32 SERIAL_NO;
        public Decimal WITHDR_QTY;
        public Decimal BLOCKED_QY;
        public Decimal BL_QTY;
        public Decimal DELIV_QTY;
        public Decimal PO_PR_QNT;
        public Decimal VAL_GR_LOC;
        public Decimal VAL_GR_FOR;
        public Decimal IV_QTY;
        public Decimal IV_QTY_PO;
        public Decimal VAL_IV_LOC;
        public Decimal VAL_IV_FOR;
        public Decimal CL_VAL_LOC;
        public Decimal CL_VAL_FOR;
        public Decimal DOP_VL_LOC;
        public Decimal IVVAL_LOC;
        public Decimal IVVAL_FOR;
        public Decimal DL_QTY_TRSP;
        public Decimal BL_QTY_TOTAL;
        public Decimal DL_QTY_TOTAL;
        public Decimal IV_QTY_TOTAL;
        public String CURRENCY;
        public String CURRENCY_ISO;
    }
    public class BAPI_PO_CHANGE_POITEM
    {
        public Int32 PO_ITEM;
        public String DELETE_IND;
        public String SHORT_TEXT;
        public String MATERIAL;
        public String MATERIAL_EXTERNAL;
        public String MATERIAL_GUID;
        public String MATERIAL_VERSION;
        public String EMATERIAL;
        public String EMATERIAL_EXTERNAL;
        public String EMATERIAL_GUID;
        public String EMATERIAL_VERSION;
        public String PLANT;
        public String STGE_LOC;
        public String TRACKINGNO;
        public String MATL_GROUP;
        public String INFO_REC;
        public String VEND_MAT;
        public Decimal QUANTITY;
        public String PO_UNIT;
        public String PO_UNIT_ISO;
        public String ORDERPR_UN;
        public String ORDERPR_UN_ISO;
        public Decimal CONV_NUM1;
        public Decimal CONV_DEN1;
        public Decimal NET_PRICE;
        public Decimal PRICE_UNIT;
        public Decimal GR_PR_TIME;
        public String TAX_CODE;
        public String BON_GRP1;
        public String QUAL_INSP;
        public String INFO_UPD;
        public String PRNT_PRICE;
        public String EST_PRICE;
        public Decimal REMINDER1;
        public Decimal REMINDER2;
        public Decimal REMINDER3;
        public Decimal OVER_DLV_TOL;
        public String UNLIMITED_DLV;
        public Decimal UNDER_DLV_TOL;
        public String VAL_TYPE;
        public String NO_MORE_GR;
        public String FINAL_INV;
        public String ITEM_CAT;
        public String ACCTASSCAT;
        public String DISTRIB;
        public String PART_INV;
        public String GR_IND;
        public String GR_NON_VAL;
        public String IR_IND;
        public String FREE_ITEM;
        public String GR_BASEDIV;
        public String ACKN_REQD;
        public String ACKNOWL_NO;
        public String AGREEMENT;
        public Int32 AGMT_ITEM;
        public String SHIPPING;
        public String CUSTOMER;
        public String COND_GROUP;
        public String NO_DISCT;
        public Decimal PLAN_DEL;
        public Decimal NET_WEIGHT;
        public String WEIGHTUNIT;
        public String WEIGHTUNIT_ISO;
        public String TAXJURCODE;
        public String CTRL_KEY;
        public String CONF_CTRL;
        public String REV_LEV;
        public String FUND;
        public String FUNDS_CTR;
        public String CMMT_ITEM;
        public String PRICEDATE;
        public String PRICE_DATE;
        public Decimal GROSS_WT;
        public Decimal VOLUME;
        public String VOLUMEUNIT;
        public String VOLUMEUNIT_ISO;
        public String INCOTERMS1;
        public String INCOTERMS2;
        public String PRE_VENDOR;
        public String VEND_PART;
        public Int32 HL_ITEM;
        public String GR_TO_DATE;
        public String SUPP_VENDOR;
        public String SC_VENDOR;
        public String KANBAN_IND;
        public String ERS;
        public String R_PROMO;
        public Decimal POINTS;
        public String POINT_UNIT;
        public String POINT_UNIT_ISO;
        public String SEASON;
        public String SEASON_YR;
        public String BON_GRP2;
        public String BON_GRP3;
        public String SETT_ITEM;
        public Decimal MINREMLIFE;
        public String RFQ_NO;
        public Int32 RFQ_ITEM;
        public String PREQ_NO;
        public Int32 PREQ_ITEM;
        public String REF_DOC;
        public Int32 REF_ITEM;
        public String SI_CAT;
        public String RET_ITEM;
        public String AT_RELEV;
        public String ORDER_REASON;
        public String BRAS_NBM;
        public String MATL_USAGE;
        public String MAT_ORIGIN;
        public String IN_HOUSE;
        public String INDUS3;
        public String INF_INDEX;
        public String UNTIL_DATE;
        public String DELIV_COMPL;
        public String PART_DELIV;
        public String SHIP_BLOCKED;
        public String PREQ_NAME;
        public String PERIOD_IND_EXPIRATION_DATE;
        public Int32 INT_OBJ_NO;
        public Int32 PCKG_NO;
        public String BATCH;
        public String VENDRBATCH;
        public String CALCTYPE;
        public String GRANT_NBR;
        public String CMMT_ITEM_LONG;
        public String FUNC_AREA_LONG;
        public String NO_ROUNDING;
        public String PO_PRICE;
        public String SUPPL_STLOC;
        public String SRV_BASED_IV;
        public String FUNDS_RES;
        public Int32 RES_ITEM;
        public String ORIG_ACCEPT;
        public String ALLOC_TBL;
        public Int32 ALLOC_TBL_ITEM;
        public String SRC_STOCK_TYPE;
        public String REASON_REJ;
        public String CRM_SALES_ORDER_NO;
        public Int32 CRM_SALES_ORDER_ITEM_NO;
        public String CRM_REF_SALES_ORDER_NO;
        public String CRM_REF_SO_ITEM_NO;
        public Int32 PRIO_URGENCY;
        public Int32 PRIO_REQUIREMENT;
        public String REASON_CODE;
        public String FUND_LONG;
        public String LONG_ITEM_NUMBER;
        public Int32 EXTERNAL_SORT_NUMBER;
        public String EXTERNAL_HIERARCHY_TYPE;
        public Decimal RETENTION_PERCENTAGE;
        public String DOWNPAY_TYPE;
        public Decimal DOWNPAY_AMOUNT;
        public Decimal DOWNPAY_PERCENT;
        public String DOWNPAY_DUEDATE;
        public String EXT_RFX_NUMBER;
        public String EXT_RFX_ITEM;
        public String EXT_RFX_SYSTEM;
        public String SRM_CONTRACT_ID;
        public Int32 SRM_CONTRACT_ITM;
        public String BUDGET_PERIOD;
        public String BLOCK_REASON_ID;
        public String BLOCK_REASON_TEXT;
        public String SPE_CRM_FKREL;
        public String DATE_QTY_FIXED;
        public String GI_BASED_GR;
        public String SHIPTYPE;
        public String HANDOVERLOC;
        public String TC_AUT_DET;
        public String MANUAL_TC_REASON;
        public String FISCAL_INCENTIVE;
        public String FISCAL_INCENTIVE_ID;
        public String TAX_SUBJECT_ST;
        public String REQ_SEGMENT;
        public String STK_SEGMENT;
        public String SF_TXJCD;
        public String INCOTERMS2L;
        public String INCOTERMS3L;
        public String MATERIAL_LONG;
        public String EMATERIAL_LONG;
        public String SERVICEPERFORMER;
        public String PRODUCTTYPE;
        public String STARTDATE;
        public String ENDDATE;
    }
    public class BAPI_PO_CHANGE_POITEMX
    {
        public Int32 PO_ITEM;
        public String PO_ITEMX;
        public String DELETE_IND;
        public String SHORT_TEXT;
        public String MATERIAL;
        public String MATERIAL_EXTERNAL;
        public String MATERIAL_GUID;
        public String MATERIAL_VERSION;
        public String EMATERIAL;
        public String EMATERIAL_EXTERNAL;
        public String EMATERIAL_GUID;
        public String EMATERIAL_VERSION;
        public String PLANT;
        public String STGE_LOC;
        public String TRACKINGNO;
        public String MATL_GROUP;
        public String INFO_REC;
        public String VEND_MAT;
        public String QUANTITY;
        public String PO_UNIT;
        public String PO_UNIT_ISO;
        public String ORDERPR_UN;
        public String ORDERPR_UN_ISO;
        public String CONV_NUM1;
        public String CONV_DEN1;
        public String NET_PRICE;
        public String PRICE_UNIT;
        public String GR_PR_TIME;
        public String TAX_CODE;
        public String BON_GRP1;
        public String QUAL_INSP;
        public String INFO_UPD;
        public String PRNT_PRICE;
        public String EST_PRICE;
        public String REMINDER1;
        public String REMINDER2;
        public String REMINDER3;
        public String OVER_DLV_TOL;
        public String UNLIMITED_DLV;
        public String UNDER_DLV_TOL;
        public String VAL_TYPE;
        public String NO_MORE_GR;
        public String FINAL_INV;
        public String ITEM_CAT;
        public String ACCTASSCAT;
        public String DISTRIB;
        public String PART_INV;
        public String GR_IND;
        public String GR_NON_VAL;
        public String IR_IND;
        public String FREE_ITEM;
        public String GR_BASEDIV;
        public String ACKN_REQD;
        public String ACKNOWL_NO;
        public String AGREEMENT;
        public String AGMT_ITEM;
        public String SHIPPING;
        public String CUSTOMER;
        public String COND_GROUP;
        public String NO_DISCT;
        public String PLAN_DEL;
        public String NET_WEIGHT;
        public String WEIGHTUNIT;
        public String WEIGHTUNIT_ISO;
        public String TAXJURCODE;
        public String CTRL_KEY;
        public String CONF_CTRL;
        public String REV_LEV;
        public String FUND;
        public String FUNDS_CTR;
        public String CMMT_ITEM;
        public String PRICEDATE;
        public String PRICE_DATE;
        public String GROSS_WT;
        public String VOLUME;
        public String VOLUMEUNIT;
        public String VOLUMEUNIT_ISO;
        public String INCOTERMS1;
        public String INCOTERMS2;
        public String PRE_VENDOR;
        public String VEND_PART;
        public String HL_ITEM;
        public String GR_TO_DATE;
        public String SUPP_VENDOR;
        public String SC_VENDOR;
        public String KANBAN_IND;
        public String ERS;
        public String R_PROMO;
        public String POINTS;
        public String POINT_UNIT;
        public String POINT_UNIT_ISO;
        public String SEASON;
        public String SEASON_YR;
        public String BON_GRP2;
        public String BON_GRP3;
        public String SETT_ITEM;
        public String MINREMLIFE;
        public String RFQ_NO;
        public String RFQ_ITEM;
        public String PREQ_NO;
        public String PREQ_ITEM;
        public String REF_DOC;
        public String REF_ITEM;
        public String SI_CAT;
        public String RET_ITEM;
        public String AT_RELEV;
        public String ORDER_REASON;
        public String BRAS_NBM;
        public String MATL_USAGE;
        public String MAT_ORIGIN;
        public String IN_HOUSE;
        public String INDUS3;
        public String INF_INDEX;
        public String UNTIL_DATE;
        public String DELIV_COMPL;
        public String PART_DELIV;
        public String SHIP_BLOCKED;
        public String PREQ_NAME;
        public String PERIOD_IND_EXPIRATION_DATE;
        public String INT_OBJ_NO;
        public String PCKG_NO;
        public String BATCH;
        public String VENDRBATCH;
        public String CALCTYPE;
        public String NO_ROUNDING;
        public String PO_PRICE;
        public String SUPPL_STLOC;
        public String SRV_BASED_IV;
        public String FUNDS_RES;
        public String RES_ITEM;
        public String GRANT_NBR;
        public String FUNC_AREA_LONG;
        public String ORIG_ACCEPT;
        public String ALLOC_TBL;
        public String ALLOC_TBL_ITEM;
        public String SRC_STOCK_TYPE;
        public String REASON_REJ;
        public String CRM_SALES_ORDER_NO;
        public String CRM_SALES_ORDER_ITEM_NO;
        public String CRM_REF_SALES_ORDER_NO;
        public String CRM_REF_SO_ITEM_NO;
        public String PRIO_URGENCY;
        public String PRIO_REQUIREMENT;
        public String REASON_CODE;
        public String LONG_ITEM_NUMBER;
        public String EXTERNAL_SORT_NUMBER;
        public String EXTERNAL_HIERARCHY_TYPE;
        public String RETENTION_PERCENTAGE;
        public String DOWNPAY_TYPE;
        public String DOWNPAY_AMOUNT;
        public String DOWNPAY_PERCENT;
        public String DOWNPAY_DUEDATE;
        public String EXT_RFX_NUMBER;
        public String EXT_RFX_ITEM;
        public String EXT_RFX_SYSTEM;
        public String SRM_CONTRACT_ID;
        public String SRM_CONTRACT_ITM;
        public String BUDGET_PERIOD;
        public String BLOCK_REASON_ID;
        public String BLOCK_REASON_TEXT;
        public String SPE_CRM_FKREL;
        public String DATE_QTY_FIXED;
        public String GI_BASED_GR;
        public String SHIPTYPE;
        public String HANDOVERLOC;
        public String TC_AUT_DET;
        public String MANUAL_TC_REASON;
        public String FISCAL_INCENTIVE;
        public String FISCAL_INCENTIVE_ID;
        public String TAX_SUBJECT_ST;
        public String REQ_SEGMENT;
        public String STK_SEGMENT;
        public String SF_TXJCD;
        public String INCOTERMS2L;
        public String INCOTERMS3L;
        public String MATERIAL_LONG;
        public String EMATERIAL_LONG;
        public String SERVICEPERFORMER;
        public String PRODUCTTYPE;
        public String STARTDATE;
        public String ENDDATE;
    }
    public class BAPI_PO_CHANGE_POLIMITS
    {
        public Int32 PCKG_NO;
        public Decimal LIMIT;
        public String NO_LIMIT;
        public Decimal EXP_VALUE;
        public String SSC_EXIST;
        public String CON_EXIST;
        public String TMP_EXIST;
        public String PRICE_CHG;
        public Decimal FREE_LIMIT;
        public String NO_FRLIMIT;
        public String SERV_TYPE;
        public Int32 EDITION;
        public Decimal SSC_LIMIT;
        public String SSC_NOLIM;
        public String SSC_PRSCHG;
        public Decimal SSC_PERC;
        public String TMP_NUMBER;
        public Decimal TMP_LIMIT;
        public String TMP_NOLIM;
        public String TMP_PRSCHG;
        public Decimal TMP_PERC;
        public Decimal CONT_PERC;
    }
    public class BAPI_PO_CHANGE_POPARTNER
    {
        public String PARTNERDESC;
        public String LANGU;
        public String BUSPARTNO;
        public String DELETE_IND;
    }
    public class BAPI_PO_CHANGE_POSCHEDULE
    {
        public Int32 PO_ITEM;
        public Int32 SCHED_LINE;
        public String DEL_DATCAT_EXT;
        public String DELIVERY_DATE;
        public Decimal QUANTITY;
        public String DELIV_TIME;
        public String STAT_DATE;
        public String PREQ_NO;
        public Int32 PREQ_ITEM;
        public String PO_DATE;
        public String ROUTESCHED;
        public String MS_DATE;
        public String MS_TIME;
        public String LOAD_DATE;
        public String LOAD_TIME;
        public String TP_DATE;
        public String TP_TIME;
        public String GI_DATE;
        public String GI_TIME;
        public String DELETE_IND;
        public String REQ_CLOSED;
        public String GR_END_DATE;
        public String GR_END_TIME;
        public Decimal COM_QTY;
        public String COM_DATE;
        public String GEO_ROUTE;
        public String HANDOVERDATE;
        public String HANDOVERTIME;
    }
    public class BAPI_PO_CHANGE_POSCHEDULEX
    {
        public Int32 PO_ITEM;
        public Int32 SCHED_LINE;
        public String PO_ITEMX;
        public String SCHED_LINEX;
        public String DEL_DATCAT_EXT;
        public String DELIVERY_DATE;
        public String QUANTITY;
        public String DELIV_TIME;
        public String STAT_DATE;
        public String PREQ_NO;
        public String PREQ_ITEM;
        public String PO_DATE;
        public String ROUTESCHED;
        public String MS_DATE;
        public String MS_TIME;
        public String LOAD_DATE;
        public String LOAD_TIME;
        public String TP_DATE;
        public String TP_TIME;
        public String GI_DATE;
        public String GI_TIME;
        public String DELETE_IND;
        public String REQ_CLOSED;
        public String GR_END_DATE;
        public String GR_END_TIME;
        public String COM_QTY;
        public String COM_DATE;
        public String GEO_ROUTE;
        public String HANDOVERDATE;
        public String HANDOVERTIME;
    }
    public class BAPI_PO_CHANGE_POSERVICES
    {
        public Int32 PCKG_NO;
        public Int32 LINE_NO;
        public Int32 EXT_LINE;
        public Byte OUTL_LEVEL;
        public String OUTL_NO;
        public String OUTL_IND;
        public Int32 SUBPCKG_NO;
        public String SERVICE;
        public String SERV_TYPE;
        public Int32 EDITION;
        public String SSC_ITEM;
        public String EXT_SERV;
        public Decimal QUANTITY;
        public String BASE_UOM;
        public String UOM_ISO;
        public Decimal OVF_TOL;
        public String OVF_UNLIM;
        public Decimal PRICE_UNIT;
        public Decimal GR_PRICE;
        public String FROM_LINE;
        public String TO_LINE;
        public String SHORT_TEXT;
        public String DISTRIB;
        public Int32 PERS_NO;
        public String WAGETYPE;
        public Int32 PLN_PCKG;
        public Int32 PLN_LINE;
        public Int32 CON_PCKG;
        public Int32 CON_LINE;
        public Int32 TMP_PCKG;
        public Int32 TMP_LINE;
        public String SSC_LIM;
        public Int32 LIMIT_LINE;
        public Decimal TARGET_VAL;
        public Int32 BASLINE_NO;
        public String BASIC_LINE;
        public String ALTERNAT;
        public String BIDDER;
        public String SUPP_LINE;
        public String OPEN_QTY;
        public String INFORM;
        public String BLANKET;
        public String EVENTUAL;
        public String TAX_CODE;
        public String TAXJURCODE;
        public String PRICE_CHG;
        public String MATL_GROUP;
        public String DATE;
        public String BEGINTIME;
        public String ENDTIME;
        public String EXTPERS_NO;
        public String FORMULA;
        public Decimal FORM_VAL1;
        public Decimal FORM_VAL2;
        public Decimal FORM_VAL3;
        public Decimal FORM_VAL4;
        public Decimal FORM_VAL5;
        public Int32 USERF1_NUM;
        public Decimal USERF2_NUM;
        public String USERF1_TXT;
        public String USERF2_TXT;
        public Int32 HI_LINE_NO;
        public String EXTREFKEY;
        public String DELETE_IND;
        public String PER_SDATE;
        public String PER_EDATE;
        public String EXTERNAL_ITEM_ID;
        public Int32 SERVICE_ITEM_KEY;
        public Decimal NET_VALUE;
    }
    public class BAPI_PO_CHANGE_POSERVICESTEXT
    {
        public Int32 PCKG_NO;
        public Int32 LINE_NO;
        public String TEXT_ID;
        public String FORMAT_COL;
        public String TEXT_LINE;
    }
    public class BAPI_PO_CHANGE_POSHIPPING
    {
        public Int32 PO_ITEM;
        public String SHIP_POINT;
        public String SHIP_COND;
        public Int32 DLV_PRIO;
        public String ROUTE;
        public String UNLOAD_PT;
        public String AUTH_NUMBER;
        public String SRC_DLV_NO;
        public String SRC_HANDLG_UNIT;
        public String INSPOUT_GUID;
        public String FOLLOW_UP;
        public String LOADINGGRP;
        public String TRANS_GRP;
    }
    public class BAPI_PO_CHANGE_POSHIPPINGEXP
    {
        public Int32 PO_ITEM;
        public String SHIP_POINT;
        public Int32 DLV_PRIO;
        public String ROUTE;
        public String CUSTOMER;
        public String SOLD_TO;
        public String FWDAGENT;
        public String SALESORG;
        public String DISTR_CHAN;
        public String DIVISION;
        public String DEL_CREATE_DATE;
        public Decimal PLND_DELRY;
        public String LANGU;
        public String LANGU_ISO;
        public String SHIP_COND;
        public String LOADINGGRP;
        public String TRANS_GRP;
        public String UNLOAD_PT;
        public String ORDCOMBIND;
        public String TIME_ZONE;
        public String AUTH_NUMBER;
        public String SRC_DLV_NO;
        public String SRC_HANDLG_UNIT;
        public String INSPOUT_GUID;
        public String FOLLOW_UP;
    }
    public class BAPI_PO_CHANGE_POSHIPPINGX
    {
        public Int32 PO_ITEM;
        public String PO_ITEMX;
        public String SHIP_POINT;
        public String SHIP_COND;
        public String DLV_PRIO;
        public String ROUTE;
        public String UNLOAD_PT;
        public String AUTH_NUMBER;
        public String SRC_DLV_NO;
        public String SRC_HANDLG_UNIT;
        public String INSPOUT_GUID;
        public String FOLLOW_UP;
        public String LOADINGGRP;
        public String TRANS_GRP;
    }
    public class BAPI_PO_CHANGE_POSRVACCESSVALUES
    {
        public Int32 PCKG_NO;
        public Int32 LINE_NO;
        public Int32 SERNO_LINE;
        public Decimal PERCENTAGE;
        public Int32 SERIAL_NO;
        public Decimal QUANTITY;
        public Decimal NET_VALUE;
    }
    public class BAPI_PO_CHANGE_POTEXTHEADER
    {
        public String PO_NUMBER;
        public Int32 PO_ITEM;
        public String TEXT_ID;
        public String TEXT_FORM;
        public String TEXT_LINE;
    }
    public class BAPI_PO_CHANGE_POTEXTITEM
    {
        public String PO_NUMBER;
        public Int32 PO_ITEM;
        public String TEXT_ID;
        public String TEXT_FORM;
        public String TEXT_LINE;
    }
    public class BAPI_PO_CHANGE_RETURN
    {
        public String TYPE;
        public String ID;
        public Int32 NUMBER;
        public String MESSAGE;
        public String LOG_NO;
        public Int32 LOG_MSG_NO;
        public String MESSAGE_V1;
        public String MESSAGE_V2;
        public String MESSAGE_V3;
        public String MESSAGE_V4;
        public String PARAMETER;
        public Int32 ROW;
        public String FIELD;
        public String SYSTEM;
    }
    public class BAPI_PO_CHANGE_SERIALNUMBER
    {
        public Int32 PO_ITEM;
        public Int32 SCHED_LINE;
        public String DELETE_IND;
        public String SERIALNO;
        public String UII;
    }
    public class BAPI_PO_CHANGE_SERIALNUMBERX
    {
        public Int32 PO_ITEM;
        public Int32 SCHED_LINE;
        public String PO_ITEMX;
        public String SCHED_LINEX;
        public String DELETE_IND;
        public String SERIALNO;
        public String UII;
    }

}